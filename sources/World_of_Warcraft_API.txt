{{wowapi}} {{tocright}}
The '''World of Warcraft API''', or '''WoW API''', is a set of functions provided by Blizzard to interact with and modify the ''World of Warcraft'' interface and behavior through the use of addons and macros. The list of functions below is incomplete and kept up to date by user contributions; you may also be interested in [[Global functions|a manually-updated exhaustive list]] of all API functions present in the latest live client.

If you're considering contributing documentation, please read '''[[Wowpedia:How to edit API pages|How to edit API pages]]'''. In summary: update this page (and the linked pages) as needed, discuss any large-scale changes on the [[Talk:World of Warcraft API|{{discussiontab}} page]], and do not create ''empty'' stub pages.

Function names in this list are prefixed with the following tags:
* '''PROTECTED''' - This function can only be called from [[secure code]]. See the [[:Category:World of Warcraft API/Protected Functions|Protected Functions]] category.
* '''NOCOMBAT''' - This function cannot be called from insecure code while in combat.
* '''HW''' - This function may only be called in response to a hardware event (from OnClick handlers).
* '''UI''' - This function is implemented in Lua (in [[:Category:FrameXML documentation|FrameXML]]) but was considered important enough to appear here.
* '''REMOVED''' - This function has been removed from the World of Warcraft API (and will be removed from this list in around a month). For historical purposes, see the [[:Category:World of Warcraft API/Removed Functions|Removed Functions]] category.

== Global Function Groups ==
=== Account Functions ===
: UI [[API GameLimitedMode_IsActive|GameLimitedMode_IsActive]]() - Returns whether the wow account is trial or has no game time.
: [[API GetAccountExpansionLevel|GetAccountExpansionLevel]]() - Returns the highest expansion id the current account has been flagged for.
: [[API GetBillingTimeRested|GetBillingTimeRested]]() - Returns the account rested time left. This function is to limit Chinese players from playing the game for too long.
: [[API IsTrialAccount|IsTrialAccount]]() - Returns whether the player is using a trial (free-to-play) account.
: [[API IsVeteranTrialAccount|IsVeteranTrialAccount]]() - Returns whether the wow account has no game time.
: [[API NoPlayTime|NoPlayTime]]() - Returns whether the account is considered "unhealthy". This function is to limit Chinese players from playing the game for too long.
: [[API PartialPlayTime|PartialPlayTime]]() - Returns whether the account is considered "tired". This function is to limit Chinese players from playing the game for too long.

=== Achievement Functions ===
These functions were introduced in [[Patch 3.0]].
: [[API AddTrackedAchievement|AddTrackedAchievement]](achievementId) - Add an achievement to tracking.
: [[API AreAccountAchievementsHidden|AreAccountAchievementsHidden]]() -
: [[API CanShowAchievementUI|CanShowAchievementUI]]() - Returns if the AchievementUI can be displayed
: [[API ClearAchievementComparisonUnit|ClearAchievementComparisonUnit]]() - Remove the unit being compared.
: [[API GetAchievementCategory|GetAchievementCategory]](achievementID) - Return the category number the requested achievement belongs to.
: [[API GetAchievementComparisonInfo|GetAchievementComparisonInfo]](achievementID) - Return information about the comparison unit's achievements.
: [[API GetAchievementCriteriaInfo|GetAchievementCriteriaInfo]](achievementID, criteriaNum) - Return information about the requested criteria.
: [[API GetAchievementCriteriaInfoByID|GetAchievementCriteriaInfoByID]](achievementID, criteriaIndex) - Returns achievement criteria info by criteriaIndex.
: [[API GetAchievementInfo|GetAchievementInfo]]((achievementID) or (category, offset) - Return information about the requested achievement.
: [[API GetAchievementLink|GetAchievementLink]](achievementID) - Returns a [[achievementLink]] for the specified achievement.
: [[API GetAchievementNumCriteria|GetAchievementNumCriteria]](achievementID) - Return the number of criteria the requested achievement has.
: [[API GetAchievementNumRewards|GetAchievementNumRewards]](achievementID) - Return the number of rewards the requested achievement has.
: [[API GetAchievementReward|GetAchievementReward]](achievementID, rewardIndex) - Returns information about a reward item by rewardIndex.
: [[API GetCategoryAchievementPoints|GetCategoryAchievementPoints]](categoryID, includeSubCategories) -
: [[API GetCategoryInfo|GetCategoryInfo]](category) - Return information about the requested category
: [[API GetCategoryList|GetCategoryList]]() - Returns the list of achievement categories.
: [[API GetCategoryNumAchievements|GetCategoryNumAchievements]](category[, includeAll) - Return the number of achievements, and number completed and incompleted for the specific category.
: [[API GetComparisonAchievementPoints|GetComparisonAchievementPoints]]() - Return the total number of achievement points the comparison unit has earned.
: [[API GetComparisonCategoryNumAchievements|GetComparisonCategoryNumAchievements]](achievementID)) - Return a number of achievements in a category for the comparison player.
: [[API GetComparisonStatistic|GetComparisonStatistic]](achievementID) - Return the value of the requested statistic for the comparison player.
: [[API GetFilteredAchievementID|GetFilteredAchievementID]](index) - Return the ID of a filtered achievement.
: [[API GetGuildAchievementMemberInfo|GetGuildAchievementMemberInfo]](achievementID, index) -
: [[API GetGuildAchievementMembers|GetGuildAchievementMembers]](achievementID) -
: [[API GetGuildAchievementNumMembers|GetGuildAchievementNumMembers]](achievementID) -
: [[API GetLatestCompletedAchievements|GetLatestCompletedAchievements]]() - Return the ID's of the last 5 completed Achievements.
: [[API GetLatestCompletedComparisonAchievements|GetLatestCompletedComparisonAchievements]]()) - Return a list of the latest updated achievements for the comparison player.
: [[API GetLatestUpdatedComparisonStats|GetLatestUpdatedComparisonStats]]() - Return a list of the latest updated statistics for the comparison player.
: [[API GetLatestUpdatedStats|GetLatestUpdatedStats]]() - Return the ID's of the last 5 updated Statistics.
: [[API GetNextAchievement|GetNextAchievement]](achievementID) - Return the next achievement in a chain.
: [[API GetNumComparisonCompletedAchievements|GetNumComparisonCompletedAchievements]]() - Return the number of completed achievements for the comparison player.
: [[API GetNumCompletedAchievements|GetNumCompletedAchievements]]() - Return the total number of achievements, and number completed.
: [[API GetNumFilteredAchievements|GetNumFilteredAchievements]] - Returns the number of achievements that matches search text.
: [[API GetPreviousAchievement|GetPreviousAchievement]](achievementID) - Return previous related achievements.
: [[API GetStatistic|GetStatistic]](achievementID) - Return the value of the requested statistic.
: [[API GetStatisticsCategoryList|GetStatisticsCategoryList]]() - Returns the list of statistic categories.
: [[API GetTotalAchievementPoints|GetTotalAchievementPoints]]() - Return the total number of achievement points earned.
: [[API GetTrackedAchievements|GetTrackedAchievements]]() - Return the achievementID of the currently tracked achievements
: [[API GetNumTrackedAchievements|GetNumTrackedAchievements]]() - Return the total number of the currently tracked achievements
: [[API HasCompletedAnyAchievement|HasCompletedAnyAchievement]](achievementID) -
: [[API IsAchievementEligible|IsAchievementEligible]](achievementID) -
: [[API IsTrackedAchievement|IsTrackedAchievement]](achievementID) -
: [[API RemoveTrackedAchievement|RemoveTrackedAchievement]](achievementID) - Stops an achievement from being tracked
: [[API SetAchievementComparisonPortrait|SetAchievementComparisonPortrait]](texture) -
: [[API SetAchievementComparisonUnit|SetAchievementComparisonUnit]](unitId) - Set the unit to be compared to.
: [[API SetAchievementSearchString|SetAchievementSearchString]](searchText) - Starts a search for achievements containing the specified text.
: [[API SetFocusedAchievement|SetFocusedAchievement]](achievementID) -
: [[API ShowAccountAchievements|ShowAccountAchievements]]() -

=== Action Functions ===
These functions are those which operate with the action buttons (General player actions are likely in the [[#Activity Functions|Activity Functions]] section below).
: PROTECTED UI [[API ActionButtonDown|ActionButtonDown]](id) - Press the specified action button. (2.0 Protected)
: PROTECTED UI [[API ActionButtonUp|ActionButtonUp]](id) - Release the specified action button. (2.0 Protected)
: [[API ActionHasRange|ActionHasRange]](slot) - Determine if the specified action is a range restriction (1 if yes, nil if no)
: PROTECTED [[API CameraOrSelectOrMoveStart|CameraOrSelectOrMoveStart]]() - Begin "Left click" in the 3D world. (1.10 - Protected)
: PROTECTED [[API CameraOrSelectOrMoveStop|CameraOrSelectOrMoveStop]]([stickyFlag]) - End "Left click" in the 3D world. (1.10 - Protected)
: NOCOMBAT [[API ChangeActionBarPage|ChangeActionBarPage]](page) - Changes the current action bar page.
: [[API GetActionBarPage|GetActionBarPage]]() - Return the current action bar page. CURRENT_ACTIONBAR_PAGE is obsolete.
: [[API GetActionBarToggles|GetActionBarToggles]]() - Return the toggles for each action bar.
: [[API GetActionCooldown|GetActionCooldown]](slot) - This returns the cooldown values of the specified action..
: [[API GetActionCount|GetActionCount]](slot) - Get the count (bandage/potion/etc) for an action, returns 0 if none or not applicable.
: [[API GetActionInfo|GetActionInfo]](slot) - Returns type, id, subtype.
: [[API GetActionText|GetActionText]](slot) - Get the text label (macros, etc) for an action, returns nil if none.
: [[API GetActionTexture|GetActionTexture]](slot) - Gets the texture path for the specified action.
: [[API GetBonusBarOffset|GetBonusBarOffset]]() - Determine which page of bonus actions to show.
: [[API GetMouseButtonClicked|GetMouseButtonClicked]]() -Returns the name of the button that triggered a mouse down/up/click/doubleclick event. (added in 2.0.3)
: [[API GetPossessInfo|GetPossessInfo]](index) - Returns texture, name, enabled.
: [[API HasAction|HasAction]](slot) - Returns 1 if the player has an action in the specified slot, nil otherwise.
: [[API IsActionInRange|IsActionInRange]](slot) - Test if an action is in range (1=yes, 0=no, nil=not applicable).
: [[API IsAttackAction|IsAttackAction]](slot) - Return 1 if an action is an 'attack' action (flashes during combat), nil otherwise.
: [[API IsAutoRepeatAction|IsAutoRepeatAction]](slot) - Return 1 if an action is auto-repeating, nil otherwise.
: [[API IsCurrentAction|IsCurrentAction]](slot) - Return 1 if an action is the one currently underway, nil otherwise.
: [[API IsConsumableAction|IsConsumableAction]](slot) - Return 1 if an action is consumable (i.e. has a count), nil otherwise.
: [[API IsEquippedAction|IsEquippedAction]](slot) - Return 1 if an action is equipped (i.e. connected to an item that must be equipped), nil otherwise.
: [[API IsUsableAction|IsUsableAction]](slot) - Return 1 if an action can be used at present, nil otherwise.
: [[API PetHasActionBar|PetHasActionBar]]() - Determine if player has a pet with an action bar.
: NOCOMBAT [[API PickupAction|PickupAction]](slot) - Drags an action out of the specified quickbar slot and holds it on the cursor.
: NOCOMBAT [[API PickupPetAction|PickupPetAction]](slot) - Drags an action from the specified pet action bar slot into the cursor.
: [[API PlaceAction|PlaceAction]](slot) - Drops an action from the cursor into the specified quickbar slot.
: [[API SetActionBarToggles|SetActionBarToggles]](show1,show2,show3,show4[, alwaysShow]) - Set show toggle for each action bar - 'alwaysShow' added in 1.12
: [[API StopAttack|StopAttack]]() - Turns off auto-attack, if currently active. Has no effect is the player does not currently have auto-attack active.
: PROTECTED [[API TurnOrActionStart|TurnOrActionStart]]() - Begin "Right Click" in the 3D world. (1.10 - Protected)
: PROTECTED [[API TurnOrActionStop|TurnOrActionStop]]() - End "Right Click" in the 3D world. (1.10 - Protected)
: PROTECTED [[API UseAction|UseAction]](slot[, checkCursor[, onSelf]]) - This instructs the interface to use the action associated with the specified ID, optionally on the player (regardless of target)(2.0 - Protected).

=== Activity Functions ===
This section is for functions which make the player do something (and which aren't covered elsewhere, and which aren't simply confirmation steps).
: [[API AcceptDuel|AcceptDuel]]() - The player accepts the challenge to duel.
: PROTECTED [[API AttackTarget|AttackTarget]]() - Attacks the targetted unit.
: [[API CancelDuel|CancelDuel]]() - Refuse the invitation to fight a duel.
: [[API CancelLogout|CancelLogout]]() - Cancels the logout timer (from camping or quitting).
: [[API CancelSummon|CancelSummon]]() - Rejects a summon request.
: [[API ConfirmSummon|ConfirmSummon]]() - Accepts a summon request.
: PROTECTED [[API DescendStop|DescendStop]]() - The player stops descending (while swimming or flying)
: [[API Dismount|Dismount]]() - The player dismounts the current mount.
: [[API ForceQuit|ForceQuit]]() - Instantly quits the game, bypassing the timer.
: [[API GetSheathState|GetSheathState]]() - Returns the sheath state of the player's weapons.
: [[API GetPVPTimer|GetPVPTimer]]() - Returns the amount of time until your PvP flag fades.
: [[API GetSummonConfirmAreaName|GetSummonConfirmAreaName]]() - Returns the name of the area you're being summoned to.
: [[API GetSummonConfirmSummoner|GetSummonConfirmSummoner]]() - Returns the name of the player summoning you.
: [[API GetSummonConfirmTimeLeft|GetSummonConfirmTimeLeft]]() - Returns the amount of time left before the pending summon expires.
: [[API Logout|Logout]] - Logs the user out of the game.
: [[API Quit|Quit]] - Quits the game, '''not''' the Lua script.
: [[API RandomRoll|RandomRoll]](low, high) - Does a random roll between the two values.
: [[API SetPVP|SetPVP]](arg1) - Sets the players PVP mode (1 to enable, nil to toggle off eventually)
: PROTECTED [[API SitStandOrDescendStart|SitStandOrDescendStart]]() - The player sits, stands, or descends.
: [[API StartDuel|StartDuel]]("name") - Challenge someone to a duel (by name)
: [[API TogglePVP|TogglePVP]]() - Toggles PVP status
: [[API ToggleSheath|ToggleSheath]]() - Toggles sheathed or unsheathed weapons.
: [[API UseSoulstone|UseSoulstone]]() - Use an active soulstone to resurrect yourself after death. Also works for Shamans with Reincarnation available.

=== AddOn Functions ===
: [[API DisableAddOn|DisableAddOn]](index or "AddOnName") - Disable the specified AddOn for subsequent sessions.
: [[API DisableAllAddOns|DisableAllAddOns]]() - Disable all AddOns for subsequent sessions.
: [[API EnableAddOn|EnableAddOn]](index or "AddOnName") - Enable the specified AddOn for subsequent sessions.
: [[API EnableAllAddOns|EnableAllAddOns]]() - Enable all AddOns for subsequent sessions.
: [[API GetAddOnDependencies|GetAddOnDependencies]](index or "AddOnName") - Get dependency list for an AddOn.
: [[API GetAddOnEnableState|GetAddOnEnableState]](character, addonIndex) -
: [[API GetAddOnInfo|GetAddOnInfo]](index or "AddOnName") - Get information about an AddOn.
: [[API GetAddOnMetadata|GetAddOnMetadata]](index or "name", "variable") - Retrieve metadata from addon's TOC file.
: [[API GetAddOnOptionalDependencies|GetAddOnOptionalDependencies]](index or "name") - Returns a list of optional dependencies
: [[API GetNumAddOns|GetNumAddOns]]() - Get the number of user supplied AddOns.
: [[API GetRegisteredAddonMessagePrefixes|GetRegisteredAddonMessagePrefixes]]([prefixesTable]) - Returns addon message prefixes the client is currently registered to receive.
: [[API IsAddOnLoaded|IsAddOnLoaded]](index or "AddOnName") - Returns true if the specified AddOn is loaded.
: [[API IsAddOnLoadOnDemand|IsAddOnLoadOnDemand]](index or "AddOnName") - Test whether an AddOn is load-on-demand.
: [[API IsAddonMessagePrefixRegistered|IsAddonMessagePrefixRegistered]](prefix) - Returns true if prefix registered
: [[API IsAddonVersionCheckEnabled|IsAddonVersionCheckEnabled]]() -
: [[API LoadAddOn|LoadAddOn]](index or "AddOnName") - Request loading of a Load-On-Demand AddOn.
: [[API RegisterAddonMessagePrefix|RegisterAddonMessagePrefix]](prefix) -
: [[API ResetAddOns|ResetAddOns]]() -
: [[API ResetDisabledAddOns|ResetDisabledAddOns]]() -
: [[API SaveAddOns|SaveAddOns]]() -
: [[API SetAddonVersionCheck|SetAddonVersionCheck]](boolean) -

=== Archaeology Functions ===
These functions were introduced in [[Patch 4.0]].
: [[API ArchaeologyMapUpdateAll|ArchaeologyMapUpdateAll]]() Updates the digsites and returns the number of digsites in the current map-zone
: [[API ArchaeologyGetIconInfo|ArchaeologyGetIconInfo]](index)
: [[API ArcheologyGetVisibleBlobID|ArcheologyGetVisibleBlobID]](index) Returns BlobID of a digsite in the current map-zone
: [[API CanItemBeSocketedToArtifact|CanItemBeSocketedToArtifact]](itemID) - Returns 1 if item could be added to the [[API SetSelectedArtifact|selected]] artifact.
: [[API CanScanResearchSite|CanScanResearchSite]]() - Returns whether the player is currently on a digsite.
: [[API CanSolveArtifact|CanSolveArtifact]]() - Return true if artifact can be solved.
: [[API CloseResearch|CloseResearch]]() -
: [[API GetActiveArtifactByRace|GetActiveArtifactByRace]](raceIndex) - Returns the information for the active artifact of raceIndex.
: [[API GetArchaeologyInfo|GetArchaeologyInfo]]() - Returns localized name of Archaeology skill.
: [[API GetArchaeologyRaceInfo|GetArchaeologyRaceInfo]](raceIndex) - Returns the information for a specific race used in Archaeology.
: [[API GetArchaeologyRaceInfoByID|GetArchaeologyRaceInfoByID]](researchBranchID) - Return Racename and texture.
: [[API GetArtifactInfoByRace|GetArtifactInfoByRace]](raceIndex,artifactIndex) - Returns the information for a specific race's artifact.
: [[API GetNumArchaeologyRaces|GetNumArchaeologyRaces]]() - Returns the amount of Archaeology races in the game.
: [[API GetNumArtifactsByRace|GetNumArtifactsByRace]](raceIndex) - Returns the amount of artifacts the player has acquired from the provided race.
: [[API GetSelectedArtifactInfo|GetSelectedArtifactInfo]]() - Returns the information for the [[API SetSelectedArtifact|selected]] race.
: [[API GetArtifactProgress|GetArtifactProgress]]() - Returns fragment-information about the [[API SetSelectedArtifact|selected]] artifact.
: [[API IsArtifactCompletionHistoryAvailable|IsArtifactCompletionHistoryAvailable]]()
: [[API ItemAddedToArtifact|ItemAddedToArtifact]](keystoneindex) - Returns if there is a keystone in the artifact.
: [[API SetSelectedArtifact|SetSelectedArtifact]](raceIndex) - Sets the selected artifact to raceIndex.
: [[API RemoveItemFromArtifact|RemoveItemFromArtifact]]() - Remove a keystone from the [[API SetSelectedArtifact|selected]] artifact.
: [[API RequestArtifactCompletionHistory|RequestArtifactCompletionHistory]]()
: [[API SocketItemToArtifact|SocketItemToArtifact]]() - Add a keystone to the [[API SetSelectedArtifact|selected]] artifact.
: [[API SolveArtifact|SolveArtifact]]() - Solve the [[API SetSelectedArtifact|selected]] artifact.

=== Arena Functions ===
: [[API GetBattlefieldTeamInfo|GetBattlefieldTeamInfo]](index) - Gets info about a registered Arena Team at the end of an arena match.
: [[API GetCurrentArenaSeason|GetCurrentArenaSeason]]() - Gets the current Arena season.
: [[API GetPreviousArenaSeason|GetPreviousArenaSeason]]() - Gets the previous Arena season.
: [[API IsActiveBattlefieldArena|IsActiveBattlefieldArena]]() - Returns true if in an Arena Match, also Returns true for the second argument if it's a registered match.
: [[API IsArenaTeamCaptain|IsArenaTeamCaptain]](teamIndex) - Returns a value based on whether the player is the arena team captain.
: [[API IsInArenaTeam|IsInArenaTeam]]() - Returns true if you are a member of an arena team.
: [[API JoinSkirmish|JoinSkirmish]](arenaID,joinAsGroup) - Queue for a arena either solo or as a group.

=== Auction Functions ===
: [[API C_WowTokenPublic.GetListedAuctionableTokenInfo|C_WowTokenPublic.GetListedAuctionableTokenInfo]](?) -
: [[API C_WowTokenPublic.GetNumListedAuctionableTokens|C_WowTokenPublic.GetNumListedAuctionableTokens]](?) -
: [[API C_WowTokenPublic.IsAuctionableWowToken|C_WowTokenPublic.IsAuctionableWowToken]](?)
: [[API C_WowTokenPublic.UpdateListedAuctionableTokens|C_WowTokenPublic.UpdateListedAuctionableTokens]](?) -
: [[API CalculateAuctionDeposit|CalculateAuctionDeposit]](runTime, stackSize, numStacks) - Returns the required deposit for the current selling item given the specified duration (1=12h, 2=24h, 3=48h).
: [[API CanCancelAuction|CanCancelAuction]](index) - Returns 1 if auction can be canceled.
: [[API CancelSell|CancelSell]]() - Clears the auction house listing queue, not creating any additional auctions. (3.3.3)
: [[API CanSendAuctionQuery|CanSendAuctionQuery]]() - Return 1 if auction search button would be active, nil otherwise.
: [[API CancelAuction|CancelAuction]](index) - Cancel the specified auction (on the "owner" list).
: [[API ClickAuctionSellItemButton|ClickAuctionSellItemButton]]() - Puts the currently 'picked up' item into the 'create auction' slot.
: [[API CloseAuctionHouse|CloseAuctionHouse]]() - Will close the AuctionFrame if opened.
: [[API GetAuctionHouseDepositRate|GetAuctionHouseDepositRate]]() - Returns the deposit rate (percentage) for the currently open auction house (Possibly out-dated by [[API CalculateAuctionDeposit|CalculateAuctionDeposit]]).
: REMOVED [[API GetAuctionInvTypes|GetAuctionInvTypes]](classIndex, subclassIndex) - Returns types of subcategories items.
: [[API GetAuctionItemBattlePetInfo|GetAuctionItemBattlePetInfo]]("type", index) - Returns model details about the specified Battle Pet auction item.
: REMOVED [[API GetAuctionItemClasses|GetAuctionItemClasses]]() - Returns major auction item categories.
: [[API GetAuctionItemInfo|GetAuctionItemInfo]]("type", index) - Returns details about the specified auction item.
: [[API GetAuctionItemLink|GetAuctionItemLink]]("type", index) - Returns an [[itemLink]] for the specified auction item.
: [[API GetAuctionItemSubClasses|GetAuctionItemSubClasses]](classIndex) - Returns subcategories in the nth auction category.
: [[API GetAuctionItemTimeLeft|GetAuctionItemTimeLeft]]("type", index) - Returns the time left status of the specified auction item.
: [[API GetAuctionSellItemInfo|GetAuctionSellItemInfo]]() - Returns information about the current selling item (or nil if none selected).
: [[API GetAuctionSort|GetAuctionSort]](?) -
: [[API GetBidderAuctionItems|GetBidderAuctionItems]]([page]) - Returns details about an auction item on which the user is bidding (possibly out-dated by [[API GetAuctionItemInfo|GetAuctionItemInfo]]("bidder", item))
: [[API GetNumAuctionItems|GetNumAuctionItems]]("type") - Returns the size of the specified auction item list.
: [[API GetOwnerAuctionItems|GetOwnerAuctionItems]]([page]) - Returns details about an auction item of which the user is the owner (possibly out-dated by [[API GetAuctionItemInfo|GetAuctionItemInfo]]("owner", item))
: [[API GetSelectedAuctionItem|GetSelectedAuctionItem]]("type") - Returns the index (1-50) of the selected auction item or 0 if none is selected.
: [[API IsAuctionSortReversed|IsAuctionSortReversed]]("type", "sort") - Returns 1 if the specified auction list and sort is reversed, nil otherwise.
: [[API PlaceAuctionBid|PlaceAuctionBid]]("type", index, bid) - Place a bid on the selected auction item.
: [[API QueryAuctionItems|QueryAuctionItems]]("name", minLevel, maxLevel, invTypeIndex, classIndex, subclassIndex, page, isUsable, qualityIndex) - Performs a search of the auction house with the specified characteristics.
: [[API SetAuctionsTabShowing|SetAuctionsTabShowing]](showing) - Sets whether auction-related events should be delivered to the client. (3.3.3)
: [[API SetSelectedAuctionItem|SetSelectedAuctionItem]]("type", index) - Selects a specific item in the auction house.
: [[API SortAuctionApplySort|SortAuctionApplySort]](?) -
: [[API SortAuctionClearSort|SortAuctionClearSort]](?) -
: [[API SortAuctionItems|SortAuctionItems]]("type", "sort") - Request that the specified auction list be sorted by a specific column.
: [[API SortAuctionSetSort|SortAuctionSetSort]](?) -
: [[API StartAuction|StartAuction]](minBid, buyoutPrice, runTime, stackSize, numStacks) - Starts the auction you have created in the Create Auction panel.

=== Bank Functions ===
: [[API BankButtonIDToInvSlotID|BankButtonIDToInvSlotID]](buttonID, isBag) - Returns the ID number of a bank button or bag in terms of inventory slot ID.
: {{api|BuyReagentBank}}() -
: [[API CloseBankFrame|CloseBankFrame]]() - Close the bank frame if it's open.
: {{api|DepositReagentBank}}() -
: {{api|GetBankAutosortDisabled}}() -
: {{api|GetBankBagSlotFlag}}() -
: [[API GetBankSlotCost|GetBankSlotCost]](numSlots) - Returns the cost of the next bank slot.
: [[API GetNumBankSlots|GetNumBankSlots]]() - Returns total purchased bank bag slots, and a flag indicating if it's full.
: {{api|GetReagentBankCost}}() -
: {{api|IsBagSlotFlagEnabledOnOtherBankBags}}() -
: {{api|IsReagentBankUnlocked}}() -
: [[API PurchaseSlot|PurchaseSlot]]() - Buys another bank slot if available.
: {{api|ReagentBankButtonIDToInvSlotID}}() -
: {{api|SetBankAutosortDisabled}}() -
: {{api|SetBankBagSlotFlag}}() -
: {{api|SortBankBags}}() -
: {{api|SortReagentBankBags}}() -

=== Barber Shop Functions ===
These functions were introduced in [[Patch 3.0.2]].
: [[API ApplyBarberShopStyle|ApplyBarberShopStyle]]() - Purchase and apply the cosmetic changes.
: [[API BarberShopReset|BarberShopReset]]() - Reset any changes made in the Barber Shop.
: [[API CancelBarberShop|CancelBarberShop]]() - Exit the Barber Shop chair.
: [[API GetBarberShopStyleInfo|GetBarberShopStyleInfo]](id) - Returns information about the currently selected style.
: [[API GetBarberShopTotalCost|GetBarberShopTotalCost]]() - Returns the total costs of the cosmetic changes.
: [[API GetFacialHairCustomization|GetFacialHairCustomization]]() - Returns the type of facial hair customization available to the character.
: [[API GetHairCustomization|GetHairCustomization]]() - Returns the type of haircut customization available to the character.
: [[API IsBarberShopStyleValid|IsBarberShopStyleValid]]() -
: [[API SetBarberShopAlternateFormFrame|SetBarberShopAlternateFormFrame]]() -
: [[API SetNextBarberShopStyle|SetNextBarberShopStyle]](id[, reverse]) - Alters style selection in a particular category.

=== Battlefield Functions ===
: [[API AcceptAreaSpiritHeal|AcceptAreaSpiritHeal]]() - Accept a spirit heal.
: [[API AcceptBattlefieldPort|AcceptBattlefieldPort]](index[, acceptFlag]) - Accept or reject an offered battlefield port.
: [[API CancelAreaSpiritHeal|CancelAreaSpiritHeal]]() - Cancel a spirit heal.
: [[API CanJoinBattlefieldAsGroup|CanJoinBattlefieldAsGroup]]() - returns nil if the player can not do a group join for a battlefield.
: [[API CheckSpiritHealerDist|CheckSpiritHealerDist]]() - Return true if you are in range with spirit healer while dead.
: [[API GetAreaSpiritHealerTime|GetAreaSpiritHealerTime]]() - Returns the time left until the next resurrection by the Sprit Guide.
: [[API GetBattlefieldEstimatedWaitTime|GetBattlefieldEstimatedWaitTime]](index) - Get the estimated wait for entry into the battlefield.
: [[API GetBattlefieldFlagPosition|GetBattlefieldFlagPosition]](index) - Get the map position and texture of the flag.
: [[API GetBattlefieldInstanceExpiration|GetBattlefieldInstanceExpiration]]() - Get shutdown timer for the battlefield instance.
: [[API GetBattlefieldInstanceRunTime|GetBattlefieldInstanceRunTime]]() - In milliseconds, the time since battleground started (seems to be queried from server because it is not in sync with time()).
: [[API GetBattlefieldMapIconScale|GetBattlefieldMapIconScale]]() - Scale of the landmark icons on the battlefield minimap.
: [[API GetBattlefieldPortExpiration|GetBattlefieldPortExpiration]](index) - Get the remaining seconds before the battlefield port expires.
: [[API GetBattlefieldScore|GetBattlefieldScore]](index) - Get score information about a player.
: [[API GetBattlefieldStatData|GetBattlefieldStatData]](playerIndex, slotIndex) - Get information for a player from a column thats specific to a battleground (like Warsong Gulch flag captures).
: [[API GetBattlefieldStatInfo|GetBattlefieldStatInfo]](index) - Get the battleground specific column for the score board.
: [[API GetBattlefieldStatus|GetBattlefieldStatus]](index) - Get the battlefield's current status.
: [[API GetBattlefieldTimeWaited|GetBattlefieldTimeWaited]](index) - Get time waited in queue in milliseconds.
: [[API GetBattlefieldWinner|GetBattlefieldWinner]]() - Get the battlefields winner.
: [[API GetBattlegroundInfo|GetBattlegroundInfo]](index) - Returns information about a battleground type.
: [[API GetMaxBattlefieldID|GetMaxBattlefieldID]]() - Returns the max number of battlefields you can queue for.
: [[API GetNumBattlefieldFlagPositions|GetNumBattlefieldFlagPositions]]() - Get the number of flag positions available from GetBattlefieldFlagPosition().
: [[API GetNumBattlefieldScores|GetNumBattlefieldScores]]() - Returns the number of scores(players) listed in the battlefield scoreboard.
: [[API GetNumBattlefieldStats|GetNumBattlefieldStats]]() - Get the number of battleground specific columns.
: [[API GetNumWorldStateUI|GetNumWorldStateUI]]() - Get the number of WorldState UI's.
: [[API GetWorldStateUIInfo|GetWorldStateUIInfo]](index) - Get score and flag status within a battlefield.
: [[API IsPVPTimerRunning|IsPVPTimerRunning]]()
: PROTECTED [[API JoinBattlefield|JoinBattlefield]](index[, joinAs]) - Queue for a battleground either solo or as a group.
: [[API LeaveBattlefield|LeaveBattlefield]]() - Leave the current battlefield
: [[API ReportPlayerIsPVPAFK|ReportPlayerIsPVPAFK]]("unit") - Reports the specified player as AFK in a battleground.
: [[API RequestBattlefieldScoreData|RequestBattlefieldScoreData]]() - Request new data for GetBattlefieldScore().
: [[API RequestBattlegroundInstanceInfo|RequestBattlegroundInstanceInfo]](index) - Requests data about the available instances of a battleground.
: [[API SetBattlefieldScoreFaction|SetBattlefieldScoreFaction]]([faction]) - Set the faction to show on the battlefield scoreboard.

=== Binding Functions ===
: [[API GetBinding|GetBinding]](index) - Get action and key bindings for that index.
: [[API GetBindingAction|GetBindingAction]]("KEY" [,checkOverride]) - Get the action bound to that key.
: [[API GetBindingKey|GetBindingKey]]("command") - Get the key(s) bound to that action.
: UI [[API GetBindingText|GetBindingText]]("key", "prefix", returnAbbr) - Gets the string value for the key.
: [[API GetCurrentBindingSet|GetCurrentBindingSet]]() - Queries if current set of key bindings is character or account specific
: [[API GetNumBindings|GetNumBindings]]() - Get total number key bindings and headers.
: [[API LoadBindings|LoadBindings]](which) - Loads default, account or character specific key binding set into memory from disk.
: [[API RunBinding|RunBinding]]("command"[, "up"]) - Executes the key binding named "command"
: [[API SaveBindings|SaveBindings]](which) - Saves account or character specific key bindings from memory to disk.
: NOCOMBAT [[API SetBinding|SetBinding]]("key"[, "command"[, mode]]) - Sets or unsets key bindings. (2.0 - Can not be used in combat.)
: NOCOMBAT [[API SetBindingSpell|SetBindingSpell]]("KEY", "Spell Name") - Set a key binding directly to a spell, uses the same spell name syntax as /cast.
: NOCOMBAT [[API SetBindingClick|SetBindingClick]]("KEY", "ButtonName" [,"mouseButton"]) - Set a key binding directly to a Button object. The click sends a mouse down when the key is pressed, and a mouse up when it is released.
: NOCOMBAT [[API SetBindingItem|SetBindingItem]]("KEY", "itemname") -
: NOCOMBAT [[API SetBindingMacro|SetBindingMacro]]("KEY", "macroname"|macroid) -
: [[API SetConsoleKey|SetConsoleKey]]("key") - Sets the console key (normally ~ ).
: NOCOMBAT [[API SetOverrideBinding|SetOverrideBinding]](owner, isPriority, "KEY" [,"COMMAND"]) - Set (or clear) an override key binding.
: NOCOMBAT [[API SetOverrideBindingSpell|SetOverrideBindingSpell]](owner, isPriority, "KEY", "spellname") -
: NOCOMBAT [[API SetOverrideBindingClick|SetOverrideBindingClick]](owner, isPriority, "key", "buttonName" [, "mouseClick"]) - Sets an override binding that acts like a mouse click on a button.
: NOCOMBAT [[API SetOverrideBindingItem|SetOverrideBindingItem]](owner, isPriority, "KEY", "itemname") -
: NOCOMBAT [[API SetOverrideBindingMacro|SetOverrideBindingMacro]](owner, isPriority, "KEY", "macroname"|macroid) -
: NOCOMBAT [[API ClearOverrideBindings|ClearOverrideBindings]](owner) - Reset all overrides belonging to an owner.
: [[API SetMouselookOverrideBinding|SetMouselookOverrideBinding]]("KEY" [,"COMMAND"]) -
: [[API IsModifierKeyDown|IsModifierKeyDown]]() - equivalent to (IsShiftKeyDown() or IsControlKeyDown() or IsAltKeyDown()).
: [[API IsModifiedClick|IsModifiedClick]]("action") - Returns 1 if the keys for the specified action are down, nil otherwise.
: [[API IsMouseButtonDown|IsMouseButtonDown]]([button or "button"]) -

=== Black Market AH Functions ===
These functions were introduced in [[Patch 5.0.4]] with the addition of the [[Black Market Auction House]].
: [[API C_BlackMarket.Close|C_BlackMarket.Close]]() - Notifies the server that the Black Market UI was closed.
: [[API C_BlackMarket.GetHotItem|C_BlackMarket.GetHotItem]]() - Returns information about the current "hot item" at the [[Black Market Auction House]].
: [[API C_BlackMarket.GetItemInfoByID|C_BlackMarket.GetItemInfoByID]](marketID) - Returns information about a specific black market auction.
: [[API C_BlackMarket.GetItemInfoByIndex|C_BlackMarket.GetItemInfoByIndex]](index) - Returns information about a specific black market auction.
: [[API C_BlackMarket.GetNumItems|C_BlackMarket.GetNumItems]]() - Returns the number of auctions on the [[Black Market Auction House]].
: [[API C_BlackMarket.IsViewOnly|C_BlackMarket.IsViewOnly]](?) -
: HW [[API C_BlackMarket.ItemPlaceBid|C_BlackMarket.ItemPlaceBid]](marketID, bid) - Places a bid on a black market auction.
: [[API C_BlackMarket.RequestItems|C_BlackMarket.RequestItems]]() - Requests updated black market auction information from the server.

=== Buff/Debuff Functions ===
: NOCOMBAT [[API CancelUnitBuff|CancelUnitBuff]]("unit", index or "spell" [,"filter" or "rank"]) - Removes a specific buff from the player.
: PROTECTED [[API CancelShapeshiftForm|CancelShapeshiftForm]]() - Cancels a druid's shapeshift form buff.
: PROTECTED [[API CancelItemTempEnchantment|CancelItemTempEnchantment]](weaponHand) - Cancels a temporary weapon enchant on ''weaponHand'' (1 for Main hand, 2 for Off hand).
: [[API GetWeaponEnchantInfo|GetWeaponEnchantInfo]]() - Return information about main and offhand weapon enchantments.
: [[API UnitAura|UnitAura]]("unit", index or "buffName" [,filter]) - Returns information about a buff/debuff of a certain unit.
: [[API UnitBuff|UnitBuff]]("unit", index or "buffName" [,castable]) - Retrieves info about a buff of a certain unit.
: [[API UnitDebuff|UnitDebuff]]("unit", index or "buffName" [,removable]) - Retrieves info about a debuff of a certain unit.

=== Calendar Functions ===
: HW [[API CalendarAddEvent|CalendarAddEvent]]() - Saves the selected event (new events only, requires hardware input to call)
: [[API CalendarCanAddEvent|CalendarCanAddEvent]]() - Returns true if player can add an event
: [[API CalendarCanSendInvite|CalendarCanSendInvite]]() - Returns true if player can send invites
: [[API CalendarCloseEvent|CalendarCloseEvent]]() - Closes the selected event without saving it
: [[API CalendarContextDeselectEvent|CalendarContextDeselectEvent]]() - added in 3.0.8
: [[API CalendarContextEventCanComplain|CalendarContextEventCanComplain]](monthOffset, day, eventIndex) - Returns true if player can report the event as spam
: [[API CalendarContextEventCanEdit|CalendarContextEventCanEdit]](monthOffset, day, eventIndex) - Returns true if player can edit the event
: [[API CalendarContextEventCanRemove|CalendarContextEventCanRemove]](monthOffset, day, eventIndex) - Returns true if player can remove event.
: [[API CalendarContextEventClipboard|CalendarContextEventClipboard]]()
: [[API CalendarContextEventComplain|CalendarContextEventComplain]](monthOffset, day, eventIndex) - Reports the event as spam
: [[API CalendarContextEventCopy|CalendarContextEventCopy]](monthOffset, day, eventIndex) - Copies the event to the clipboard
: [[API CalendarContextEventGetCalendarType|CalendarContextEventGetCalendarType]]() - ?
: [[API CalendarContextEventPaste|CalendarContextEventPaste]](monthOffset, day) - Pastes the clipboard event to the date
: [[API CalendarContextEventRemove|CalendarContextEventRemove]](monthOffset, day, eventIndex) - Deletes the event
: [[API CalendarContextEventSignUp|CalendarContextEventSignUp]]() - ?
: [[API CalendarContextGetEventIndex|CalendarContextGetEventIndex]]() - added in 3.0.8
: [[API CalendarContextInviteAvailable|CalendarContextInviteAvailable]](monthOffset, day, eventIndex) - Accepts the invitation to the event
: [[API CalendarContextInviteDecline|CalendarContextInviteDecline]](monthOffset, day, eventIndex) - Declines the invitation to the event
: [[API CalendarContextInviteIsPending|CalendarContextInviteIsPending]](monthOffset, day, eventIndex) - Returns true if the player hasn't responded to the event invite
: [[API CalendarContextInviteTentative|CalendarContextInviteTentative]]() - ?
: [[API CalendarContextInviteType|CalendarContextInviteType]] - ?
: [[API CalendarContextInviteModeratorStatus|CalendarContextInviteModeratorStatus]](monthOffset, day, eventIndex) - ?
: [[API CalendarContextInviteRemove|CalendarContextInviteRemove]](monthOffset, day, eventIndex) - Removes the event from the calendar
: [[API CalendarContextInviteStatus|CalendarContextInviteStatus]](monthOffset, day, eventIndex) - returns inviteStatus
: [[API CalendarContextSelectEvent|CalendarContextSelectEvent]](monthOffset, day, eventIndex) - added in 3.0.8
: [[API CalendarDefaultGuildFilter|CalendarDefaultGuildFilter]]() - returns minLevel, maxLevel
: [[API CalendarEventAvailable|CalendarEventAvailable]]() - Accepts the inviation to the currently open event
: [[API CalendarEventCanEdit|CalendarEventCanEdit]]() - Returns true if the event can be edited
: [[API CalendarEventCanModerate|CalendarEventCanModerate]] - ?
: [[API CalendarEventClearAutoApprove|CalendarEventClearAutoApprove]]() - Turns off automatic confirmations
: [[API CalendarEventClearLocked|CalendarEventClearLocked]]() - Unlocks the event
: [[API CalendarEventClearModerator|CalendarEventClearModerator]]()
: [[API CalendarEventDecline|CalendarEventDecline]]() - Declines the invitation to the currently open event
: [[API CalendarEventGetCalendarType|CalendarEventGetCalendarType]]() - ?
: [[API CalendarEventGetInvite|CalendarEventGetInvite]](inviteeIndex) - Returns status information for an invitee for the currently opened event
: [[API CalendarEventGetInviteResponseTime|CalendarEventGetInviteResponseTime]](inviteIndex) - ?
: [[API CalendarEventGetInviteSortCriterion|CalendarEventGetInviteSortCriterion]]() - returns criterion, reverse
: [[API CalendarEventGetNumInvites|CalendarEventGetNumInvites]]() - Returns the number of invitees for the currently opened event
: [[API CalendarEventGetRepeatOptions|CalendarEventGetRepeatOptions]]() - Returns opt1, opt2
: [[API CalendarEventGetSelectedInvite|CalendarEventGetSelectedInvite]]() - returns inviteIndex
: [[API CalendarEventGetStatusOptions|CalendarEventGetStatusOptions]]() - Returns ??
: [[API CalendarEventGetTextures|CalendarEventGetTextures]](eventType) - Returns title1, tex1, expLvl1, title2, tex2, expLvl2, ...
: [[API CalendarEventGetTypes|CalendarEventGetTypes]]() - Returns name1, name2, ...
: [[API CalendarEventGetTypesDisplayOrdered|CalendarEventGetTypesDisplayOrdered]]()
: [[API CalendarEventHasPendingInvite|CalendarEventHasPendingInvite]]() - Returns true if the player has an unanswered invitation to the currently selected event
: [[API CalendarEventHaveSettingsChanged|CalendarEventHaveSettingsChanged]]() - Returns true if the currently open event has been modified
: [[API CalendarEventInvite|CalendarEventInvite]]("Player") - Invite player to currently selected event
: [[API CalendarEventIsModerator|CalendarEventIsModerator]]() - ?
: [[API CalendarEventRemoveInvite|CalendarEventRemoveInvite]](inviteIndex)
: [[API CalendarEventSelectInvite|CalendarEventSelectInvite]](inviteIndex)
: [[API CalendarEventSetAutoApprove|CalendarEventSetAutoApprove]]()
: [[API CalendarEventSetDate|CalendarEventSetDate]](month, day, year)
: [[API CalendarEventSetDescription|CalendarEventSetDescription]](description)
: [[API CalendarEventSetLocked|CalendarEventSetLocked]]()
: [[API CalendarEventSetLockoutDate|CalendarEventSetLockoutDate]](lockoutDate) - ??
: [[API CalendarEventSetLockoutTime|CalendarEventSetLockoutTime]](lockoutTime) - ??
: [[API CalendarEventSetModerator|CalendarEventSetModerator]](index)
: [[API CalendarEventSetRepeatOption|CalendarEventSetRepeatOption]](repeatoption)
: [[API CalendarEventSetSize|CalendarEventSetSize]] - ??
: [[API CalendarEventSetStatus|CalendarEventSetStatus]](index, status) - Sets the invitation status of a player to the current event
: [[API CalendarEventSetTextureID|CalendarEventSetTextureID]](textureIndex)
: [[API CalendarEventSetTime|CalendarEventSetTime]](hour, minute)
: [[API CalendarEventSetTitle|CalendarEventSetTitle]](title)
: [[API CalendarEventSetType|CalendarEventSetType]](type)
: [[API CalendarEventSignUp|CalendarEventSignUp]]() - ?
: [[API CalendarEventSortInvites|CalendarEventSortInvites]](criterion)
: [[API CalendarEventTentative|CalendarEventTentative]]() - ?
: [[API CalendarGetAbsMonth|CalendarGetAbsMonth]]() - returns month, year
: [[API CalendarGetDate|CalendarGetDate]]() - Call this only after PLAYER_ENTERING_WORLD event
: [[API CalendarGetDayEvent|CalendarGetDayEvent]](monthOffset, day, eventIndex)
: [[API CalendarGetDayEventSequenceInfo|CalendarGetDayEventSequenceInfo]] - Retrieve information about the specified event.
: [[API CalendarGetEventIndex|CalendarGetEventIndex]]() - returns monthOffset, day, index
: [[API CalendarGetEventInfo|CalendarGetEventInfo]]() - Returns detailed information about an event selected with CalendarOpenEvent()
: [[API CalendarGetFirstPendingInvite|CalendarGetFirstPendingInvite]](monthOffset, day) - returns eventIndex
: [[API CalendarGetGuildEventInfo|CalendarGetGuildEventInfo]](eventId) -
: [[API CalendarGetGuildEventSelectionInfo|CalendarGetGuildEventSelectionInfo]](index)
: [[API CalendarGetHolidayInfo|CalendarGetHolidayInfo]](monthOffset, day, eventIndex) - Returns Holiday Name, Holiday Description, Calendar Icon
: [[API CalendarGetMaxCreateDate|CalendarGetMaxCreateDate]]() - returns maxWeekday, maxMonth, maxDay, maxYear
: [[API CalendarGetMaxDate|CalendarGetMaxDate]]() - returns maxWeekday, maxMonth, maxDay, maxYear
: [[API CalendarGetMinDate|CalendarGetMinDate]]() - returns minWeekday, minMonth, minDay, minYear
: [[API CalendarGetMinHistoryDate|CalendarGetMinHistoryDate]]() - returns minWeekday, minMonth, minDay, minYear
: [[API CalendarGetMonth|CalendarGetMonth]]([monthOffset]) - returns month, year
: [[API CalendarGetMonthNames|CalendarGetMonthNames]]() - returns a list of the month names
: [[API CalendarGetNumDayEvents|CalendarGetNumDayEvents]](monthOffset[, day])
: [[API CalendarGetNumGuildEvents|CalendarGetNumGuildEvents]]()
: [[API CalendarGetNumPendingInvites|CalendarGetNumPendingInvites]]() - returns count
: [[API CalendarGetRaidInfo|CalendarGetRaidInfo]] (monthOffset, day, eventIndex) - returns name, calendarType, raidID, hour, minute, difficulty
: [[API CalendarGetWeekdayNames|CalendarGetWeekdayNames]]() - returns a list of the weekday names
: [[API CalendarIsActionPending|CalendarIsActionPending]]() - returns isPending
: [[API CalendarMassInviteGuild|CalendarMassInviteGuild]](minLevel, maxLevel, rank) - ?
: [[API CalendarNewEvent|CalendarNewEvent]]() - Creates and selected a new event
: [[API CalendarNewGuildAnnouncement|CalendarNewGuildAnnouncement]]() - ?
: [[API CalendarNewGuildEvent|CalendarNewGuildEvent]](minLevel, maxLevel, minRank) - Replaces the invite list of the selected new event with the specified guild members
: [[API CalendarOpenEvent|CalendarOpenEvent]](monthOffset, day, eventIndex) - Selects an existing event
: [[API CalendarRemoveEvent|CalendarRemoveEvent]]() - Removes the selected event from the calendar (invitees only)
: [[API CalendarSetAbsMonth|CalendarSetAbsMonth]](month, year) - Sets the reference month and year for functions which use a month offset
: [[API CalendarSetMonth|CalendarSetMonth]](monthOffset)
: [[API CalendarUpdateEvent|CalendarUpdateEvent]]() - Saves the selected event (existing events only, requires hardware input to call)
: [[API OpenCalendar|OpenCalendar]]() - Requests calendar information from the server. Does not open the calendar frame. (added in 3.0.8)

=== Camera Functions ===
''Mouse Look'' refers to holding down the right mouse button and controlling the movement direction. Shifting the view by holding down the ''left'' mouse button is not covered by these APIs.
: PROTECTED [[API CameraOrSelectOrMoveStart|CameraOrSelectOrMoveStart]]() - Begin "Left click" in the 3D world.
: PROTECTED [[API CameraOrSelectOrMoveStop|CameraOrSelectOrMoveStop]]([stickyFlag]) - End "Left click" in the 3D world.
: [[API CameraZoomIn|CameraZoomIn]](increment) - Zooms the camera into the viewplane by increment.
: [[API CameraZoomOut|CameraZoomOut]](increment) - Zooms the camera out of the viewplane by increment.
: [[API FlipCameraYaw|FlipCameraYaw]](degrees) - Rotates the camera about the Z-axis by the angle amount specified in degrees.
: [[API GetCameraZoom|GetCameraZoom]]() - Returns the current zoom level, ignoring camera collisions.
: [[API IsMouselooking|IsMouselooking]]() - Returns 1 if mouselook is currently active, nil otherwise.
: [[API MouselookStart|MouselookStart]]() - Enters mouse look mode; mouse movement is used to adjust movement/facing direction.
: [[API MouselookStop|MouselookStop]]() - Exits mouse look mode; mouse movement is used to move the mouse cursor.
: [[API MoveViewDownStart|MoveViewDownStart]]() - Begins rotating the camera downward.
: [[API MoveViewDownStop|MoveViewDownStop]]() - Stops rotating the camera after [[API MoveViewDownStart|MoveViewDownStart]]() is called.
: [[API MoveViewInStart|MoveViewInStart]]() - Begins zooming the camera in.
: [[API MoveViewInStop|MoveViewInStop]]() - Stops zooming the camera in after [[API MoveViewInStart|MoveViewInStart]]() is called.
: [[API MoveViewLeftStart|MoveViewLeftStart]]() - Begins rotating the camera to the Left.
: [[API MoveViewLeftStop|MoveViewLeftStop]]() - Stops rotating the camera after [[API MoveViewLeftStart|MoveViewLeftStart]]() is called.
: [[API MoveViewOutStart|MoveViewOutStart]]() - Begins zooming the camera out.
: [[API MoveViewOutStop|MoveViewOutStop]]() - Stops zooming the camera out after [[API MoveViewOutStart|MoveViewOutStart]]() is called.
: [[API MoveViewRightStart|MoveViewRightStart]]() - Begins rotating the camera to the Right.
: [[API MoveViewRightStop|MoveViewRightStop]]() - Stops rotating the camera after [[API MoveViewRightStart|MoveViewRightStart]]() is called.
: [[API MoveViewUpStart|MoveViewUpStart]]() - Begins rotating the camera upward.
: [[API MoveViewUpStop|MoveViewUpStop]]() - Stops rotating the camera after [[API MoveViewUpStart|MoveViewUpStart]]() is called.
: PROTECTED [[API PitchDownStart|PitchDownStart]]() - Begins pitching the camera Downward.
: PROTECTED [[API PitchDownStop|PitchDownStop]]() - Stops pitching the camera after [[API PitchDownStart|PitchDownStart]]() is called.
: PROTECTED [[API PitchUpStart|PitchUpStart]]() - Begins pitching the camera Upward.
: PROTECTED [[API PitchUpStop|PitchUpStop]]() - Stops pitching the camera after [[API PitchUpStart|PitchUpStart]]() is called.
: [[API NextView|NextView]]() - Cycles forward through the five predefined camera positions.
: [[API PrevView|PrevView]]() - Cycles backward through the five predefined camera positions.
: [[API ResetView|ResetView]](index) - Resets the specified (1-5) predefined camera position to it's default if it was changed using [[API SaveView|SaveView]](index).
: [[API SaveView|SaveView]](index) - Replaces the specified (1-5) predefined camera positions with the current camera position.
: [[API SetView|SetView]](index) - Sets camera position to a specified (1-5) predefined camera position.

=== Channel Functions ===
These are chat functions which are specific to channels. See also the [[#Chat Window Functions|Chat Window Functions]] and [[#Communication Functions|Communication Functions]] sections.
: [[API AddChatWindowChannel|AddChatWindowChannel]](chatFrameIndex, "channel") - Make a chat channel visible in a specific ChatFrame.
: [[API ChannelBan|ChannelBan]]("channel", "name") - Bans a player from the specified channel.
: [[API ChannelInvite|ChannelInvite]]("channel", "name") - Invites the specified user to the channel.
: [[API ChannelKick|ChannelKick]]("channel", "name") - Kicks the specified user from the channel.
: [[API ChannelModerator|ChannelModerator]]("channel", "name") - Sets the specified player as the channel moderator.
: [[API ChannelMute|ChannelMute]]("channel", "name") - Turns off the specified player's ability to speak in a channel.
: [[API ChannelToggleAnnouncements|ChannelToggleAnnouncements]]("channel") - Toggles the channel to display announcements either on or off.
: [[API ChannelUnban|ChannelUnban]]("channel", "name") - Unbans a player from a channel.
: [[API ChannelUnmoderator|ChannelUnmoderator]]("channel", "name") - Takes the specified user away from the moderator status.
: [[API ChannelUnmute|ChannelUnmute]]("channel", "name") - Unmutes the specified user from the channel.
: [[API DisplayChannelOwner|DisplayChannelOwner]]("channel") - Displays the owner of the specified channel in the default chat.
: [[API EnumerateServerChannels|EnumerateServerChannels]]() - Retrieves all available server channels (zone dependent).
: [[API GetChannelList|GetChannelList]]() - Retrieves joined channels.
: [[API GetChannelName|GetChannelName]]("channel" or index) - Retrieves the name from a specific channel.
: [[API GetChatWindowChannels|GetChatWindowChannels]](index) - Get the chat channels received by a chat window.
: [[API JoinChannelByName|JoinChannelByName]]("channel"[, "password"[, frameId]]) - Join the specified chat channel (with optional password, and register for specified frame) (updated in 1.9).
: [[API JoinPermanentChannel|JoinPermanentChannel]]("channel"[, "password"[, frameId]]) - Permanently join the specified chat channel (with optional password, and register for specified frame)
: [[API JoinTemporaryChannel|JoinTemporaryChannel]]("channel"[, "password"[, frameId]]) - Temporary join the specified chat channel (with optional password, and register for specified frame)
: [[API LeaveChannelByName|LeaveChannelByName]]("channel") - Leaves the channel with the specified name.
: [[API ListChannelByName|ListChannelByName]](channelMatch) - Lists members in the given channel to the chat window.
: [[API ListChannels|ListChannels]]() - Lists all of the channels into the chat window.
: [[API RemoveChatWindowChannel|RemoveChatWindowChannel]](chatFrameIndex, "channel") - Make a chat channel invisible (hidden) in a specific ChatFrame.
: [[API SendChatMessage|SendChatMessage]]("msg",[ "chatType",[ "language",[ "channel"]]]) - Sends a chat message.
: [[API SetChannelOwner|SetChannelOwner]]("channel", "name") - Sets the channel owner.
: [[API SetChannelPassword|SetChannelPassword]]("channel", "password") - Changes the password of the current channel.

=== Character Functions ===
: [[API AcceptResurrect|AcceptResurrect]]() - The player accepts the request from another player to resurrect him/herself.
: [[API AcceptXPLoss|AcceptXPLoss]]() - Accept the durability loss to be reborn by a spirit healer. (The name is a remnant from when sprit res was an XP loss instead.)
: [[API CheckBinderDist|CheckBinderDist]]() - Check whether the player is close enough to interact with the Hearthstone binder.
: [[API ConfirmBinder|ConfirmBinder]]() - Confirm the request to set the binding of the player's Hearthstone.
: [[API DeclineResurrect|DeclineResurrect]]() - Decline the request from another player to resurrect him/herself.
: PROTECTED [[API DestroyTotem|DestroyTotem]](slot) - Destroys a totem/minion.
: [[API GetBindLocation|GetBindLocation]]() - Get the name of the location for your Hearthstone.
: [[API GetComboPoints|GetComboPoints]]() - Get the current number of combo points.
: [[API GetCorpseRecoveryDelay|GetCorpseRecoveryDelay]]() - Time left before a player can accept a resurrection
: [[API GetCurrentTitle|GetCurrentTitle]]() - Returns the player's current [[titleId]].
: [[API GetMirrorTimerInfo|GetMirrorTimerInfo]](id) - returns information about a mirror timer (exhaustion, breath and feign death timers)
: [[API GetMirrorTimerProgress|GetMirrorTimerProgress]](id) - returns the current value of a mirror timer (exhaustion, breath and feign death timers)
: [[API GetMoney|GetMoney]]() - Returns an integer value of your held money in copper.
: [[API GetNumTitles|GetNumTitles]]() - Returns the maximum [[titleId]]
: [[API GetPowerRegen|GetPowerRegen]]() - Returns normal and combat power regeneration rates
: [[API GetPVPDesired|GetPVPDesired]]() - Returns whether the player has permanently turned on their PvP flag.
: [[API GetRangedCritChance|GetRangedCritChance]]() - Returns the players ranged critical strike chance.
: [[API GetReleaseTimeRemaining|GetReleaseTimeRemaining]]() - Returns the amount of time left before your ghost is pulled from your body.
: [[API GetResSicknessDuration|GetResSicknessDuration]]()
: [[API GetRestState|GetRestState]]() - Returns information about a player's rest state (saved up experience bonus)
: [[API GetRuneCooldown|GetRuneCooldown]](id) - Returns cooldown information about a given rune.
: [[API GetRuneCount|GetRuneCount]](slot) - Returns the number of Runes in the given slot. (Death Knight)
: REMOVED [[API GetRuneType|GetRuneType]](id) - Returns the type of rune with the given id.
: [[API GetTitleName|GetTitleName]]([[titleId]]) - Returns the player's current title name
: [[API GetXPExhaustion|GetXPExhaustion]]() - Returns your character's current rested XP, nil if character is not rested.
: [[API HasFullControl|HasFullControl]]()
: [[API HasSoulstone|HasSoulstone]]()
: [[API IsFalling|IsFalling]]() - Returns 1 if your character is currently plummeting to their doom.
: [[API IsFlying|IsFlying]]() - Returns 1 if flying, otherwise nil.
: [[API IsFlyableArea|IsFlyableArea]]() - Returns 1 if it is possible to fly here, nil otherwise.
: [[API IsIndoors|IsIndoors]]() - Returns 1 if you are indoors, otherwise nil. Returns nil for indoor areas where you can still mount.
: [[API IsMounted|IsMounted]]() - Returns 1 if mounted, otherwise nil
: [[API IsOutdoors|IsOutdoors]]() - Returns 1 if you are outdoors, otherwise nil. Returns 1 for indoor areas where you can still mount.
: [[API IsOutOfBounds|IsOutOfBounds]]() - Returns 1 if you fell off the map.
: [[API IsResting|IsResting]]() - Returns 1 if your character is currently resting.
: [[API IsStealthed|IsStealthed]]() - Returns 1 if stealthed or shadowmeld, otherwise nil
: [[API IsSwimming|IsSwimming]]() - Returns 1 if your character is currently swimming.
: [[API IsTitleKnown|IsTitleKnown]](index) - Returns 1 if the title is valid for the player, otherwise 0.
: [[API IsXPUserDisabled|IsXPUserDisabled]]() - Returns 1 if the character has disabled experience gain.
: [[API NotWhileDeadError|NotWhileDeadError]]() - Generates an error message saying you cannot do that while dead.
: [[API ResurrectHasSickness|ResurrectHasSickness]]() - Appears to be used when accepting a resurrection will give you resurrection sickessness.
: [[API ResurrectHasTimer|ResurrectHasTimer]]() - Does the player have to wait before accepting a resurrection
: [[API ResurrectGetOfferer|ResurrectGetOfferer]]() - Returns the name of the person offering to resurrect you.
: [[API RetrieveCorpse|RetrieveCorpse]]() - Resurrects when near corpse. e.g., The "Accept" button one sees after running back to your body.
: HW [[API SetCurrentTitle|SetCurrentTitle]]([[titleId]]) - Sets the player's current title id
: [[API TargetTotem|TargetTotem]]() - added in 3.0.8

=== Character Statistics Functions ===
: [[API GetAttackPowerForStat|GetAttackPowerForStat]](stat, value) - Returns the amount of attack power contributed by a specified amount of a particular stat.
: [[API GetBlockChance|GetBlockChance]]() - Returns the player's percentage block chance.
: [[API GetCombatRating|GetCombatRating]](ratingID) - Returns the player's combat rating for a particular combat rating. (2.0)
: [[API GetCombatRatingBonus|GetCombatRatingBonus]](ratingID) - Returns the player's combat rating bonus for a particular combat rating. (2.0)
: [[API GetCritChance|GetCritChance]]() - Returns the player's melee critical hit chance
: REMOVED [[API GetCritChanceFromAgility|GetCritChanceFromAgility]]("unit") - Returns the amount of your critical hit chance contributed by Agility.
: [[API GetDodgeChance|GetDodgeChance]]() - Returns the player's percentage dodge chance.
: [[API GetExpertise|GetExpertise]]() - Returns the player's expertise percentage for main hand, offhand and ranged attacks.
: [[API GetHaste|GetHaste]]() - Returns the player's haste percentage.
: [[API GetHitModifier|GetHitModifier]]() -
: [[API GetManaRegen|GetManaRegen]]() - Returns the player's mana regeneration rates.
: [[API GetMastery|GetMastery]]() - Returns the player's mastery before mastery rating.
: [[API GetMasteryEffect|GetMasteryEffect]]() Returns the player's buffed mastery in percentage and (unknown number value).
: [[API GetMaxCombatRatingBonus|GetMaxCombatRatingBonus]](lowestRating)
: [[API GetMeleeHaste|GetMeleeHaste]]() - Returns player's Melee attack haste.
: [[API GetModResilienceDamageReduction|GetModResilienceDamageReduction]]() -
: [[API GetOverrideAPBySpellPower|GetOverrideAPBySpellPower]]() -
: [[API GetOverrideSpellPowerByAP|GetOverrideSpellPowerByAP]]() -
: [[API GetParryChance|GetParryChance]]() - Returns the player's percentage parry chance.
: [[API GetPetMeleeHaste|GetPetMeleeHaste]]() -
: [[API GetPetSpellBonusDamage|GetPetSpellBonusDamage]]() -
: [[API GetPowerRegenForPowerType|GetPowerRegenForPowerType]]("POWER_TYPE") -
: [[API GetRangedCritChance|GetRangedCritChance]]()
: [[API GetShieldBlock|GetShieldBlock]]()
: [[API GetSpellBonusDamage|GetSpellBonusDamage]](spellTreeID) - Returns the raw spell damage of the player for a given spell tree.
: [[API GetSpellBonusHealing|GetSpellBonusHealing]]() - Returns the raw bonus healing of the player.
: [[API GetSpellCritChance|GetSpellCritChance]](school) - returns the players critical hit chance with a particular spell school.
: REMOVED [[API GetSpellCritChanceFromIntellect|GetSpellCritChanceFromIntellect]]("unit")
: [[API GetSpellHitModifier|GetSpellHitModifier]]() -
: [[API GetSpellPenetration|GetSpellPenetration]]()

=== Chat Window Functions ===
These are functions which are specific to chat ''window'' management. Also see the [[#Channel Functions|Channel Functions]] and [[#Communication Functions|Communication Functions]] sections.
: [[API AddChatWindowChannel|AddChatWindowChannel]](chatFrameIndex, "channel") - Make a chat channel visible in a specific ChatFrame.
: [[API AddChatWindowMessages|AddChatWindowMessages]] - Adds a messaging group to the specified chat window.
: [[API ChangeChatColor|ChangeChatColor]](channelname,r,g,b) - Update the color for a type of chat message.
: UI [[API ChatFrame_AddChannel|ChatFrame_AddChannel]](chatFrame, "channelName") - Activate channel in chatFrame.
: UI [[API ChatFrame_AddMessageEventFilter|ChatFrame_AddMessageEventFilter]]("event", filterFunc) - Add a chat message filtering function (added in 2.4)
: UI [[API ChatFrame_GetMessageEventFilters|ChatFrame_GetMessageEventFilters]]("event") - Retreive the list of chat message filtering functions. (added in 2.4)
: UI [[API ChatFrame_OnHyperlinkShow|ChatFrame_OnHyperlinkShow]](reference, link, button) - called when the user clicks on a chatlink.
: UI [[API ChatFrame_RemoveMessageEventFilter|ChatFrame_RemoveMessageEventFilter]]("event", filterFunc) - Unregister a chat message filtering function (added in 2.4)
: [[API GetAutoCompleteResults|GetAutoCompleteResults]]("text", include, exclude, maxResults[, cursorPosition]) - Returns possible player names matching a given prefix string and specified requirements.
: [[API GetChatTypeIndex|GetChatTypeIndex]](type) - Get the numeric ID of a type of chat message.
: [[API GetChatWindowChannels|GetChatWindowChannels]](index) - Get the chat channels received by a chat window.
: [[API GetChatWindowInfo|GetChatWindowInfo]](index) - Get setup information about a chat window.
: [[API GetChatWindowMessages|GetChatWindowMessages]](index) - Get the chat message types received by a chat window.
: [[API JoinChannelByName|JoinChannelByName]]("channel"[, "password"[, frameId]]) - Join the specified chat channel (with optional password, and register for specified frame) (updated in 1.9)
: [[API LoggingChat|LoggingChat]](newState) - Gets or sets whether logging chat to Logs\WoWChatLog.txt is enabled.
: [[API LoggingCombat|LoggingCombat]](newState) - Gets or sets whether logging combat to Logs\WoWCombatLog.txt is enabled.
: [[API RemoveChatWindowChannel|RemoveChatWindowChannel]](chatFrameIndex, "channel") - Make a chat channel invisible (hidden) in a specific ChatFrame.
: [[API RemoveChatWindowMessages|RemoveChatWindowMessages]](chatFrameIndex,"messageGroup") - Remove a set of chat messages from this window.

These functions get applied after Reload UI (index 1 is General and index 2 is Combat Log):
: [[API SetChatWindowAlpha|SetChatWindowAlpha]](index,alpha) - Sets the Alpha value(transparency) of ChatFrame<index> (alpha - 0-100)
: [[API SetChatWindowColor|SetChatWindowColor]](index,r,g,b) - Sets the background color of a a chat window. (r/g/b - 0-255)
: [[API SetChatWindowDocked|SetChatWindowDocked]](index,docked) - Set whether a chat window is docked. (docked - 0/1)
: [[API SetChatWindowLocked|SetChatWindowLocked]](index,locked) - Sets ChatFrame<index> so that it is or is not movable. (locked - 0/1)
: [[API SetChatWindowName|SetChatWindowName]](index,"name") - Sets the name of ChatFrame<index> to <"name">.
: [[API SetChatWindowShown|SetChatWindowShown]](index,shown) - Shows or Hides ChatFrame<index> depending on value of <shown> (shown - 0/1)
: [[API SetChatWindowSize|SetChatWindowSize]](index,size) - Sets the font size of a chat window. (size - default 14)
: [[API SetChatWindowUninteractable|SetChatWindowUninteractable]](id, isUninteractable) - added in 3.0.8

=== Commentator Functions ===
These functions are only unprotected for tournaments, generally.
: PROTECTED [[API C_Commentator.AddPlayerOverrideName|C_Commentator.AddPlayerOverrideName]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ClearCameraTarget|C_Commentator.ClearCameraTarget]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ClearFollowTarget|C_Commentator.ClearFollowTarget]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ClearLookAtTarget|C_Commentator.ClearLookAtTarget]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.EnterInstance|C_Commentator.EnterInstance]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ExitInstance|C_Commentator.ExitInstance]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.FollowPlayer|C_Commentator.FollowPlayer]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.FollowUnit|C_Commentator.FollowUnit]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetAdditionalCameraWeight|C_Commentator.GetAdditionalCameraWeight]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetAllPlayerOverrideNames|C_Commentator.GetAllPlayerOverrideNames]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetCamera|C_Commentator.GetCamera]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetCameraPosition|C_Commentator.GetCameraPosition]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetCurrentMapID|C_Commentator.GetCurrentMapID]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetDistanceBeforeForcedHorizontalConvergence|C_Commentator.GetDistanceBeforeForcedHorizontalConvergence]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetDurationToForceHorizontalConvergence|C_Commentator.GetDurationToForceHorizontalConvergence]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetExcludeDistance|C_Commentator.GetExcludeDistance]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetHardlockWeight|C_Commentator.GetHardlockWeight]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetHorizontalAngleThresholdToSmooth|C_Commentator.GetHorizontalAngleThresholdToSmooth]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetInstanceInfo|C_Commentator.GetInstanceInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetLookAtLerpAmount|C_Commentator.GetLookAtLerpAmount]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetMapInfo|C_Commentator.GetMapInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetMaxNumPlayersPerTeam|C_Commentator.GetMaxNumPlayersPerTeam]]
: PROTECTED [[API C_Commentator.GetMaxNumTeams|C_Commentator.GetMaxNumTeams]]
: PROTECTED [[API C_Commentator.GetMode|C_Commentator.GetMode]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetMsToHoldForHorizontalMovement|C_Commentator.GetMsToHoldForHorizontalMovement]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetMsToHoldForVerticalMovement|C_Commentator.GetMsToHoldForVerticalMovement]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetMsToSmoothHorizontalChange|C_Commentator.GetMsToSmoothHorizontalChange]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetMsToSmoothVerticalChange|C_Commentator.GetMsToSmoothVerticalChange]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetNumMaps|C_Commentator.GetNumMaps]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetNumPlayers|C_Commentator.GetNumPlayers]]- This function is not yet documented.
: PROTECTED [[API C_Commentator.GetPlayerCooldownInfo|C_Commentator.GetPlayerCooldownInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetPlayerFlagInfo|C_Commentator.GetPlayerFlagInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetPlayerInfo|C_Commentator.GetPlayerInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetPlayerOverrideName|C_Commentator.GetPlayerOverrideName]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetPlayerSpellCharges|C_Commentator.GetPlayerSpellCharges]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetPositionLerpAmount|C_Commentator.GetPositionLerpAmount]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetSoftlockWeight|C_Commentator.GetSoftlockWeight]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetSpeedFactor|C_Commentator.GetSpeedFactor]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetTimeLeftInMatch|C_Commentator.GetTimeLeftInMatch]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.GetWargameInfo|C_Commentator.GetWargameInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.IsSmartCameraLocked|C_Commentator.IsSmartCameraLocked]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.IsSpectating|C_Commentator.IsSpectating]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.IsUsingSmartCamera|C_Commentator.IsUsingSmartCamera]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.LookAtPlayer|C_Commentator.LookAtPlayer]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.RemoveAllPlayerOverrideNames|C_Commentator.RemoveAllPlayerOverrideNames]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.RemovePlayerOverrideName|C_Commentator.RemovePlayerOverrideName]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetAdditionalCameraWeight|C_Commentator.SetAdditionalCameraWeight]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetCamera|C_Commentator.SetCamera]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetCameraCollision|C_Commentator.SetCameraCollision]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetCameraPosition|C_Commentator.SetCameraPosition]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetDistanceBeforeForcedHorizontalConvergence|C_Commentator.SetDistanceBeforeForcedHorizontalConvergence]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetDurationToForceHorizontalConvergence|C_Commentator.SetDurationToForceHorizontalConvergence]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetExcludeDistance|C_Commentator.SetExcludeDistance]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetHardlockWeight|C_Commentator.SetHardlockWeight]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetHorizontalAngleThresholdToSmooth|C_Commentator.SetHorizontalAngleThresholdToSmooth]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetLookAtLerpAmount|C_Commentator.SetLookAtLerpAmount]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMapAndInstanceIndex|C_Commentator.SetMapAndInstanceIndex]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMode|C_Commentator.SetMode]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMoveSpeed|C_Commentator.SetMoveSpeed]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMsToHoldForHorizontalMovement|C_Commentator.SetMsToHoldForHorizontalMovement]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMsToHoldForVerticalMovement|C_Commentator.SetMsToHoldForVerticalMovement]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMsToSmoothHorizontalChange|C_Commentator.SetMsToSmoothHorizontalChange]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetMsToSmoothVerticalChange|C_Commentator.SetMsToSmoothVerticalChange]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetPositionLerpAmount|C_Commentator.SetPositionLerpAmount]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetSmartCameraLocked|C_Commentator.SetSmartCameraLocked]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetSoftlockWeight|C_Commentator.SetSoftlockWeight]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetSpeedFactor|C_Commentator.SetSpeedFactor]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetTargetHeightOffset|C_Commentator.SetTargetHeightOffset]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SetUseSmartCamera|C_Commentator.SetUseSmartCamera]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.SnapCameraLookAtPoint|C_Commentator.SnapCameraLookAtPoint]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.StartWargame|C_Commentator.StartWargame]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ToggleMode|C_Commentator.ToggleMode]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.UpdateMapInfo|C_Commentator.UpdateMapInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.UpdatePlayerInfo|C_Commentator.UpdatePlayerInfo]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ZoomIn|C_Commentator.ZoomIn]] - This function is not yet documented.
: PROTECTED [[API C_Commentator.ZoomOut|C_Commentator.ZoomOut]] - This function is not yet documented.

=== Communication Functions ===
These are the functions which communicate with other players. See also the [[#Channel Functions|Channel Functions]] and [[#Chat Window Functions|Chat Window Functions]] sections.
: [[API DoEmote|DoEmote]]("emote",["target"]) - Perform a voice emote.
: [[API GetDefaultLanguage|GetDefaultLanguage]]("unit") - Returns the default language that the unit is speaking after logon.
: [[API GetLanguageByIndex|GetLanguageByIndex]](index) - Returns the language specified by the index.
: [[API GetNumLanguages|GetNumLanguages]]() - Returns the number of languages your character can speak (Renamed in 2.4, formerly mistyped GetNumLaguages).
: [[API RandomRoll|RandomRoll]](low, high) - Does a random roll between the two values.
: [[API SendAddonMessage|SendAddonMessage]]("prefix", "text", "type" [, "player"]) - Sends a message to hidden AddOn channels. - Added in 1.12
: [[API SendChatMessage|SendChatMessage]]("msg",[ "chatType",[ "language",[ "channel"]]]) - Sends a chat message.

=== Companion Functions ===
These functions relate to companions—mounts and non-combat pets. These functions were introduced in [[Patch 3.0]]. They are deprecated (but still partially work) since [[Patch 5.0.4]] introduced the Pet Journal and [[Patch 6.0.3]] introduced the Mount Journal. See also [[#Pet Journal Functions|Pet Journal Functions]] and [[#Mount Journal Functions|Mount Journal Functions]].
: [[API CallCompanion|CallCompanion]]("type", slotid) - Summons a companion.
: [[API DismissCompanion|DismissCompanion]]("type") - Dismisses an active companion.
: [[API GetCompanionInfo|GetCompanionInfo]]("type", slotid) - Returns info about a selected companion.
: [[API GetNumCompanions|GetNumCompanions]]("type") - Get the number of companions of the specified type.
: NOCOMBAT [[API PickupCompanion|PickupCompanion]]("type", index) - Picks up the indexed companion onto the mouse cursor.
: [[API SummonRandomCritter|SummonRandomCritter]]() - Summons a random critter companion. (added in 3.3.3)

=== Container/Bag Functions ===
These functions manage containers (bags, backpack). See also [[#Inventory Functions|Inventory Functions]] and [[#Bank Functions|Bank Functions]].
: [[API ContainerIDToInventoryID|ContainerIDToInventoryID]]([[bagId|bagID]])
: [[API GetBagName|GetBagName]]([[bagId|bagID]]) - Get the name of one of the player's bags.
: [[API GetContainerItemCooldown|GetContainerItemCooldown]]([[bagId|bagID]], slot)
: [[API GetContainerItemDurability|GetContainerItemDurability]](bag, slot) - Get current and maximum durability of an item in the character's bags.
: REMOVED [[API GetContainerItemGems|GetContainerItemGems]](bag, slot) - Returns item IDs of gems inserted into the item in a specified container slot.
: [[API GetContainerItemID|GetContainerItemID]](bag, slot) - Returns the item ID of the item in a particular container slot.
: [[API GetContainerItemInfo|GetContainerItemInfo]]([[bagId|bagID]], slot) - Get the info for an item in one of the player's bags.
: [[API GetContainerItemLink|GetContainerItemLink]]([[bagId|bagID]], slot) - Returns the [[itemLink]] of the item located in bag#, slot#.
: [[API GetContainerNumSlots|GetContainerNumSlots]]([[bagId|bagID]]) - Returns the total number of slots in the bag specified by the index.
: [[API GetContainerItemQuestInfo|GetContainerItemQuestInfo]](bag, slot) - Returns information about quest and quest-starting items in your bags. (added in 3.3.3)
: [[API GetContainerNumFreeSlots|GetContainerNumFreeSlots]]([[bagId|bagID]]) - Returns the number of free slots and type of slots in the bag specified by the index. (added in [[Patch 2.4]])
: UI [[API OpenAllBags|OpenAllBags]]() - Open all bags
: UI [[API CloseAllBags|CloseAllBags]]() - Close all bags
: [[API PickupBagFromSlot|PickupBagFromSlot]](slot) - Picks up the bag from the specified slot, placing it in the cursor.
: [[API PickupContainerItem|PickupContainerItem]]([[bagId|bagID]],slot)
: [[API PutItemInBackpack|PutItemInBackpack]]() - attempts to place item in backpack (bag slot 0).
: [[API PutItemInBag|PutItemInBag]](inventoryId) - attempts to place item in a specific bag.
: [[API SplitContainerItem|SplitContainerItem]]([[bagId|bagID]],slot,amount)
: UI [[API ToggleBackpack|ToggleBackpack]]() - Toggles your backpack open/closed.
: UI [[API ToggleBag|ToggleBag]]([[bagId|bagID]]) - Opens or closes the specified bag.
: PROTECTED (situational) [[API UseContainerItem|UseContainerItem]]([[bagId]], slot[, target]) - Performs a "right click" action on, or targeted use of, on an item in bags. ''-- 3rd argument added in 1.12''

=== Currency Functions ===
Most of these functions were added in [[Patch 3.0.2]].
: [[API GetCoinText|GetCoinText]](amount, "separator") - Breaks down money and inserts separator strings. Added in 2.4.2.
: [[API GetCoinTextureString|GetCoinTextureString]](amount[, fontHeight]) - Breaks down money and inserts texture strings.
: [[API GetCurrencyInfo|GetCurrencyInfo]](index) - returns localized_label, amount, icon_file_name of the currency at the index. (added 4.0.1)
: [[API GetCurrencyListSize|GetCurrencyListSize]]() - returns the number of elements (both headers and currencies) in the currency list.
: [[API GetCurrencyListInfo|GetCurrencyListInfo]](index) - return information about an element in the currency list.
: [[API ExpandCurrencyList|ExpandCurrencyList]](index, state) - sets the expanded/collapsed state of a currency list header.
: [[API SetCurrencyUnused|SetCurrencyUnused]](id, state) - alters whether a currency is marked as unused.
: UI [[API GetNumWatchedTokens|GetNumWatchedTokens]]() - returns the number of currently watched.
: [[API GetBackpackCurrencyInfo|GetBackpackCurrencyInfo]](id) - returns information about a watched currency.
: [[API SetCurrencyBackpack|SetCurrencyBackpack]](id, state) - alters whether a currency is tracked.

=== Cursor Functions ===
: [[API AutoEquipCursorItem|AutoEquipCursorItem]]() - Causes the equipment on the cursor to be equipped.
: [[API ClearCursor|ClearCursor]]() - Clears whatever item the cursor is dragging from the cursor. - Added in 1.12
: [[API CursorCanGoInSlot|CursorCanGoInSlot]]([[inventorySlotId|invSlot]]) - Return true if the item currently held by the cursor can go into the given inventory (equipment) slot.
: [[API CursorHasItem|CursorHasItem]]() - Returns true if the cursor currently holds an item.
: [[API CursorHasMoney|CursorHasMoney]]() - Returns true if the cursor currently holds money.
: [[API CursorHasSpell|CursorHasSpell]]() - Returns true if the cursor currently holds a spell.
: [[API DeleteCursorItem|DeleteCursorItem]]() - Destroys the item on the cursor.
: [[API DropCursorMoney|DropCursorMoney]]() - Drops the amount of money held by the cursor.
: [[API DropItemOnUnit|DropItemOnUnit]]("unit") - Drops an item from the cursor onto a unit.
: [[API EquipCursorItem|EquipCursorItem]]([[inventorySlotId|invSlot]]) - Equips the currently picked up item to a specific inventory slot.
: [[API GetCursorInfo|GetCursorInfo]]() - Returns information about what the cursor is holding.
: [[API GetCursorMoney|GetCursorMoney]] - Returns the amount of money held by the cursor.
: [[API GetCursorPosition|GetCursorPosition]]() - Returns the cursor's position on the screen.
: [[API HideRepairCursor|HideRepairCursor]]() - Hides the Repair Cursor.
: [[API InRepairMode|InRepairMode]]() - Returns true if your cursor is in repair mode
: NOCOMBAT [[API PickupAction|PickupAction]](slot) - Drags an action out of the specified quickbar slot and holds it on the cursor.
: [[API PickupBagFromSlot|PickupBagFromSlot]](slot) - Picks up the bag from the specified slot, placing it in the cursor. If an item is already picked up, this places the item into the specified slot, swapping the items if needed.
: [[API PickupContainerItem|PickupContainerItem]]([[bagId|bagID]],slot)
: [[API PickupInventoryItem|PickupInventoryItem]]([[inventorySlotId|invSlot]]) - "Picks up" an item from the player's worn inventory.
: [[API PickupItem|PickupItem]](itemId or "itemString" or "itemName" or "itemLink")
: NOCOMBAT [[API PickupMacro|PickupMacro]]("macroName" or index) - Places the specified macro onto the cursor.
: [[API PickupMerchantItem|PickupMerchantItem]](index) - Places the item onto the cursor. If the cursor already has an item, the item in the cursor will be sold.
: NOCOMBAT [[API PickupPetAction|PickupPetAction]](slot) - Drags an action from the specified pet action bar slot into the cursor.
: [[API PickupPlayerMoney|PickupPlayerMoney]] - Picks up an amount of money from the player.
: NOCOMBAT [[API PickupSpell|PickupSpell]](spellID) - Places the specified spell onto the cursor.
: [[API PickupStablePet|PickupStablePet]](index) - ?.
: [[API PickupTradeMoney|PickupTradeMoney]](amount)
: [[API PlaceAction|PlaceAction]](slot) - Drops an action from the cursor into the specified quickbar slot.
: [[API PutItemInBackpack|PutItemInBackpack]]() - attempts to place item in backpack (bag slot 0).
: [[API PutItemInBag|PutItemInBag]](inventoryId) - attempts to place item in a specific bag.
: [[API ResetCursor|ResetCursor]]()
: [[API SetCursor|SetCursor]]("cursor" or nil)
: [[API ShowContainerSellCursor|ShowContainerSellCursor]](index,slot)
: UI [[API ShowInspectCursor|ShowInspectCursor]]() - Change the cursor to the magnifying glass inventory inspection cursor
: [[API ShowInventorySellCursor|ShowInventorySellCursor]]() - ?.
: [[API ShowMerchantSellCursor|ShowMerchantSellCursor]](index) - Changes the cursor to the merchant sell cursor.
: [[API ShowRepairCursor|ShowRepairCursor]]()
: [[API SplitContainerItem|SplitContainerItem]](bagID,slot,amount) - Picks up part of a stack.

=== Debugging Functions ===
: [[API AreDangerousScriptsAllowed|AreDangerousScriptsAllowed]](?) -
: [[API SetAllowDangerousScripts|SetAllowDangerousScripts]](?) -
: [[API ConsoleAddMessage|ConsoleAddMessage]](message) - added in 3.0.8
: [[API debugbreak|debugbreak]](?) -
: [[API debugdump|debugdump]](?) -
: [[API debuginfo|debuginfo]](?) -
: [[API debugload|debugload]](?) -
: [[API debuglocals|debuglocals]](?) -
: [[API debugprint|debugprint]](?) -
: [[API debugprofilestart|debugprofilestart]]() - starts a timer for profiling during debugging.
: [[API debugprofilestop|debugprofilestop]]() - return the time in milliseconds since the last call to debugprofilestart()
: [[API debugstack|debugstack]](start, count1, count2) - Returns a string representation of the current calling stack (as of 1.9)
: [[API debugtimestamp|debugtimestamp]](?) -
: [[API FrameXML_Debug|FrameXML_Debug]](flag) - Sets FrameXML logging state which is output to /WoW Folder/Logs/FrameXML.log
: UI [[API getprinthandler|getprinthandler]]() - Returns the function currently handling print() output.
: UI [[API print|print]](...) - Calls the current print output handler with the provided values; by default printing the values to the default chat frame.
: UI [[API setprinthandler|setprinthandler]](func) - Changes the function handling print() output.
: UI [[API tostringall|tostringall]](...) - Converts and returns the passed arguments to string.
: [[API wipe|wipe]](table) - removes all key/value pairs from a table; also available as table.wipe().

=== Dressing Room Functions ===
Functions controlling the Dressing Room interface. Added in version 1700.
: UI [[API DressUpItemLink|DressUpItemLink]]("itemString" or "itemLink") - Will show the DressingRoom UI with the given item equipped.
: UI [[API SetDressUpBackground|SetDressUpBackground]](isAuctionFrame) - Given an Item shown in the Auction House will show the DressingRoom UI with the item equipped.

=== Enchanting Functions ===
: [[API GetWeaponEnchantInfo|GetWeaponEnchantInfo]]() - Return information about main and offhand weapon enchantments.
: [[API ReplaceEnchant|ReplaceEnchant]]()
: [[API ReplaceTradeEnchant|ReplaceTradeEnchant]]() - Confirm the replacement of an enchantment via trade.
: [[API BindEnchant|BindEnchant]]() - Confirm the binding of the item when enchanting.

=== Encounter Journal Functions ===
[[Dungeon Journal]] was added in [[Patch 4.2.0]]; its FrameXML components were moved to a LoadOnDemand AddOn in [[Patch 4.3.0]].
: [[API EJ_ClearSearch|EJ_ClearSearch]]()
: [[API EJ_EndSearch|EJ_EndSearch]](?) -
: [[API EJ_GetCreatureInfo|EJ_GetCreatureInfo]](index[, encounterID]) - Returns Boss / Creature info
: [[API EJ_GetCurrentInstance|EJ_GetCurrentInstance]]() - Returns the Instance ID of your character's current location
: [[API EJ_GetCurrentTier|EJ_GetCurrentTier]]() - Returns the currently active tier index
: [[API EJ_GetDifficulty|EJ_GetDifficulty]]()
: [[API EJ_GetEncounterInfo|EJ_GetEncounterInfo]](encounterID) - Returns Encounter info
: [[API EJ_GetEncounterInfoByIndex|EJ_GetEncounterInfoByIndex]](index[, instanceID]) - Returns Encounter info
: [[API EJ_GetInstanceByIndex|EJ_GetInstanceByIndex]](index, isRaid) - Returns Instance info
: [[API EJ_GetInstanceInfo|EJ_GetInstanceInfo]]([instanceID]) - Returns Instance info
: [[API EJ_GetInvTypeSortOrder|EJ_GetInvTypeSortOrder]](?) -
: [[API EJ_GetLootFilter|EJ_GetLootFilter]]()
: [[API EJ_GetLootInfo|EJ_GetLootInfo]](lootID) - Returns Loot info
: [[API EJ_GetLootInfoByIndex|EJ_GetLootInfoByIndex]](index) - Returns Loot info
: [[API EJ_GetMapEncounter|EJ_GetMapEncounter]](index) - Returns Map Button info
: [[API EJ_GetNumEncountersForLootByIndex|EJ_GetNumEncountersForLootByIndex]](?) -
: [[API EJ_GetNumLoot|EJ_GetNumLoot]]() - Returns the amount of loot for the currently viewed Instance or Encounter
: [[API EJ_GetNumSearchResults|EJ_GetNumSearchResults]]() - Returns the number of search results
: [[API EJ_GetNumTiers|EJ_GetNumTiers]]()
: [[API EJ_GetSearchProgress|EJ_GetSearchProgress]](?) -
: [[API EJ_GetSearchResult|EJ_GetSearchResult]](index) - Returns Search info
: [[API EJ_GetSearchSize|EJ_GetSearchSize]](?) -
: [[API EJ_GetSectionInfo|EJ_GetSectionInfo]](sectionID) - Returns Section info
: [[API EJ_GetSectionPath|EJ_GetSectionPath]](sectionID) - Returns the Parent Section ID if available
: [[API EJ_GetTierInfo|EJ_GetTierInfo]](index) - Returns some information about the tier for index
: [[API EJ_HandleLinkPath|EJ_HandleLinkPath]](jtype, id) - Processes the [[Encounter_Journal_Dump#Journal_Link|Journal Link]]
: [[API EJ_InstanceIsRaid|EJ_InstanceIsRaid]]() - Returns whether the currently viewed Instance is a raid instance
: [[API EJ_IsLootListOutOfDate|EJ_IsLootListOutOfDate]](?)-
: [[API EJ_IsSearchFinished|EJ_IsSearchFinished]](?) -
: [[API EJ_IsValidInstanceDifficulty|EJ_IsValidInstanceDifficulty]](difficultyID)
: [[API EJ_ResetLootFilter|EJ_ResetLootFilter]]()
: [[API EJ_SelectEncounter|EJ_SelectEncounter]](encounterID)
: [[API EJ_SelectInstance|EJ_SelectInstance]](instanceID)
: [[API EJ_SelectTier|EJ_SelectTier]](tier)
: [[API EJ_SetDifficulty|EJ_SetDifficulty]](index) - Sets the Encounter Journal's viewed difficulty
: [[API EJ_SetLootFilter|EJ_SetLootFilter]](classID, specID)
: [[API EJ_SetSearch|EJ_SetSearch]](text)
: UI [[API EncounterJournal_OpenJournal|EncounterJournal_OpenJournal]]([difficulty, instanceID, encounterID, sectionID, creatureID, itemID]) - Opens the Encounter Journal, and optionally navigates to an entry
: UI [[API EncounterJournal_ResetHeaders|EncounterJournal_ResetHeaders]]() - Resets all the Section Headers

=== Equipment Manager Functions ===
Equipment management was added to the UI in [[Patch 3.1.2]].
: [[API CanUseEquipmentSets|CanUseEquipmentSets]]()
: [[API DeleteEquipmentSet|DeleteEquipmentSet]]("name") - Forgets an equipment set.
: [[API EquipmentSetContainsLockedItems|EquipmentSetContainsLockedItems]]("name") - Checks if some of the items in the set are currently locked (pending client/server interaction).
: [[API EquipmentManagerIgnoreSlotForSave|EquipmentManagerIgnoreSlotForSave]](slot) - flags the slot to be ignored when saving an equipment set.
: [[API EquipmentManagerIsSlotIgnoredForSave|EquipmentManagerIsSlotIgnoredForSave]]() -
: [[API EquipmentManagerUnignoreSlotForSave|EquipmentManagerUnignoreSlotForSave]](slot) - removes the ignore flag from a slot when saving an equipment set.
: [[API EquipmentManagerClearIgnoredSlotsForSave|EquipmentManagerClearIgnoredSlotsForSave]]() - removes the ignore flag from all slots when saving an equipment set.
: UI [[API EquipmentManager_UnpackLocation|EquipmentManager_UnpackLocation]](location) - Unpacks a location integer to determine the actual inventory location.
: [[API GetContainerItemEquipmentSetInfo|GetContainerItemEquipmentSetInfo]]()
: [[API GetNumEquipmentSets|GetNumEquipmentSets]]() - Returns the number of saved equipment sets.
: UI [[API GetEquipmentSetIconInfo|GetEquipmentSetIconInfo]](index) - Returns information about available icons.
: [[API GetEquipmentSetIgnoreSlots|GetEquipmentSetIgnoreSlots]]()
: [[API GetEquipmentSetInfo|GetEquipmentSetInfo]](index) - Returns information about an equipment set.
: [[API GetEquipmentSetInfoByName|GetEquipmentSetInfoByName]]("name") - Returns information about an equipment set.
: [[API GetEquipmentSetItemIDs|GetEquipmentSetItemIDs]]("name"[, returnTable]) - Populates and returns a table with the item IDs.
: [[API GetEquipmentSetLocations|GetEquipmentSetLocations]]("name"[, returnTable]) - Populates and returns a table with the item locations.
: [[API ModifyEquipmentSet|ModifyEquipmentSet]]()
: [[API PickupEquipmentSet|PickupEquipmentSet]](index) - Places an equipment set on the cursor.
: [[API PickupEquipmentSetByName|PickupEquipmentSetByName]]("name") - Places an equipment set on the cursor.
: [[API SaveEquipmentSet|SaveEquipmentSet]]("name", iconIndex) - Saves the currently equipped items in a set.
: NOCOMBAT [[API UseEquipmentSet|UseEquipmentSet]]("name") - Equips an equipment set.

=== Faction Functions ===
: [[API CollapseFactionHeader|CollapseFactionHeader]](index) - Collapse a faction header row.
: [[API CollapseAllFactionHeaders|CollapseAllFactionHeaders]]() - Collapse all faction header rows.
: [[API ExpandFactionHeader|ExpandFactionHeader]](index) - Expand a faction header row.
: [[API ExpandAllFactionHeaders|ExpandAllFactionHeaders]]() - Expand all faction header rows.
: [[API FactionToggleAtWar|FactionToggleAtWar]](index) - Toggle the At War flag for a faction.
: [[API GetFactionInfo|GetFactionInfo]](index) - Gets details for a specific faction/faction header.
: [[API GetFactionInfoByID|GetFactionInfoByID]](factionID) - Gets details for a specific faction by factionID.
: [[API GetNumFactions|GetNumFactions]]() - Returns the number of lines in the faction display.
: [[API GetSelectedFaction|GetSelectedFaction]]() - Returns the row index of the currently selected faction in reputation window. (added in 1.10)
: [[API GetWatchedFactionInfo|GetWatchedFactionInfo]]() - Returns information about the currently watched faction.
: [[API IsFactionInactive|IsFactionInactive]](index) - Returns true if the faction is marked inactive.
: [[API SetFactionActive|SetFactionActive]](index) - Remove a faction from inactive group.
: [[API SetFactionInactive|SetFactionInactive]](index) - Move a faction to inactive group.
: [[API SetSelectedFaction|SetSelectedFaction]](index) - Sets the currently selected faction in reputation window. (added in 1.10)
: [[API SetWatchedFactionIndex|SetWatchedFactionIndex]](index) - Sets which faction should be watched in Blizzard reputation bar.

=== Frame Management ===
: [[API CreateFrame|CreateFrame]]("frameType"[ ,"name"][, parent][, "inheritFrame"]) - Create a new frame of the specified type
: [[API CreateFont|CreateFont]]("name") - Dynamically create a font object
: [[API GetFramesRegisteredForEvent|GetFramesRegisteredForEvent]](event) - Returns a list of frames that are registered for the given event.
: [[API GetNumFrames|GetNumFrames]]() - Get the current number of Frame (and derivative) objects
: [[API EnumerateFrames|EnumerateFrames]](currentFrame) - Get the Frame which follows currentFrame
: [[API GetMouseFocus|GetMouseFocus]]() - Returns the frame that currently has the mouse focus.
: UI [[API MouseIsOver|MouseIsOver]] - Determines whether or not the mouse is over the specified frame.
: UI [[API ToggleDropDownMenu|ToggleDropDownMenu]](level, value, dropDownFrame, anchorName, xOffset, yOffset)
: UI [[API UIFrameFadeIn|UIFrameFadeIn]](frame, fadeTime, startAlpha, endAlpha)
: UI [[API UIFrameFlash|UIFrameFlash]](...)

=== FrameXML API ===
This is a very limited selection of utility functions provided by Blizzard's FrameXML implementation.
: UI [[API EasyMenu|EasyMenu]](menuList, menuFrame, anchor, x, y, displayMode, autoHideDelay)

=== Friend Functions ===
: [[API AddFriend|AddFriend]]("playerName") - Add a friend to your friend list.
: [[API AddOrRemoveFriend|AddOrRemoveFriend]]("playerName"[, "note"]) - Toggles a player's presence on your friends list.
: [[API GetFriendInfo|GetFriendInfo]](index) - Returns name, level, class, location, connected, status, and friend note of a friend.
: [[API SetFriendNotes|SetFriendNotes]](index, "note") - Sets the note text for a friend.
: [[API GetNumFriends|GetNumFriends]]() - Returns how many friends are on your friend list.
: [[API GetSelectedFriend|GetSelectedFriend]]() - Returns the index of the current selected friend.
: [[API RemoveFriend|RemoveFriend]]("name" or index) - Removes a friend from your friend list
: [[API SetSelectedFriend|SetSelectedFriend]](index) - Update the current selected friend.
: [[API ShowFriends|ShowFriends]]() - Request updated friends information from server.
: UI [[API ToggleFriendsFrame|ToggleFriendsFrame]]([tabNumber]) - Opens/closes the friends pane (possibly on a specific tab).

=== Garrison Functions ===
: [[API C_Garrison.AddFollowerToMission|C_Garrison.AddFollowerToMission]]([[missionID]],[[followerID]]) - This function is not yet documented
: [[API C_Garrison.AllowMissionStartAboveSoftCap|C_Garrison.AllowMissionStartAboveSoftCap]](garrFollowerTypeID) - This function is not yet documented
: [[API C_Garrison.AreMissionFollowerRequirementsMet|C_Garrison.AreMissionFollowerRequirementsMet]](?) - This function is not yet documented
: [[API C_Garrison.AssignFollowerToBuilding|C_Garrison.AssignFollowerToBuilding]]([[plotID]],[[followerID]]) - This function is not yet documented
: [[API C_Garrison.CancelConstruction|C_Garrison.CancelConstruction]]([[plotID]]) - This function is not yet documented
: [[API C_Garrison.CanGenerateRecruits|C_Garrison.CanGenerateRecruits]]() - This function is not yet documented
: [[API C_Garrison.CanOpenMissionChest|C_Garrison.CanOpenMissionChest]]([[missionID]]) - This function is not yet documented
: [[API C_Garrison.CanSetRecruitmentPreference|C_Garrison.CanSetRecruitmentPreference]]() - This function is not yet documented
: [[API C_Garrison.CanSpellTargetFollowerIDWithAddAbility|C_Garrison.CanSpellTargetFollowerIDWithAddAbility]](followerID) -
: [[API C_Garrison.CanUpgradeGarrison|C_Garrison.CanUpgradeGarrison]]() - This function is not yet documented
: [[API C_Garrison.CastItemSpellOnFollowerAbility|C_Garrison.CastItemSpellOnFollowerAbility]](followerID, abilityID) -
: [[API C_Garrison.CastSpellOnFollower|C_Garrison.CastSpellOnFollower]]([[spellID]]) - This function is not yet documented
: [[API C_Garrison.CastSpellOnFollowerAbility|C_Garrison.CastSpellOnFollowerAbility]](followerID, abilityID) - This function is not yet documented.
: [[API C_Garrison.CastSpellOnMission|C_Garrison.CastSpellOnMission]](?) - This function is not yet documented.
: [[API C_Garrison.ClearCompleteTalent|C_Garrison.ClearCompleteTalent]](?) - This function is not yet documente
: [[API C_Garrison.CloseArchitect|C_Garrison.CloseArchitect]]() - This function is not yet documented
: [[API C_Garrison.CloseGarrisonTradeskillNPC|C_Garrison.CloseGarrisonTradeskillNPC]]() - This function is not yet documented
: [[API C_Garrison.CloseMissionNPC|C_Garrison.CloseMissionNPC]]() - This function is not yet documented
: [[API C_Garrison.CloseRecruitmentNPC|C_Garrison.CloseRecruitmentNPC]]() - This function is not yet documented
: [[API C_Garrison.CloseTalentNPC|C_Garrison.CloseTalentNPC]](?) - This function is not yet documented
: [[API C_Garrison.CloseTradeskillCrafter|C_Garrison.CloseTradeskillCrafter]]() - This function is not yet documented
: [[API C_Garrison.GenerateRecruits|C_Garrison.GenerateRecruits]](ability, trait) - This function is not yet documented
: [[API C_Garrison.GetAllBonusAbilityEffects|C_Garrison.GetAllBonusAbilityEffects]](?) - This function is not yet documented
: [[API C_Garrison.GetAllEncounterThreats|C_Garrison.GetAllEncounterThreats]] - This function is not yet documented.
: [[API C_Garrison.GetAvailableMissions|C_Garrison.GetAvailableMissions]]([table]) - Returns an array of available missions.
: [[API C_Garrison.GetAvailableRecruits|C_Garrison.GetAvailableRecruits]]() - This function is not yet documented
: [[API C_Garrison.GetBasicMissionInfo|C_Garrison.GetBasicMissionInfo]]([[missionID]]) - Returns a table containing information on the requested mission
: [[API C_Garrison.GetBuffedFollowersForMission|C_Garrison.GetBuffedFollowersForMission]]([[missionID]]) - This function is not yet documented
: [[API C_Garrison.GetBuildingInfo|C_Garrison.GetBuildingInfo]]([[buildingID]]) - Returns a table containing all buildings for a garrison.
: [[API C_Garrison.GetBuildingLockInfo|C_Garrison.GetBuildingLockInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildings|C_Garrison.GetBuildings]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildingsForPlot|C_Garrison.GetBuildingsForPlot]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildingsForSize|C_Garrison.GetBuildingsForSize]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildingSizes|C_Garrison.GetBuildingSizes]]() - This function is not yet documented
: [[API C_Garrison.GetBuildingSpecInfo|C_Garrison.GetBuildingSpecInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildingTimeRemaining|C_Garrison.GetBuildingTimeRemaining]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildingTooltip|C_Garrison.GetBuildingTooltip]](?) - This function is not yet documented
: [[API C_Garrison.GetBuildingUpgradeInfo|C_Garrison.GetBuildingUpgradeInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetClassSpecCategoryInfo|C_Garrison.GetClassSpecCategoryInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetCombatAllyMission|C_Garrison.GetCombatAllyMission]](?) - This function is not yet documented
: [[API C_Garrison.GetCompleteMissions|C_Garrison.GetCompleteMissions]](?) - This function is not yet documented
: [[API C_Garrison.GetCompleteTalent|C_Garrison.GetCompleteTalent]](?) - This function is not yet documented
: [[API C_Garrison.GetCurrencyTypes|C_Garrison.GetCurrencyTypes]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilities|C_Garrison.GetFollowerAbilities]]([[followerID]]) - Returns a table containing information about abilities of a single follower.
: [[API C_Garrison.GetFollowerAbilityAtIndex|C_Garrison.GetFollowerAbilityAtIndex]]([[followerID]],index) - Returns a table containing information about a single follower ability.
: [[API C_Garrison.GetFollowerAbilityAtIndexByID|C_Garrison.GetFollowerAbilityAtIndexByID]]([[garrFollowerID]],index) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityCounterMechanicInfo|C_Garrison.GetFollowerAbilityCounterMechanicInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityCountersForMechanicTypes|C_Garrison.GetFollowerAbilityCountersForMechanicTypes]](?) -This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityDescription|C_Garrison.GetFollowerAbilityDescription]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityIcon|C_Garrison.GetFollowerAbilityIcon]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityIsTrait|C_Garrison.GetFollowerAbilityIsTrait]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityInfo|C_Garrison.GetFollowerAbilityInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityLink|C_Garrison.GetFollowerAbilityLink]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerAbilityName|C_Garrison.GetFollowerAbilityName]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerActivationCost|C_Garrison.GetFollowerActivationCost]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerBiasForMission|C_Garrison.GetFollowerBiasForMission]](missionID,followerID) - This function is not yet documented
: [[API C_Garrison.GetFollowerClassSpec|C_Garrison.GetFollowerClassSpec]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerClassSpecAtlas|C_Garrison.GetFollowerClassSpecAtlas]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerClassSpecByID|C_Garrison.GetFollowerClassSpecByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerClassSpecName|C_Garrison.GetFollowerClassSpecName]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerDisplayID|C_Garrison.GetFollowerDisplayID]](?) - This function is not yet documented
: REMOVED [[API C_Garrison.GetFollowerDisplayIDByID|C_Garrison.GetFollowerDisplayIDByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerInfo|C_Garrison.GetFollowerInfo]]([[followerID]]) - This function is not yet documented
: [[API C_Garrison.GetFollowerInfoForBuilding|C_Garrison.GetFollowerInfoForBuilding]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerIsTroop|C_Garrison.GetFollowerIsTroop]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerItemLevelAverage|C_Garrison.GetFollowerItemLevelAverage]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerItems|C_Garrison.GetFollowerItems]]([[followerID]]) - This function is not yet documented
: [[API C_Garrison.GetFollowerLevel|C_Garrison.GetFollowerLevel]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerLevelXP|C_Garrison.GetFollowerLevelXP]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerLink|C_Garrison.GetFollowerLink]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerLinkByID|C_Garrison.GetFollowerLinkByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerMissionCompleteInfo|C_Garrison.GetFollowerMissionCompleteInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerMissionTimeLeft|C_Garrison.GetFollowerMissionTimeLeft]]([[followerID]]) - This function is not yet documented.
: [[API C_Garrison.GetFollowerMissionTimeLeftSeconds|C_Garrison.GetFollowerMissionTimeLeftSeconds]]([[followerID]]) - This function is not yet documented.
: [[API C_Garrison.GetFollowerModelItems|C_Garrison.GetFollowerModelItems]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerName|C_Garrison.GetFollowerName]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerNameByID|C_Garrison.GetFollowerNameByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerPortraitIconID|C_Garrison.GetFollowerPortraitIconID]](followerID) -
: [[API C_Garrison.GetFollowerPortraitIconIDByID|C_Garrison.GetFollowerPortraitIconIDByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerQuality|C_Garrison.GetFollowerQuality]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerQualityTable|C_Garrison.GetFollowerQualityTable]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerRecentlyGainedAbilityIDs|C_Garrison.GetFollowerRecentlyGainedAbilityIDs]](followerID) -
: [[API C_Garrison.GetFollowerRecentlyGainedTraitIDs|C_Garrison.GetFollowerRecentlyGainedTraitIDs]](followerID) -
: [[API C_Garrison.GetFollowerSoftCap|C_Garrison.GetFollowerSoftCap]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerSourceTextByID|C_Garrison.GetFollowerSourceTextByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerSpecializationAtIndex|C_Garrison.GetFollowerSpecializationAtIndex]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerStatus|C_Garrison.GetFollowerStatus]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerTraitAtIndex|C_Garrison.GetFollowerTraitAtIndex]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerTraitAtIndexByID|C_Garrison.GetFollowerTraitAtIndexByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerTypeByID|C_Garrison.GetFollowerTypeByID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerTypeByMissionID|C_Garrison.GetFollowerTypeByMissionID]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerXP|C_Garrison.GetFollowerXP]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerXPTable|C_Garrison.GetFollowerXPTable]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowerZoneSupportAbilities|C_Garrison.GetFollowerZoneSupportAbilities]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowers|C_Garrison.GetFollowers]]([followerType]) - Returns a table of followers and their attributs.
: [[API C_Garrison.GetFollowersSpellsForMission|C_Garrison.GetFollowersSpellsForMission]](?) - This function is not yet documented
: [[API C_Garrison.GetFollowersTraitsForMission|C_Garrison.GetFollowersTraitsForMission]](?) - This function is not yet documented
: [[API C_Garrison.GetGarrisonInfo|C_Garrison.GetGarrisonInfo]]([[garrisonType]]) - This function is not yet documented
: [[API C_Garrison.GetGarrisonUpgradeCost|C_Garrison.GetGarrisonUpgradeCost]](?) - This function is not yet documented
: [[API C_Garrison.GetInProgressMissions|C_Garrison.GetInProgressMissions]](?) - This function is not yet documented
: [[API C_Garrison.GetLandingPageGarrisonType|C_Garrison.GetLandingPageGarrisonType]](?) - This function is not yet documented
: [[API C_Garrison.GetLandingPageItems|C_Garrison.GetLandingPageItems]](?) - This function is not yet documented
: [[API C_Garrison.GetLandingPageShipmentCount|C_Garrison.GetLandingPageShipmentCount]](?) - This function is not yet documented
: [[API C_Garrison.GetLandingPageShipmentInfo|C_Garrison.GetLandingPageShipmentInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetLandingPageShipmentInfoByContainerID|C_Garrison.GetLandingPageShipmentInfoByContainerID]](?) - This function is not yet documented
: [[API C_Garrison.GetLooseShipments|C_Garrison.GetLooseShipments]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionBonusAbilityEffects|C_Garrison.GetMissionBonusAbilityEffects]](missionID) -
: [[API C_Garrison.GetMissionCompleteEncounters|C_Garrison.GetMissionCompleteEncounters]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionCost|C_Garrison.GetMissionCost]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionDisplayIDs|C_Garrison.GetMissionDisplayIDs]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionInfo|C_Garrison.GetMissionInfo]](missionID) -
: [[API C_Garrison.GetMissionLink|C_Garrison.GetMissionLink]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionMaxFollowers|C_Garrison.GetMissionMaxFollowers]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionName|C_Garrison.GetMissionName]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionRewardInfo|C_Garrison.GetMissionRewardInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionSuccessChance|C_Garrison.GetMissionSuccessChance]] - This function is not yet documented.
: [[API C_Garrison.GetMissionTexture|C_Garrison.GetMissionTexture]](offeredGarrMissionTextureID) -
: [[API C_Garrison.GetMissionTimes|C_Garrison.GetMissionTimes]](?) - This function is not yet documented
: [[API C_Garrison.GetMissionUncounteredMechanics|C_Garrison.GetMissionUncounteredMechanics]](?) - This function is not yet documented
: [[API C_Garrison.GetNumActiveFollowers|C_Garrison.GetNumActiveFollowers]](?) - This function is not yet documented
: [[API C_Garrison.GetNumFollowerActivationsRemaining|C_Garrison.GetNumFollowerActivationsRemaining]](?) - This function is not yet documented
: [[API C_Garrison.GetNumFollowerDailyActivations|C_Garrison.GetNumFollowerDailyActivations]](?) - This function is not yet documented
: [[API C_Garrison.GetNumFollowers|C_Garrison.GetNumFollowers]](?) - This function is not yet documented
: [[API C_Garrison.GetNumFollowersForMechanic|C_Garrison.GetNumFollowersForMechanic]] - This function is not yet documented.
: [[API C_Garrison.GetNumFollowersOnMission|C_Garrison.GetNumFollowersOnMission]](?) - This function is not yet documented
: [[API C_Garrison.GetNumPendingShipments|C_Garrison.GetNumPendingShipments]](?) - This function is not yet documented
: [[API C_Garrison.GetNumShipmentCurrencies|C_Garrison.GetNumShipmentCurrencies]]() -
: [[API C_Garrison.GetNumShipmentReagents|C_Garrison.GetNumShipmentReagents]](?) - This function is not yet documented
: [[API C_Garrison.GetOwnedBuildingInfo|C_Garrison.GetOwnedBuildingInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetOwnedBuildingInfoAbbrev|C_Garrison.GetOwnedBuildingInfoAbbrev]](?) - This function is not yet documented
: [[API C_Garrison.GetPartyBuffs|C_Garrison.GetPartyBuffs]](?) - This function is not yet documented
: [[API C_Garrison.GetPartyMentorLevels|C_Garrison.GetPartyMentorLevels]] - This function is not yet documented.
: [[API C_Garrison.GetPartyMissionInfo|C_Garrison.GetPartyMissionInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetPendingShipmentInfo|C_Garrison.GetPendingShipmentInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetPlots|C_Garrison.GetPlots]]([[followerId]]) - This function is not yet documented
: [[API C_Garrison.GetPlotsForBuilding|C_Garrison.GetPlotsForBuilding]](?) - This function is not yet documented
: [[API C_Garrison.GetPossibleFollowersForBuilding|C_Garrison.GetPossibleFollowersForBuilding]](?) - This function is not yet documented
: [[API C_Garrison.GetRecruitAbilities|C_Garrison.GetRecruitAbilities]](?) - This function is not yet documented
: [[API C_Garrison.GetRecruiterAbilityCategories|C_Garrison.GetRecruiterAbilityCategories]](?) - This function is not yet documented
: [[API C_Garrison.GetRecruiterAbilityList|C_Garrison.GetRecruiterAbilityList]](isTrait, table) - Fill table with abilities or traits (only with open GarrisonRecruiterFrame)
: [[API C_Garrison.GetRecruitmentPreferences|C_Garrison.GetRecruitmentPreferences]](?) - This function is not yet documented
: REMOVED [[API C_Garrison.GetRewardChance|C_Garrison.GetRewardChance]](?) - This function is not yet documented
: [[API C_Garrison.GetShipDeathAnimInfo|C_Garrison.GetShipDeathAnimInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetShipmentContainerInfo|C_Garrison.GetShipmentContainerInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetShipmentItemInfo|C_Garrison.GetShipmentItemInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetShipmentReagentCurrencyInfo|C_Garrison.GetShipmentReagentCurrencyInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetShipmentReagentInfo|C_Garrison.GetShipmentReagentInfo]](?) - This function is not yet documented
: [[API C_Garrison.GetShipmentReagentItemLink|C_Garrison.GetShipmentReagentItemLink]](?) - This function is not yet documented
: [[API C_Garrison.GetSpecChangeCost|C_Garrison.GetSpecChangeCost]](?) - This function is not yet documented
: [[API C_Garrison.GetTabForPlot|C_Garrison.GetTabForPlot]](?) - This function is not yet documented
: [[API C_Garrison.GetTalent|C_Garrison.GetTalent]](?) - This function is not yet documented
: [[API C_Garrison.GetTalentTrees|C_Garrison.GetTalentTrees]](?) - This function is not yet documented
: [[API C_Garrison.HasGarrison|C_Garrison.HasGarrison]](?) - This function is not yet documented
: [[API C_Garrison.HasShipyard|C_Garrison.HasShipyard]](?) - This function is not yet documented
: [[API C_Garrison.IsAboveFollowerSoftCap|C_Garrison.IsAboveFollowerSoftCap]](?) - This function is not yet documented
: [[API C_Garrison.IsFollowerCollected|C_Garrison.IsFollowerCollected]](?) - This function is not yet documented
: REMOVED [[API C_Garrison.IsFollowerUnique|C_Garrison.IsFollowerUnique]](?) - This function is not yet documented
: [[API C_Garrison.IsInvasionAvailable|C_Garrison.IsInvasionAvailable]](?) - This function is not yet documented
: [[API C_Garrison.IsMechanicFullyCountered|C_Garrison.IsMechanicFullyCountered]] - This function is not yet documented.
: [[API C_Garrison.IsOnGarrisonMap|C_Garrison.IsOnGarrisonMap]](?) - This function is not yet documented.
: [[API C_Garrison.IsOnShipmentQuestForNPC|C_Garrison.IsOnShipmentQuestForNPC]] - This function is not yet documented.
: [[API C_Garrison.IsOnShipyardMap|C_Garrison.IsOnShipyardMap]](?) - This function is not yet documented.
: [[API C_Garrison.IsPlayerInGarrison|C_Garrison.IsPlayerInGarrison]](?) -
: [[API C_Garrison.IsUsingPartyGarrison|C_Garrison.IsUsingPartyGarrison]](?) - This function is not yet documented
: [[API C_Garrison.IsVisitGarrisonAvailable|C_Garrison.IsVisitGarrisonAvailable]](?) - This function is not yet documented
: [[API C_Garrison.MarkMissionComplete|C_Garrison.MarkMissionComplete]](?) - This function is not yet documented
: [[API C_Garrison.MissionBonusRoll|C_Garrison.MissionBonusRoll]](?) - This function is not yet documented
: [[API C_Garrison.PlaceBuilding|C_Garrison.PlaceBuilding]](?) - This function is not yet documented
: [[API C_Garrison.RecruitFollower|C_Garrison.RecruitFollower]](?) - This function is not yet documented
: [[API C_Garrison.RemoveFollower|C_Garrison.RemoveFollower]](?) - This function is not yet documented
: [[API C_Garrison.RemoveFollowerFromBuilding|C_Garrison.RemoveFollowerFromBuilding]](?) - This function is not yet documented
: [[API C_Garrison.RemoveFollowerFromMission|C_Garrison.RemoveFollowerFromMission]](?) - This function is not yet documented
: [[API C_Garrison.RenameFollower|C_Garrison.RenameFollower]](?,string) - This function is not yet documented
: [[API C_Garrison.RequestClassSpecCategoryInfo|C_Garrison.RequestClassSpecCategoryInfo]](?) -
: [[API C_Garrison.RequestGarrisonUpgradeable|C_Garrison.RequestGarrisonUpgradeable]](?) - This function is not yet documented
: [[API C_Garrison.RequestLandingPageShipmentInfo|C_Garrison.RequestLandingPageShipmentInfo]](?) - This function is not yet documented
: [[API C_Garrison.RequestShipmentCreation|C_Garrison.RequestShipmentCreation]](?) - This function is not yet documented
: [[API C_Garrison.RequestShipmentInfo|C_Garrison.RequestShipmentInfo]](?) - This function is not yet documented
: [[API C_Garrison.ResearchTalent|C_Garrison.ResearchTalent]](?) -
: [[API C_Garrison.SearchForFollower|C_Garrison.SearchForFollower]](?) - This function is not yet documented
: [[API C_Garrison.SetBuildingActive|C_Garrison.SetBuildingActive]](?) - This function is not yet documented
: [[API C_Garrison.SetBuildingSpecialization|C_Garrison.SetBuildingSpecialization]](?) - This function is not yet documented
: [[API C_Garrison.SetFollowerFavorite|C_Garrison.SetFollowerFavorite]](?) - This function is not yet documented
: [[API C_Garrison.SetFollowerInactive|C_Garrison.SetFollowerInactive]](?) - This function is not yet documented
: [[API C_Garrison.SetRecruitmentPreferences|C_Garrison.SetRecruitmentPreferences]](?) - This function is not yet documented
: [[API C_Garrison.SetUsingPartyGarrison|C_Garrison.SetUsingPartyGarrison]](?) - This function is not yet documented
: [[API C_Garrison.ShouldShowMapTab|C_Garrison.ShouldShowMapTab]](?) - This function is not yet documented
: [[API C_Garrison.ShowFollowerNameInErrorMessage|C_Garrison.ShowFollowerNameInErrorMessage]](?) - This function is not yet documented
: [[API C_Garrison.StartMission|C_Garrison.StartMission]](?) - This function is not yet documented
: [[API C_Garrison.SwapBuildings|C_Garrison.SwapBuildings]](?) - This function is not yet documented
: [[API C_Garrison.TargetSpellHasFollowerItemLevelUpgrade|C_Garrison.TargetSpellHasFollowerItemLevelUpgrade]] - This function is not yet documented.
: [[API C_Garrison.TargetSpellHasFollowerReroll|C_Garrison.TargetSpellHasFollowerReroll]]() -
: [[API C_Garrison.TargetSpellHasFollowerTemporaryAbility|C_Garrison.TargetSpellHasFollowerTemporaryAbility]]() -
: [[API C_Garrison.UpgradeBuilding|C_Garrison.UpgradeBuilding]](?) - This function is not yet documented
: [[API C_Garrison.UpgradeGarrison|C_Garrison.UpgradeGarrison]](?) - This function is not yet documented
: [[API GetFollowerTypeIDFromSpell|GetFollowerTypeIDFromSpell]]()
: [[API IsMapGarrisonMap|IsMapGarrisonMap]]()
: [[API ItemCanTargetGarrisonFollowerAbility|ItemCanTargetGarrisonFollowerAbility]]()
: [[API SpellCanTargetGarrisonFollower|SpellCanTargetGarrisonFollower]]()
: [[API SpellCanTargetGarrisonFollowerAbility|SpellCanTargetGarrisonFollowerAbility]]()
: [[API SpellCanTargetGarrisonMission|SpellCanTargetGarrisonMission]]()

=== Glyph Functions ===
: [[API AttachGlyphToSpell|AttachGlyphToSpell]](?)-
: REMOVED [[API CastGlyph|CastGlyph]](glyphID, slot)
: REMOVED PROTECTED [[API CastGlyphByID|CastGlyphByID]] (glyphID, slot)
: REMOVED PROTECTED [[API CastGlyphByName|CastGlyphByName]] (glyphName, slot)
: [[API GetCurrentGlyphNameForSpell|GetCurrentGlyphNameForSpell]](?) -
: REMOVED [[API GetGlyphClearInfo|GetGlyphClearInfo]]() - Returns information about the current cost of removing a glyph.
: REMOVED [[API GetGlyphInfo|GetGlyphInfo]](index) - Returns details of the selected Glyph in the current players Glyph list
: REMOVED [[API GetGlyphLink|GetGlyphLink]]([[Glyph SocketID|socketID]][, talentGroup]) - Returns link text for a Glyph in the desired Socket.
: REMOVED [[API GetGlyphLinkByID|GetGlyphLinkByID]](glyphID)
: REMOVED [[API GetGlyphSocketInfo|GetGlyphSocketInfo]]([[Glyph SocketID|socketID]][, talentGroup]) - Returns info on a specific Glyph Socket.
: [[API GetInspectGlyph|GetInspectGlyph]]()
: REMOVED [[API GetNumGlyphSockets|GetNumGlyphSockets]]() - Returns the number of Glyph Sockets available at max level. (Same result as NUM_GLYPH_SLOTS)
: REMOVED [[API GetNumGlyphs|GetNumGlyphs]]() - Get the number of glyphs available for the character's class.
: [[API GetPendingGlyphName|GetPendingGlyphName]](?)-
: REMOVED [[API GetSelectedGlyphSpellIndex|GetSelectedGlyphSpellIndex]]()
: REMOVED [[API GlyphMatchesSocket|GlyphMatchesSocket]]([[Glyph SocketID|socketID]]) - See if the Glyph held by the cursor matches the desired Socket.
: [[API HasAttachedGlyph|HasAttachedGlyph]](?) -
: [[API HasPendingGlyphCast|HasPendingGlyphCast]](?) -
: REMOVED [[API IsGlyphFlagSet|IsGlyphFlagSet]](filter) - Returns the current state of the selected Glyph filter
: [[API IsPendingGlyphRemoval|IsPendingGlyphRemoval]](?) -
: [[API IsSpellValidForPendingGlyph|IsSpellValidForPendingGlyph]](?) -
: REMOVED [[API PlaceGlyphInSocket|PlaceGlyphInSocket]]([[Glyph SocketID|socketID]]) - Places the Glyph held by the cursor into the desired Socket.
: REMOVED [[API RemoveGlyphFromSocket|RemoveGlyphFromSocket]]([[Glyph SocketID|socketID]]) - Removes the Glyph from the desired Socket.
: REMOVED [[API SetGlyphFilter|SetGlyphFilter]]()
: REMOVED [[API SetGlyphNameFilter|SetGlyphNameFilter]](string)
: REMOVED [[API SpellCanTargetGlyph|SpellCanTargetGlyph]]()
: REMOVED [[API ToggleGlyphFilter|ToggleGlyphFilter]](filter) - Toggles the state of the selected Glyph filter

=== GM Functions ===
: [[API CanComplainChat|CanComplainChat]](lineID) - determines if we should show the menu for reporting a line of chat spam (lineID comes from the player link in the chat line)
: [[API CanComplainInboxItem|CanComplainInboxItem]](index) - determines if we should show the “report spam” button on a mail item
: [[API ComplainInboxItem|ComplainInboxItem]](index) - complains about a particular mail item
: PROTECTED [[API DeleteGMTicket|DeleteGMTicket]]()
: [[API GetGMStatus|GetGMStatus]]()
: [[API GetGMTicket|GetGMTicket]]()
: REMOVED [[API GetGMTicketCategories|GetGMTicketCategories]]() - Return all available ticket categories (not as a table)
: [[API GMEuropaBugsEnabled|GMEuropaBugsEnabled]]()
: [[API GMEuropaComplaintsEnabled|GMEuropaComplaintsEnabled]]()
: [[API GMEuropaSuggestionsEnabled|GMEuropaSuggestionsEnabled]]()
: [[API GMEuropaTicketsEnabled|GMEuropaTicketsEnabled]]()
: [[API GMItemRestorationButtonEnabled|GMItemRestorationButtonEnabled]]()
: [[API GMQuickTicketSystemEnabled|GMQuickTicketSystemEnabled]]()
: [[API GMQuickTicketSystemThrottled|GMQuickTicketSystemThrottled]]()
: [[API GMReportLag|GMReportLag]]()
: [[API GMRequestPlayerInfo|GMRequestPlayerInfo]]()
: [[API GMResponseResolve|GMResponseResolve]]()
: [[API GMSubmitBug|GMSubmitBug]]()
: [[API GMSubmitSuggestion|GMSubmitSuggestion]]()
: [[API GMSurveyAnswer|GMSurveyAnswer]]()
: [[API GMSurveyAnswerSubmit|GMSurveyAnswerSubmit]](question, rank, comment) - ?
: [[API GMSurveyCommentSubmit|GMSurveyCommentSubmit]](comment) - ?
: [[API GMSurveyNumAnswers|GMSurveyNumAnswers]]()
: [[API GMSurveyQuestion|GMSurveyQuestion]] ?
: [[API GMSurveySubmit|GMSurveySubmit]] ?
: UI [[API HelpReportLag|HelpReportLag]](type) - Uses the Report Lag function on the help screen to report the specified type of lag
: REMOVED PROTECTED [[API NewGMTicket|NewGMTicket]](type,"text")
: PROTECTED [[API Stuck|Stuck]]() - Informs the game engine that the player is Stuck.
: REMOVED PROTECTED [[API UpdateGMTicket|UpdateGMTicket]](type,"text")
: [[API IsGMClient|IsGMClient]]()

=== Gossip Functions ===
: [[API CloseGossip|CloseGossip]]() - Dismiss the gossip window.
: [[API ForceGossip|ForceGossip]]() - Returns whether the gossip text ''must'' be displayed. (added 3.3.3)
: [[API GetGossipActiveQuests|GetGossipActiveQuests]]() - Retrieves a list of the active (?) quests on the NPC you are talking to.
: [[API GetGossipAvailableQuests|GetGossipAvailableQuests]]() - Retrieves a list of the available (!) quests on the NPC you are talking to.
: [[API GetGossipOptions|GetGossipOptions]]() - Retrieves a list of the available gossip items on the NPC you are talking to.
: [[API GetGossipText|GetGossipText]]() - Retrieves the gossip text.
: [[API GetNumGossipActiveQuests|GetNumGossipActiveQuests]]() - Returns the number of active quests that you should eventually turn in to this NPC.
: [[API GetNumGossipAvailableQuests|GetNumGossipAvailableQuests]]() - Returns the number of quests (that you are not already on) offered by this NPC.
: [[API GetNumGossipOptions|GetNumGossipOptions]]() - Returns the number of conversation options available with this NPC.
: [[API SelectGossipActiveQuest|SelectGossipActiveQuest]](index) - Selects an active quest.
: [[API SelectGossipAvailableQuest|SelectGossipAvailableQuest]](index) - Selects an available quest.
: [[API SelectGossipOption|SelectGossipOption]](index) - Selects on a gossip item.

=== Group Functions ===
See also [[#Raid Functions|Raid Functions]].
: [[API AcceptGroup|AcceptGroup]]() - Accept the invitation to party.
: [[API ConfirmReadyCheck|ConfirmReadyCheck]](isReady) - Indicate if you are ready or not.
: [[API ConvertToParty|ConvertToParty]]() - Converts a raid group with 5 or less members to a party.
: [[API ConvertToRaid|ConvertToRaid]]() - Converts party to raid.
: [[API DeclineGroup|DeclineGroup]]() - Decline the invitation to a party.
: [[API DoReadyCheck|DoReadyCheck]]() - Initiate a ready check.
: [[API GetLootMethod|GetLootMethod]]() - Return the currently active [[lootMethod]]
: [[API GetLootThreshold|GetLootThreshold]]() - Return the current loot threshold (for group/master loot)
: [[API GetMasterLootCandidate|GetMasterLootCandidate]](index) - Return the name of a player who is eligible to receive loot in master mode
: [[API GetNumGroupMembers|GetNumGroupMembers]]([groupType]) - Returns the total number of players in your group/raid.
: [[API GetNumSubgroupMembers|GetNumSubgroupMembers]]([groupType]) - Returns the number of ''other'' players in your party (or raid subgroup).
: [[API InviteUnit|InviteUnit]]("name") - Invites the specified player to the group you are currently in.
: [[API IsInGroup|IsInGroup]]([groupType]) - Return true if in a group
: [[API IsInRaid|IsInRaid]]([groupType]) - Return true if in a raid
: [[API LeaveParty|LeaveParty]]() - Quit the party, often useful to troubleshoot "phantom party" bugs which may list you in a party when you are in fact not.
: [[API PromoteToLeader|PromoteToLeader]]("unit") - Promote a unit to party leader.
: [[API SetLootMethod|SetLootMethod]]("lootMethod"[, "masterPlayer" or threshold]) - Set the current loot method
: [[API SetLootThreshold|SetLootThreshold]](itemQuality) - Set the threshold for group/master loot
: HW [[API UninviteUnit|UninviteUnit]]("name" [, "reason"]) - Kick a unit from the party if player is group leader; or initiate a kick vote in an LFD group.
: [[API UnitInParty|UnitInParty]]("unit") - Returns true if the unit is a member of your party.
: [[API UnitIsGroupLeader|UnitIsGroupLeader]]("unit" or "player name") - Returns true if the unit is the leader of your party.

=== Group Finder Functions ===
Introduced in [[Patch 3.3.0]] as the "Dungeon Finder" and "Raid Browser", this UI was completely overhauled in [[Patch 6.0.3]] and renamed to "Group Finder".
: [[API C_LFGList.AcceptInvite|C_LFGList.AcceptInvite]](resultID) - This function is not yet documented.
: [[API C_LFGList.ApplyToGroup|C_LFGList.ApplyToGroup]](resultID, comment, tankOK, healerOK, damageOK) - This function is not yet documented.
: [[API C_LFGList.CancelApplication|C_LFGList.CancelApplication]](resultID) - This function is not yet documented.
: [[API C_LFGList.ClearSearchResults|C_LFGList.ClearSearchResults]]() - This function is not yet documented.
: [[API C_LFGList.CreateListing|C_LFGList.CreateListing]]("groupName", itemLevel, "voiceChat", "comment", autoAccept) - This function is not yet documented.
: [[API C_LFGList.DeclineApplicant|C_LFGList.DeclineApplicant]](applicantID) - This function is not yet documented.
: [[API C_LFGList.DeclineInvite|C_LFGList.DeclineInvite]](resultID) - This function is not yet documented.
: [[API C_LFGList.GetActiveEntryInfo|C_LFGList.GetActiveEntryInfo]]() - Returns information about your currently listed group.
: [[API C_LFGList.GetActivityGroupInfo|C_LFGList.GetActivityGroupInfo]](groupID) - Returns information about an activity group.
: [[API C_LFGList.GetActivityInfo|C_LFGList.GetActivityInfo]](activityID) - Returns information about an activity for premade groups.
: [[API C_LFGList.GetActivityInfoExpensive|C_LFGList.GetActivityInfoExpensive]](activityID) - Checks if you are in the zone associated with an activity.
: [[API C_LFGList.GetApplicantInfo|C_LFGList.GetApplicantInfo]](applicantID) - Returns status informations and custom message of an applicant
: [[API C_LFGList.GetApplicantMemberInfo|C_LFGList.GetApplicantMemberInfo]](applicantID, memberIndex) - Returns name, class, level and more about an applicant group member
: [[API C_LFGList.GetApplicantMemberStats|C_LFGList.GetApplicantMemberStats]](applicantID, memberIndex) - Returns stats about an applicant group member
: [[API C_LFGList.GetApplicants|C_LFGList.GetApplicants]]() - Returns a table with applicantIDs
: [[API C_LFGList.GetApplicationInfo|C_LFGList.GetApplicationInfo]](resultID) - This function is not yet documented.
: [[API C_LFGList.GetApplications|C_LFGList.GetApplications]]() - This function is not yet documented.
: [[API C_LFGList.GetAvailableActivities|C_LFGList.GetAvailableActivities]]([categoryID[, groupID [, filter]]]) - Returns a list of available activityIDs.
: [[API C_LFGList.GetAvailableActivityGroups|C_LFGList.GetAvailableActivityGroups]](categoryID[,filter]) - Returns a list of available groupIDs.
: [[API C_LFGList.GetAvailableCategories|C_LFGList.GetAvailableCategories]]([filter]) - Returns a list of available categoryIDs.
: [[API C_LFGList.GetAvailableRoles|C_LFGList.GetAvailableRoles]]() - This function is not yet documented.
: [[API C_LFGList.GetCategoryInfo|C_LFGList.GetCategoryInfo]](categoryID) - Returns information about a specific category.
: [[API C_LFGList.GetNumApplicants|C_LFGList.GetNumApplicants]]() - This function is not yet documented.
: [[API C_LFGList.GetNumApplications|C_LFGList.GetNumApplications]]() - This function is not yet documented.
: [[API C_LFGList.GetNumInvitedApplicantMembers|C_LFGList.GetNumInvitedApplicantMembers]]() - This function is not yet documented.
: [[API C_LFGList.GetNumPendingApplicantMembers|C_LFGList.GetNumPendingApplicantMembers]]() - This function is not yet documented.
: [[API C_LFGList.GetRoleCheckInfo|C_LFGList.GetRoleCheckInfo]]() - This function is not yet documented.
: [[API C_LFGList.GetSearchResultEncounterInfo|C_LFGList.GetSearchResultEncounterInfo]](resultID) - This function is not yet documented.
: [[API C_LFGList.GetSearchResultFriends|C_LFGList.GetSearchResultFriends]](resultID) - This function is not yet documented.
: [[API C_LFGList.GetSearchResultInfo|C_LFGList.GetSearchResultInfo]](resultID) - This function is not yet documented.
: [[API C_LFGList.GetSearchResultMemberCounts|C_LFGList.GetSearchResultMemberCounts]](resultID) - This function is not yet documented.
: [[API C_LFGList.GetSearchResultMemberInfo|C_LFGList.GetSearchResultMemberInfo]](resultID, memberIndex) - This function is not yet documented.
: [[API C_LFGList.GetSearchResults|C_LFGList.GetSearchResults]]() - returns numResultID, totalResultID
: [[API C_LFGList.HasActivityList|C_LFGList.HasActivityList]]() - This function is not yet documented.
: [[API C_LFGList.InviteApplicant|C_LFGList.InviteApplicant]](applicantID) - This function is not yet documented.
: [[API C_LFGList.IsCurrentlyApplying|C_LFGList.IsCurrentlyApplying]]() - This function is not yet documented.
: [[API C_LFGList.RefreshApplicants|C_LFGList.RefreshApplicants]]() - This function is not yet documented.
: [[API C_LFGList.RemoveApplicant|C_LFGList.RemoveApplicant]](applicantID) - This function is not yet documented.
: [[API C_LFGList.RemoveListing|C_LFGList.RemoveListing]]() - This function is not yet documented.
: [[API C_LFGList.ReportApplicant|C_LFGList.ReportApplicant]](applicantID) - This function is not yet documented.
: [[API C_LFGList.ReportSearchResult|C_LFGList.ReportSearchResult]](resultID, complaintType) - This function is not yet documented.
: [[API C_LFGList.RequestAvailableActivities|C_LFGList.RequestAvailableActivities]]() - This function is not yet documented.
: [[API C_LFGList.Search|C_LFGList.Search]](categoryID, "query" [, filter [, preferredFilters] ]) - This function is not yet documented.
: [[API C_LFGList.SetApplicantMemberRole|C_LFGList.SetApplicantMemberRole]](applicantID, memberIndex, "ROLE") - This function is not yet documented.
: [[API C_LFGList.UpdateListing|C_LFGList.UpdateListing]](lfgID, "groupName", itemLevel, "voiceChat", "comment", autoAccept) - This function is not yet documented.

The following are functions that were used by the old "Dungeon Finder" / "Raid Browser" UIs. They may still be in use in the Group Finder UI:
: [[API RefreshLFGList|RefreshLFGList]]()
: [[API SearchLFGGetEncounterResults|SearchLFGGetEncounterResults]](index, bossIndex) - returns bossName, texture, isKilled
: [[API SearchLFGGetJoinedID|SearchLFGGetJoinedID]]() - returns the currently selected raid ID or nil
: [[API SearchLFGGetNumResults|SearchLFGGetNumResults]]() - returns numResults, totalResults
: [[API SearchLFGGetPartyResults|SearchLFGGetPartyResults]](index, partyMemberIndex) - returns name, level, relationship, className, areaName, comment
: [[API SearchLFGGetResults|SearchLFGGetResults]](index) - returns name, level, areaName, className, comment, partyMembers, status, class, encountersTotal, encountersComplete, isLeader, isTank, isHealer, isDamage
: HW [[API SearchLFGJoin|SearchLFGJoin]](typeID, raidID) - enters a search into the Raid Browser
: [[API SearchLFGLeave|SearchLFGLeave]]() - removes yourself from looking through the Raid Browser. Equivalent to selecting "none" in the Raid Browser
: [[API SearchLFGSort|SearchLFGSort]](sortType)
: [[API SetLFGComment|SetLFGComment]](comment) - sets the comment in the raid browser

=== Guild Functions ===
: [[API AcceptGuild|AcceptGuild]]() - The player accepts the invitation to join a guild.
: [[API BuyGuildCharter|BuyGuildCharter]]("guildName") - Purchases a guild charter for ''guildName''.
: [[API CanEditGuildEvent|CanEditGuildEvent]]() - Returns true if you are allowed to edit guild events (in the calendar),
: [[API CanEditGuildInfo|CanEditGuildInfo]]() - Returns true if you are allowed to edit the guild info
: [[API CanEditMOTD|CanEditMOTD]]() - Returns true if you are allowed to edit the guild motd.
: [[API CanEditOfficerNote|CanEditOfficerNote]]() - Returns true if you are allowed to edit a guild member's officer note.
: [[API CanEditPublicNote|CanEditPublicNote]]() - Returns true if you are allowed to edit a guild member's public note.
: [[API CanGuildDemote|CanGuildDemote]]() - Returns true if you are allowed to demote a guild member.
: [[API CanGuildInvite|CanGuildInvite]]() - Returns true if you are allowed to invite a new member to the guild.
: [[API CanGuildPromote|CanGuildPromote]]() - Returns true if you are allowed to demote a guild member.
: [[API CanGuildRemove|CanGuildRemove]]() - Returns true if you are allowed to remove a guild member.
: [[API CanReplaceGuildMaster|CanReplaceGuildMaster]]() - Returns whether you can impeach the Guild Master due to inactivity.
: [[API CanViewOfficerNote|CanViewOfficerNote]]() - Returns true if you are allowed to view a Officer Note.
: [[API CloseGuildRegistrar|CloseGuildRegistrar]]() - ?.
: [[API CloseGuildRoster|CloseGuildRoster]]() - ?.
: [[API CloseTabardCreation|CloseTabardCreation]]() - ?.
: [[API DeclineGuild|DeclineGuild]]() - The player declines the invitation to join a guild.
: [[API GetGuildApplicantInfo|GetGuildApplicantInfo]](index) - Returns information about a guild applicant.
: [[API GetGuildCharterCost|GetGuildCharterCost]]() - Returns the cost of purchasing a guild charter.
: [[API GetGuildEventInfo|GetGuildEventInfo]](index) - Returns the event information. (Added in 2.3)
: [[API GetGuildFactionInfo|GetGuildFactionInfo]]() - Returns the guild name and faction standing of the player.
: [[API GetGuildInfo|GetGuildInfo]]("unit") - This function returns the name of the guild ''unit'' belongs to.
: [[API GetGuildInfoText|GetGuildInfoText]]() - Returns the persistant Guild Information data. (added in 1.9)
: REMOVED [[API GetGuildRosterContribution|GetGuildRosterContribution]](index) - Returns weekly and total XP as well as weekly and total rank.
: REMOVED [[API GetGuildRosterLargestContribution|GetGuildRosterLargestContribution]]() - Returns max weekly XP and max total XP.
: [[API GetGuildRosterLargestAchievementPoints|GetGuildRosterLargestAchievementPoints]]() - Returns max achievements points.
: [[API GetGuildRosterInfo|GetGuildRosterInfo]](index) - This function is used to get info on members in the guild.
: [[API GetGuildRosterLastOnline|GetGuildRosterLastOnline]](index) - Returns time since last online for indexth member in current sort order.
: [[API GetGuildRosterMOTD|GetGuildRosterMOTD]]() - Returns guild's MOTD.
: [[API GetGuildRosterSelection|GetGuildRosterSelection]]() - Returns the index of the current selected guild member.
: [[API GetGuildRosterShowOffline|GetGuildRosterShowOffline]]() - Returns true if showing offline members of the guild.
: [[API GetGuildTradeSkillInfo|GetGuildTradeSkillInfo]](index) - Returns the tradeskill index for a guild tradeskill using the index from GetNumGuildTradeSkill
: [[API GetNumGuildApplicants|GetNumGuildApplicants]]() - Returns the total number of guild applicants.
: [[API GetNumGuildEvents|GetNumGuildEvents]]() - Returns the number of guild events. (Added in 2.3)
: [[API GetNumGuildMembers|GetNumGuildMembers]]() - Returns the number of total and online guild members.
: [[API GetNumGuildTradeSkill|GetNumGuildTradeSkill]]() - Returns the number of tradeskills available to the guild UI
: [[API GetTabardCreationCost|GetTabardCreationCost]]() - Returns cost in coppers.
: [[API GetTabardInfo|GetTabardInfo]]() -?.
: [[API GuildControlAddRank|GuildControlAddRank]]("name") - Add another rank called "name". Only Guildmaster.
: [[API GuildControlDelRank|GuildControlDelRank]]("name") - Delete rank "name". Only Guildmaster.
: [[API GuildControlGetNumRanks|GuildControlGetNumRanks]]() - Returns number of ranks after guild frame open. Any guild member can use this.
: [[API GuildControlGetRankFlags|GuildControlGetRankFlags]]() - Returns list of values for each permission for a select rank (default rank 1).
: [[API GuildControlGetRankName|GuildControlGetRankName]](index) - Returns name of the rank at index. Any guild member can use this.
: [[API GuildControlSaveRank|GuildControlSaveRank]]("name") - Saves the permissions for rank "name". Only Guildmaster.
: [[API GuildControlSetRank|GuildControlSetRank]](rank) - Sets the currently selected rank to view.
: [[API GuildControlSetRankFlag|GuildControlSetRankFlag]](index, enabled) - Enable/disable permission for an action at index. Only Guildmaster.
: [[API GuildDemote|GuildDemote]]("name") - Demotes a player "name".
: [[API GuildDisband|GuildDisband]]() - Disbands at once your guild. You must be the guild's leader to do so. Be careful, no warning is given prior disbanding.
: [[API GuildInfo|GuildInfo]]() - Displays information about the guild you are a member of.
: [[API GuildInvite|GuildInvite]]("name") - Invites a player to your guild.
: [[API GuildLeave|GuildLeave]]() - Removes you from your current guild.
: [[API GuildPromote|GuildPromote]]("name") - Promotes a player "name".
: [[API GuildRoster|GuildRoster]]() - Fetches the guild list and fires a GUILD_ROSTER_UPDATE event.
: [[API GuildRosterSetOfficerNote|GuildRosterSetOfficerNote]](index, "note") - Sets the officer note at index to "note".
: [[API GuildRosterSetPublicNote|GuildRosterSetPublicNote]](index, "note") - Sets the public note at index to "note".
: [[API GuildSetMOTD|GuildSetMOTD]]("note") - Set Guild Message of the Day to "note".
: [[API GuildSetLeader|GuildSetLeader]]("name") - Transfers guild leadership to another character.
: [[API GuildUninvite|GuildUninvite]]("name") - Removes the member "name".
: [[API IsGuildLeader|IsGuildLeader]]("name") - Determine if player "name" is a guild master.
: [[API IsInGuild|IsInGuild]]() - Lets you know whether you are in a guild.
: [[API QueryGuildEventLog|QueryGuildEventLog]]() - Fetches the guild event list and fires a GUILD_EVENT_LOG_UPDATE event. (Added in 2.3)
: [[API ReplaceGuildMaster|ReplaceGuildMaster]]() - Impeaches the current Guild Master.
: [[API RequestGuildApplicantsList|RequestGuildApplicantsList]]() - Requests information about guild applicants.
: [[API SetGuildInfoText|SetGuildInfoText]]() - Sets the persistant Guild Information data. Limit is 500 letters (GuildInfoEditBox is limited to this number). Longer texts are possible, but will be reseted during the day. (added in 1.9)
: [[API SetGuildRosterSelection|SetGuildRosterSelection]](index) - Selects/deselects a guild member according current sorting order.
: [[API SetGuildRosterShowOffline|SetGuildRosterShowOffline]](enabled) - Sets/Resets the show offline members flag.
: [[API SortGuildRoster|SortGuildRoster]]("sort") - Sorts guildroster according "sort". Any unknown values sort on "name".

=== Guild Bank Functions ===
These functions were introduced in [[Patch 2.3.0]].
: [[API AutoStoreGuildBankItem|AutoStoreGuildBankItem]](tab, slot) - Withdraws an item from the bank, and automatically stores it in the player's inventory.
: [[API BuyGuildBankTab|BuyGuildBankTab]]() - Buys a guild bank tab, without confirmation.
: [[API CanEditGuildBankTabInfo|CanEditGuildBankTabInfo]]() -
: [[API CanGuildBankRepair|CanGuildBankRepair]]() -
: [[API CanWithdrawGuildBankMoney|CanWithdrawGuildBankMoney]]() - Boolean, true if player is permitted to withdraw funds. No bank proximity required.
: [[API CloseGuildBankFrame|CloseGuildBankFrame]]() - Closes the guild bank frame
: [[API DepositGuildBankMoney|DepositGuildBankMoney]](money) - Deposits "money" amount in copper.
: [[API GetCurrentGuildBankTab|GetCurrentGuildBankTab]]() - Integer of selected tab, >= 1
: [[API GetGuildBankBonusDepositMoney|GetGuildBankBonusDepositMoney]]() -
: [[API GetGuildBankItemInfo|GetGuildBankItemInfo]](tab, slot) - Returns texture, amount and integer 1 or nil depending on locked state
: [[API GetGuildBankItemLink|GetGuildBankItemLink]](tab, slot) - Returns itemLink
: [[API GetGuildBankMoney|GetGuildBankMoney]]() - Integer, funds available in copper.
: [[API GetGuildBankMoneyTransaction|GetGuildBankMoneyTransaction]](index) - No bank proximity required, however QueryGuildBankLog function requires proximity.
: [[API GetGuildBankTabCost|GetGuildBankTabCost]]() - Integer OR nil - cost in copper OR no tabs available to buy
: [[API GetGuildBankTabInfo|GetGuildBankTabInfo]](tab) - Returns the name and icon of the guild bank tab queried.
: [[API GetGuildBankTabPermissions|GetGuildBankTabPermissions]](tab) - Gets display / player's access info. Limited data available without bank proximity.
: [[API GetGuildBankText|GetGuildBankText]]() -
: [[API GetGuildBankTransaction|GetGuildBankTransaction]](tab, index) - Requires Guild Bank Proximity
: [[API GetGuildBankWithdrawGoldLimit|GetGuildBankWithdrawGoldLimit]]() - Returns withdraw limit for currently selected rank in guild control
: [[API GetGuildBankWithdrawMoney|GetGuildBankWithdrawMoney]]() -
: [[API GetGuildTabardFileNames|GetGuildTabardFileNames]]()
: [[API GetNumGuildBankMoneyTransactions|GetNumGuildBankMoneyTransactions]]() - Returns number of money log entries
: [[API GetNumGuildBankTabs|GetNumGuildBankTabs]]() - Integer count of bought tabs, >= 0. No bank proximity required.
: [[API GetNumGuildBankTransactions|GetNumGuildBankTransactions]](tab) - Returns number of log transactions for tab "tab"
: [[API PickupGuildBankItem|PickupGuildBankItem]](tab, slot) - Picks up an item from the guild bank
: [[API PickupGuildBankMoney|PickupGuildBankMoney]](money) - Picks up "money" copper from the guild bank
: [[API QueryGuildBankLog|QueryGuildBankLog]](tab) - Updates bank log data from the server, called before all transaction functions. "Money tab" is MAX_GUILDBANK_TABS+1
: [[API QueryGuildBankTab|QueryGuildBankTab]](tab) - Updates bank tab data from the server, called before all item functions.
: [[API QueryGuildBankText|QueryGuildBankText]]() -
: [[API SetCurrentGuildBankTab|SetCurrentGuildBankTab]](tab) - Select different bank tab in the UI
: [[API SetGuildBankTabInfo|SetGuildBankTabInfo]](tab, name, iconIndex) - Modifies name and icon for tab
: [[API SetGuildBankTabItemWithdraw|SetGuildBankTabItemWithdraw]]() -
: [[API SetGuildBankTabPermissions|SetGuildBankTabPermissions]](tab, index, enabled) - Modifies the permissions for the GuildBankTab. Guild Leader Only.
: [[API SetGuildBankText|SetGuildBankText]]() -
: [[API SetGuildBankWithdrawGoldLimit|SetGuildBankWithdrawGoldLimit]](amount) - Sets the gold withdraw limit from the guild bank. Guild Leader Only.
: [[API SplitGuildBankItem|SplitGuildBankItem]](tab, slot, amount) - Picks up part of a stack
: [[API WithdrawGuildBankMoney|WithdrawGuildBankMoney]](money) - Withdraws "money" copper from the guild bank

=== Heirloom Functions ===
: [[API C_Heirloom.CanHeirloomUpgradeFromPending|C_Heirloom.CanHeirloomUpgradeFromPending]](itemID) - This function is not yet documented
: [[API C_Heirloom.CreateHeirloom|C_Heirloom.CreateHeirloom]](itemID) - This function is not yet documented
: [[API C_Heirloom.GetCollectedHeirloomFilter|C_Heirloom.GetCollectedHeirloomFilter]]() - This function is not yet documented
: [[API C_Heirloom.GetHeirloomInfo|C_Heirloom.GetHeirloomInfo]](itemID) - This function is not yet documented
: REMOVED [[API C_Heirloom.GetHeirloomItemIDFromIndex|C_Heirloom.GetHeirloomItemIDFromIndex]](Index) - This function is not yet documented
: [[API C_Heirloom.GetHeirloomLink|C_Heirloom.GetHeirloomLink]](itemID) - This function is not yet documented
: [[API C_Heirloom.GetHeirloomMaxUpgradeLevel|C_Heirloom.GetHeirloomMaxUpgradeLevel]](itemID) - This function is not yet documented
: [[API C_Heirloom.GetHeirloomSourceFilter|C_Heirloom.GetHeirloomSourceFilter]](source) - This function is not yet documented
: [[API C_Heirloom.GetNumHeirlooms|C_Heirloom.GetNumHeirlooms]]() - This function is not yet documented
: [[API C_Heirloom.GetNumKnownHeirlooms|C_Heirloom.GetNumKnownHeirlooms]]() - This function is not yet documented
: [[API C_Heirloom.GetUncollectedHeirloomFilter|C_Heirloom.GetUncollectedHeirloomFilter]]() - This function is not yet documented
: [[API C_Heirloom.IsItemHeirloom|C_Heirloom.IsItemHeirloom]](itemID) - This function is not yet documented
: [[API C_Heirloom.IsPendingHeirloomUpgrade|C_Heirloom.IsPendingHeirloomUpgrade]]() - This function is not yet documented
: [[API C_Heirloom.PlayerHasHeirloom|C_Heirloom.PlayerHasHeirloom]](itemID) - This function is not yet documented
: [[API C_Heirloom.SetCollectedHeirloomFilter|C_Heirloom.SetCollectedHeirloomFilter]](boolean) - This function is not yet documented
: [[API C_Heirloom.SetHeirloomSourceFilter|C_Heirloom.SetHeirloomSourceFilter]](source, filtered) - This function is not yet documented
: [[API C_Heirloom.SetUncollectedHeirloomFilter|C_Heirloom.SetUncollectedHeirloomFilter]](boolean) - This function is not yet documented
: [[API C_Heirloom.UpgradeHeirloom|C_Heirloom.UpgradeHeirloom]](itemID) - This function is not yet documented

=== Ignore Functions ===
: [[API AddIgnore|AddIgnore]]("name") - Add a player to your ignore list.
: [[API AddOrDelIgnore|AddOrDelIgnore]]("name") - Toggles the ignore state of the specified name.
: [[API DelIgnore|DelIgnore]]("name") - Delete a player from your ignore list.
: [[API GetIgnoreName|GetIgnoreName]](index) - Get the name of the player on your ignore list at index.
: [[API GetNumIgnores|GetNumIgnores]]() - Get the number of players on your ignore list.
: [[API GetSelectedIgnore|GetSelectedIgnore]]() - Returns the currently selected index in the ignore listing
: [[API SetSelectedIgnore|SetSelectedIgnore]](index) - Sets the currently selected ignore entry

=== Inspection Functions ===
: [[API CanInspect|CanInspect]]("unit"[, showError]) - Returns whether you can inspect the specified unit.
: [[API CheckInteractDistance|CheckInteractDistance]]("unit", interaction) - Returns whether you're in range to perform various interactions with the specified unit.
: [[API ClearInspectPlayer|ClearInspectPlayer]]() - Reset inspect data once finished with it.
: [[API HasInspectHonorData|HasInspectHonorData]]() - Determine if the inspected unit's honor statistics are available.
: [[API RequestInspectHonorData|RequestInspectHonorData]]() - Request honor information for inspected unit.
: [[API GetInspectHonorData|GetInspectHonorData]]() - Return honor information about the inspected player.
: [[API NotifyInspect|NotifyInspect]]("unit") - Requests information about a unit's inventory and talents from the server.
: UI [[API InspectUnit|InspectUnit]]("unit") - Instructs FrameXML to inspect a particular unit (query server; show UI).

=== Instance Functions ===
: [[API CanShowResetInstances|CanShowResetInstances]]() - Determine if player can reset instances at the moment.
: [[API GetBattlefieldInstanceExpiration|GetBattlefieldInstanceExpiration]]() - Get shutdown timer for the battlefield instance.
: [[API GetBattlefieldInstanceRunTime|GetBattlefieldInstanceRunTime]]() - In milliseconds, the time since battleground started (seems to be queried from server because it is not in sync with time()).
: [[API GetInstanceBootTimeRemaining|GetInstanceBootTimeRemaining]]() - Gets the time in seconds after which the player will be ejected from an instance.
: [[API GetInstanceInfo|GetInstanceInfo]]() - Gets informations about the current Instance
: [[API GetNumSavedInstances|GetNumSavedInstances]]() - Gets the number of instances for which the player currently has lockout data saved.
: [[API GetSavedInstanceInfo|GetSavedInstanceInfo]](index) - Gets information about an instance for which the player has saved lockout data.
: [[API IsInInstance|IsInInstance]]() - Returns 1 if the player is in an instance, as well as the type of instance (pvp, raid, etc.).
: [[API ResetInstances|ResetInstances]]() - Reset instances.
: [[API GetDifficultyInfo|GetDifficultyInfo]]() - Returns information about a difficulty.
: [[API GetDungeonDifficultyID|GetDungeonDifficultyID]]() - Returns the player's current Dungeon Difficulty setting (1, 2, 8).
: [[API SetDungeonDifficultyID|SetDungeonDifficultyID]](difficultyID) - Sets the player's Dungeon Difficulty setting (for the 5-man instances). See [[difficultyID]].
: [[API GetRaidDifficultyID|GetRaidDifficultyID]]() - Returns the player's current Raid Difficulty setting (1-14).
: [[API SetRaidDifficultyID|SetRaidDifficultyID]](difficultyID) - Sets the players Raid Difficulty settings (for 10-man, 25-man instances). See [[difficultyID]].
: [[API GetInstanceLockTimeRemaining|GetInstanceLockTimeRemaining]]() - Returns information about the instance lock timer for the instance the player is currently entering.
: [[API GetInstanceLockTimeRemainingEncounter|GetInstanceLockTimeRemainingEncounter]](id) - Returns information about bosses in the instance the player is about to be saved to.

=== Inventory Functions ===
These functions manage your "inventory", that is, '''equipped items'''. See also [[#Container/Bag Functions|Container/Bag Functions]] and [[#Bank Functions|Bank Functions]].
: [[API AutoEquipCursorItem|AutoEquipCursorItem]]() - Causes the equipment on the cursor to be equipped.
: [[API BankButtonIDToInvSlotID|BankButtonIDToInvSlotID]](buttonID, isBag) - Returns the ID number of a bank button or bag in terms of inventory slot ID.
: [[API CancelPendingEquip|CancelPendingEquip]](index) - This function is used to cancel a pending equip.
: [[API ConfirmBindOnUse|ConfirmBindOnUse]]()
: [[API ContainerIDToInventoryID|ContainerIDToInventoryID]]([[bagId|bagID]])
: [[API CursorCanGoInSlot|CursorCanGoInSlot]]([[inventorySlotId|invSlot]]) - Return true if the item currently held by the cursor can go into the given inventory (equipment) slot
: [[API EquipCursorItem|EquipCursorItem]]([[inventorySlotId|invSlot]])
: [[API EquipPendingItem|EquipPendingItem]]([[inventorySlotId|invSlot]]) - Equips the currently pending Bind-on-Equip or Bind-on-Pickup item from the specified inventory slot. (Internal — do not use.)
: [[API GetAverageItemLevel|GetAverageItemLevel]]() - Return the character's current average iLevel and current average iLevel equipped.
: [[API GetInventoryAlertStatus|GetInventoryAlertStatus]](index) - Returns one of several codes describing the "status" of an equipped item.
: [[API GetInventoryItemBroken|GetInventoryItemBroken]]("unit", invSlot) - Determine if an inventory item is broken (no durability).
: [[API GetInventoryItemCooldown|GetInventoryItemCooldown]]("unit", invSlot) - Get cooldown information for an inventory item.
: [[API GetInventoryItemCount|GetInventoryItemCount]]("unit", invSlot) - Determine the quantity of an item in an inventory slot.
: [[API GetInventoryItemDurability|GetInventoryItemDurability]]([[inventorySlotId|invSlot]]) - Returns the maximum and remaining durability points for an inventory item.
: REMOVED [[API GetInventoryItemGems|GetInventoryItemGems]](invSlot) - Returns item ids of the gems socketed in the item in the specified inventory slot.
: [[API GetInventoryItemID|GetInventoryItemID]]("unit", invSlot) - Returns the item id of the item in the specified inventory slot.
: [[API GetInventoryItemLink|GetInventoryItemLink]]("unit", invSlot) - Returns an [[itemLink]] for an inventory (equipped) item.
: [[API GetInventoryItemQuality|GetInventoryItemQuality]]("unit", invSlot) - Return the quality of an inventory item.
: [[API GetInventoryItemTexture|GetInventoryItemTexture]]("unit", invSlot) - Return the texture for an inventory item.
: [[API GetInventorySlotInfo|GetInventorySlotInfo]]([[inventorySlotName|invSlotName]]) - Get the info for a named inventory slot (slot ID and texture)
: [[API GetWeaponEnchantInfo|GetWeaponEnchantInfo]]() - Return information about main and offhand weapon enchantments.
: [[API HasWandEquipped|HasWandEquipped]]() - Returns 1 if a wand is equipped, false otherwise.
: [[API IsInventoryItemLocked|IsInventoryItemLocked]](id) - Returns whether an inventory item is locked, usually as it awaits pending action.
: [[API OffhandHasWeapon|OffhandHasWeapon]]() - Determine if your offhand carries a weapon.
: [[API PickupBagFromSlot|PickupBagFromSlot]](slot) - Picks up the bag from the specified slot, placing it in the cursor. If an item is already picked up, this places the item into the specified slot, swapping the items if needed.
: [[API PickupInventoryItem|PickupInventoryItem]]([[inventorySlotId|invSlot]]) - "Picks up" an item from the player's worn inventory.
: [[API UpdateInventoryAlertStatus|UpdateInventoryAlertStatus]]()
: PROTECTED [[API UseInventoryItem|UseInventoryItem]]([[inventorySlotId|invSlot]]) - Use an item in a specific inventory slot.

=== Item Functions ===
These functions are those which operate on item links or item information directly. See also [[#Container/Bag Functions|Container/Bag Functions]] and [[#Inventory Functions|Inventory Functions]].
: [[API EquipItemByName|EquipItemByName]](itemId or "itemName" or "itemLink"[, invSlot]) - Equips an item, optionally into a specified slot.
: [[API GetAuctionItemLink|GetAuctionItemLink]]("type", index) - Returns an [[itemLink]] for the specified auction item.
: [[API GetContainerItemLink|GetContainerItemLink]]([[bagId|bagID]], slot) - Returns the [[itemLink]] of the item located in bag#, slot#.
: [[API GetItemCooldown|GetItemCooldown]](itemId) - Returns startTime, duration, enable.
: [[API GetItemCount|GetItemCount]](itemId or "itemName" or "itemLink"[, includeBank][, includeCharges]) - Returns number of such items in inventory[, or charges instead if it has charges]
: [[API GetItemFamily|GetItemFamily]](itemId or "itemName" or "itemLink") - Returns the bag type that an item can go into, or for bags the type of items that it can contain. (added in [[Patch 2.4]])
: [[API GetItemIcon|GetItemIcon]](itemId) - Returns the icon for the item. Works for any valid item even if it's not in the cache. (added in [[Patch 2.4]])
: [[API GetItemInfo|GetItemInfo]](itemId or "itemString" or "itemName" or "itemLink") - Returns information about an item.
: [[API GetItemQualityColor|GetItemQualityColor]](quality) - Returns the RGB color codes for a quality.
: [[API GetItemSpell|GetItemSpell]](item) - Returns name, rank.
: [[API GetItemStats|GetItemStats]](itemLink, statTable) - Returns a table of stats for an item.
: [[API GetMerchantItemLink|GetMerchantItemLink]](index) - Returns an [[itemLink]] for the given purchasable item
: [[API GetQuestItemLink|GetQuestItemLink]]("type", index) - Returns an [[itemLink]] for a quest reward item.
: [[API GetQuestLogItemLink|GetQuestLogItemLink]]("type", index) - Returns an [[itemLink]] for a quest reward item.
: [[API GetTradePlayerItemLink|GetTradePlayerItemLink]](id) - Returns an [[itemLink]] for the given item in your side of the trade window (if open)
: [[API GetTradeSkillItemLink|GetTradeSkillItemLink]](index) - Returns the [[itemLink]] for a trade skill item.
: [[API GetTradeSkillReagentItemLink|GetTradeSkillReagentItemLink]](index, reagentId) - Returns the [[itemLink]] for one of the reagents needed to craft the given item
: [[API GetTradeTargetItemLink|GetTradeTargetItemLink]](id) - Returns an [[itemLink]] for the given item in the other player's side of the trade window (if open)
: [[API IsUsableItem|IsUsableItem]](item) - Returns usable, noMana.
: [[API IsConsumableItem|IsConsumableItem]](item) -
: [[API IsCurrentItem|IsCurrentItem]](item) -
: [[API IsEquippedItem|IsEquippedItem]](item) -
: [[API IsEquippableItem|IsEquippableItem]](itemId or "itemName" or "itemLink") - Returns whether an item can be equipped.
: [[API IsEquippedItemType|IsEquippedItemType]]("type") - Where "type" is any valid inventory type, item class, or item subclass.
: [[API IsItemInRange|IsItemInRange]]("itemName" or "itemLink", "unit") - Nil for invalid target, false for out of range, true for in range.
: [[API ItemHasRange|ItemHasRange]](item) -
: [[API SplitContainerItem|SplitContainerItem]](bagID,slot,amount) - Picks up part of a stack.
: UI [[API SetItemRef|SetItemRef]](link, text, button) - Handles item link tooltips in chat.
: PROTECTED [[API UseItemByName|UseItemByName]]("itemName", "unit") - Use an item on the unit specified.

=== Item Socketing Functions ===
The following were introduced along with socketed items and gems in [[Patch 2.0]]. ID refers to a 1-based index of the sockets in the item being considered for socketing.
: [[API AcceptSockets|AcceptSockets]]() - Sockets tentative gems into the sockets, replacing existing gems if necessary.
: [[API ClickSocketButton|ClickSocketButton]](id) - If the cursor is currently holding a gem, tentatively insert it into the socket.
: [[API CloseSocketInfo|CloseSocketInfo]]() - Stops considering the item for socketing, without applying changes.
: [[API GetSocketItemInfo|GetSocketItemInfo]]() - Returns information about the item currently being socketed.
: [[API GetSocketItemRefundable|GetSocketItemRefundable]]() - Returns whether the item currently being socketed is refundable.
: [[API GetSocketItemBoundTradeable|GetSocketItemBoundTradeable]]() - Returns whether the item currently being socketed is temporarily tradable (BoP boss loot).
: [[API GetNumSockets|GetNumSockets]]() - Returns the number of sockets in the item currently being socketed.
: [[API GetSocketTypes|GetSocketTypes]](id) - Returns the type (color) of a socket in the item.
: [[API GetExistingSocketInfo|GetExistingSocketInfo]](id) - Returns information about the existing gem in the socket.
: [[API GetExistingSocketLink|GetExistingSocketLink]](id) - Returns an item link for the existing gem in the socket.
: [[API GetNewSocketInfo|GetNewSocketInfo]](id) - Returns information about the new (tentative) gem in the socket.
: [[API GetNewSocketLink|GetNewSocketLink]](id) - Returns an item link for the new (tentative) gem in the socket.
: [[API SocketInventoryItem|SocketInventoryItem]](slot) - Considers the item in the inventory slot for socketing.
: [[API SocketContainerItem|SocketContainerItem]](bag, slot) - Consider an item in a container slot for socketing.

=== Item Text Functions ===
These functions relate to item text (books, etc).
: [[API CloseItemText|CloseItemText]]() - Close an open item text (book, plaque, etc).
: [[API ItemTextGetCreator|ItemTextGetCreator]]() - Get the creator of the current text (if player-created).
: [[API ItemTextGetItem|ItemTextGetItem]]() - Get the name of the text.
: [[API ItemTextGetMaterial|ItemTextGetMaterial]]() - Get the material on which the text is printed.
: [[API ItemTextGetPage|ItemTextGetPage]]() - Get the page number of the currently viewed page.
: [[API ItemTextGetText|ItemTextGetText]]() - Get the page contents of the currently viewed page.
: [[API ItemTextHasNextPage|ItemTextHasNextPage]]() - Determine if there is another page after the current one.
: [[API ItemTextNextPage|ItemTextNextPage]]() - Request the next page of the text.
: [[API ItemTextPrevPage|ItemTextPrevPage]]() - Request the previous page of the text.

=== Knowledge Base Functions ===
:[[API KBArticle_BeginLoading|KBArticle_BeginLoading]](articleId, searchType) - Starts the article loading process.
:[[API KBArticle_GetData|KBArticle_GetData]]() - Returns information about the current article.
:[[API KBArticle_IsLoaded|KBArticle_IsLoaded]]() - Returns true if an article is loaded.
:[[API KBQuery_BeginLoading|KBQuery_BeginLoading]](searchText, categoryIndex, subcategoryIndex, articlesPerPage, curPage) - Starts a query for articles.
:[[API KBQuery_GetArticleHeaderCount|KBQuery_GetArticleHeaderCount]]() - Returns the number of article headers in the current query.
:[[API KBQuery_GetArticleHeaderData|KBQuery_GetArticleHeaderData]](index) - Returns information about an article header of the current query.
:[[API KBQuery_GetTotalArticleCount|KBQuery_GetTotalArticleCount]]() - Returns the total number of articles that matches the current query.
:[[API KBQuery_IsLoaded|KBQuery_IsLoaded]]() - Returns true if a query loaded successfuly.
:[[API KBSetup_BeginLoading|KBSetup_BeginLoading]](articlesPerPage, curPage) - Starts the loading process for the KB start page.
:[[API KBSetup_GetArticleHeaderCount|KBSetup_GetArticleHeaderCount]]() - Returns the number of articles for the current page.
:[[API KBSetup_GetArticleHeaderData|KBSetup_GetArticleHeaderData]](index) - Returns information for an article header.
:[[API KBSetup_GetCategoryCount|KBSetup_GetCategoryCount]]() - Returns the number of categories in the knowledge base.
:[[API KBSetup_GetCategoryData|KBSetup_GetCategoryData]](index) - Returns information about a category.
:[[API KBSetup_GetLanguageCount|KBSetup_GetLanguageCount]]() - Returns the number of languages in the knowledge base.
:[[API KBSetup_GetLanguageData|KBSetup_GetLanguageData]](index) - Returns information about a language.
:[[API KBSetup_GetSubCategoryCount|KBSetup_GetSubCategoryCount]](category) - Returns the number of subcategories for a category.
:[[API KBSetup_GetSubCategoryData|KBSetup_GetSubCategoryData]](category, index) - Returns information about a subcategory.
:[[API KBSetup_GetTotalArticleCount|KBSetup_GetTotalArticleCount]]() - Returns the total number of articles in the knowlege base.
:[[API KBSetup_IsLoaded|KBSetup_IsLoaded]]() - Returns true if the knowledge base is loaded successfuly.
:[[API KBSystem_GetMOTD|KBSystem_GetMOTD]]() - Returns the server message of the day.
:[[API KBSystem_GetServerNotice|KBSystem_GetServerNotice]]() - Returns the server notice.
:[[API KBSystem_GetServerStatus|KBSystem_GetServerStatus]]() - Returns the server status text.

=== Location Functions ===
These functions are related to the current location of the player and how it is displayed. See also [[#Map Functions|Map Functions]].
: [[API GetMinimapZoneText|GetMinimapZoneText]]() - Returns the zone text, that is displayed over the minimap.
: [[API GetRealZoneText|GetRealZoneText]]() - Returns either instance name or zone name
: [[API GetSubZoneText|GetSubZoneText]]() - Returns the subzone text (e.g. "The Canals").
: [[API GetZonePVPInfo|GetZonePVPInfo]]() - Returns PVP info for the current zone.
: [[API GetZoneText|GetZoneText]]() - Returns the zone text (e.g. "Stormwind City").

=== Looking For Group Functions===
Functions for use in the "Looking For Group" tool. See also: [[#Group Finder Functions|Group Finder Functions]] and [[#Looking for Raid Functions|Looking for Raid Functions]]
: HW [[API AcceptProposal|AcceptProposal]]() - Accept an LFD group invite and enter the dungeon.
: [[API CanPartyLFGBackfill|CanPartyLFGBackfill]]() - Returns whether the party is eligible to recruit additional members from the LFG pool.
: [[API ClearAllLFGDungeons|ClearAllLFGDungeons]]()
: [[API CompleteLFGRoleCheck|CompleteLFGRoleCheck]](boolean) - boolean = false means declining the roleCheck. The returned boolean seems to indicate that the roleCheck was successful?
: [[API CompleteLFGReadyCheck|CompleteLFGReadyCheck]]()
: [[API GetInstanceLockTimeRemainingEncounter|GetInstanceLockTimeRemainingEncounter]](index) - returns bossName, texture, isKilled
: [[API GetLFDChoiceCollapseState|GetLFDChoiceCollapseState]](nil or table) - returns LFGCollapseList
: [[API GetLFDChoiceEnabledState|GetLFDChoiceEnabledState]](nil or table) - returns LFGEnabledList
: [[API GetLFDChoiceLockedState|GetLFDChoiceLockedState]](nil or table) - Returns a table mapping dungeonID to isLocked (in LFD UI)
: [[API GetLFDChoiceOrder|GetLFDChoiceOrder]](nil or table) - returns LFDDungeonList
: [[API GetLFDLockInfo|GetLFDLockInfo]](dungeonID, lockedPlayerNumber) - returns playerName, lockedReason; lockedPlayerNumber is from 1 to [[API GetLFDLockPlayerCount|GetLFDLockPlayerCount]](); lockedReason is found in LFG_INSTANCE_INVALID_CODES
: [[API GetLFDLockPlayerCount|GetLFDLockPlayerCount]]() - returns the number of locks in a dungeon group
: [[API GetLFGBonusFactionID|GetLFGBonusFactionID]]()
: [[API GetLFGBootProposal|GetLFGBootProposal]]() - Returns information about an LFG Kick vote in progress.
: [[API GetLFGCategoryForID|GetLFGCategoryForID]]()
: [[API GetLFGCompletionReward|GetLFGCompletionReward]]()
: [[API GetLFGCompletionRewardItem|GetLFGCompletionRewardItem]]()
: [[API GetLFGDeserterExpiration|GetLFGDeserterExpiration]]() - Returns the time at which you may once again use the dungeon finder after prematurely leaving a group.
: [[API GetLFGDungeonEncounterInfo|GetLFGDungeonEncounterInfo]]()
: [[API GetLFGDungeonInfo|GetLFGDungeonInfo]](dungeonId) - Returns information about a particular dungeon in the list: dungeonName, typeID, minLevel, maxLevel, recLevel, minRecLevel, maxRecLevel, expansionLevel, groupID, textureFilename, difficulty, maxPlayers, dungeonDescription, isHoliday
: [[API GetLFGDungeonNumEncounters|GetLFGDungeonNumEncounters]]()
: [[API GetLFGDungeonRewards|GetLFGDungeonRewards]](dungeontype) - dungeontype = 261 (normal) or 262 (heroic), returns doneToday, moneyBase, moneyVar, experienceBase, experienceVar, numRewards
: [[API GetLFGDungeonRewardCapBarInfo|GetLFGDungeonRewardCapBarInfo]](dungeontype) - returns information on the weekly point limits
: [[API GetLFGDungeonRewardCapInfo|GetLFGDungeonRewardCapInfo]]()
: [[API GetLFGDungeonRewardInfo|GetLFGDungeonRewardInfo]](dungeonID, rewardIndex) - returns name, texturePath, quantity. rewardIndex matches 1 through numRewards from [[API GetLFGDungeonRewards|GetLFGDungeonRewards]]
: [[API GetLFGDungeonRewardLink|GetLFGDungeonRewardLink]]()
: [[API GetLFGDungeonShortageRewardInfo|GetLFGDungeonShortageRewardInfo]]()
: [[API GetLFGDungeonShortageRewardLink|GetLFGDungeonShortageRewardLink]]()
: [[API GetLFGInfoServer|GetLFGInfoServer]]() - returns inParty, joined, queued, noPartialClear, achievements, lfgComment, slotCount
: [[API GetLFGInviteRoleAvailability|GetLFGInviteRoleAvailability]]()
: [[API GetLFGInviteRoleRestrictions|GetLFGInviteRoleRestrictions]]()
: UI [[API GetLFGMode|GetLFGMode]]() - returns mode, subMode (sometimes empty result)
: [[API GetLFGProposal|GetLFGProposal]]() - Returns information about a LFD group invite.
: [[API GetLFGProposalEncounter|GetLFGProposalEncounter]](encounterNumber) - returns bossName, texture, isKilled. encounterNumber is from 1 to totalEncounters from [[API GetLFGProposal|GetLFGProposal]]()
: [[API GetLFGProposalMember|GetLFGProposalMember]](playerNumber) - returns info about players (numbers 1-5) in the LFG proposal: isLeader, role, level, responded, accepted, name, class
: [[API GetLFGQueueStats|GetLFGQueueStats]]() - returns current state and wait times for being in queue
: [[API GetLFGQueuedList|GetLFGQueuedList]]()
: [[API GetLFGRandomCooldownExpiration|GetLFGRandomCooldownExpiration]]() - Returns the time at which you may once again queue for a random dungeon.
: [[API GetLFGRandomDungeonInfo|GetLFGRandomDungeonInfo]](index) - Returns information about a random dungeon queue: id, name
: [[API GetLFGReadyCheckUpdate|GetLFGReadyCheckUpdate]]()
: [[API GetLFGReadyCheckUpdateBattlegroundInfo|GetLFGReadyCheckUpdateBattlegroundInfo]]()
: [[API GetLFGRoles|GetLFGRoles]]() - returns isLeader, isTank, isHealer, isDPS - Returns the roles you signed up as, not the role you were assigned.
: [[API GetLFGRoleShortageRewards|GetLFGRoleShortageRewards]](dungeonID, shortageSeverity) - returns information about the LFG Call to Arms rewards
: [[API GetLFGRoleUpdate|GetLFGRoleUpdate]]() - returns roleCheckInProgress, slots, members
: [[API GetLFGRoleUpdateBattlegroundInfo|GetLFGRoleUpdateBattlegroundInfo]]()
: [[API GetLFGRoleUpdateMember|GetLFGRoleUpdateMember]]()
: [[API GetLFGRoleUpdateSlot|GetLFGRoleUpdateSlot]](slot) - returns dungeonType, dungeonID for a particular role slot (integer)
: [[API GetLFGSuspendedPlayers|GetLFGSuspendedPlayers]]()
: [[API GetLFGTypes|GetLFGTypes]]() - Returns all available LFG categories
: [[API GetNumRandomDungeons|GetNumRandomDungeons]]() - returns the number of specific dungeons that can be queued for
: [[API GetPartyLFGBackfillInfo|GetPartyLFGBackfillInfo]]() - Returns information about the dungeon for which you may currently recruit additional members from the LFG pool.
: [[API GetPartyLFGID|GetPartyLFGID]]()
: [[API GetRandomDungeonBestChoice|GetRandomDungeonBestChoice]]() - Returns suggested random dungeon ID.
: [[API HasLFGRestrictions|HasLFGRestrictions]]() - Returns whether the player is in a random party formed by the dungeon finder system.
: [[API IsInLFGDungeon|IsInLFGDungeon]]()
: [[API IsLFGComplete|IsLFGComplete]]() - Returns whether you have currently finished a Dungeon Finder instance.
: [[API IsLFGDungeonJoinable|IsLFGDungeonJoinable]](dungeonId) - Returns whether you can queue for a particular dungeon; dungeonId is from [[API GetLFGRandomDungeonInfo|GetLFGRandomDungeonInfo]]
: [[API IsPartyLFG|IsPartyLFG]]()
: [[API JoinLFG|JoinLFG]]()
: [[API JoinSingleLFG|JoinSingleLFG]]()
: [[API LeaveLFG|LeaveLFG]]()
: [[API LeaveSingleLFG|LeaveSingleLFG]]()
: [[API LFGTeleport|LFGTeleport]]([toSafety]) - Teleports the player to (toSafety = nil) or from (toSafety = true) a dungeon
: [[API PartyLFGStartBackfill|PartyLFGStartBackfill]]()
: [[API RejectProposal|RejectProposal]]() - Reject an LFD group invite and exit the queue.
: [[API RequestLFDPartyLockInfo|RequestLFDPartyLockInfo]]()
: [[API RequestLFDPlayerLockInfo|RequestLFDPlayerLockInfo]]()
: [[API SetLFGBonusFactionID|SetLFGBonusFactionID]]()
: [[API SetLFGBootVote|SetLFGBootVote]](vote) - responds to a vote-kick.
: [[API SetLFGDungeon|SetLFGDungeon]](id)
: [[API SetLFGDungeonEnabled|SetLFGDungeonEnabled]](dungeonID, isEnabled)
: [[API SetLFGHeaderCollapsed|SetLFGHeaderCollapsed]](headerID, isCollapsed)
: [[API SetLFGRoles|SetLFGRoles]](isLeader, isTank, isHealer, isDPS) - changes the selected roles
: [[API UninviteUnit|UninviteUnit]]("name" [, "reason"]) - initiate a kick vote in a LFD group.
: [[API UnitGroupRolesAssigned|UnitGroupRolesAssigned]]("unit") - Return's the targeted unit's assigned role.
: [[API UnitHasLFGDeserter|UnitHasLFGDeserter]]("unit") - returns whether the specified unit has recently deserted
: [[API UnitHasLFGRandomCooldown|UnitHasLFGRandomCooldown]]("unit") - returns whether the specified unit has recently queued for a random

=== Looking for Raid Functions ===
The [[Raid Finder]] was added in [[Patch 4.3.0]] and later renamed to "Looking for Raid". It shares many of the functions from "Looking for Group" but also has a few functions unique to it.
: [[API GetBestRFChoice|GetBestRFChoice]]() - Returns the suggested/default Dungeon Id for the Raid Finder
: [[API GetLFRChoiceOrder|GetLFRChoiceOrder]]([table]) - Seems to be for used ordering the LFR list
: [[API GetNumRFDungeons|GetNumRFDungeons]]() - Returns the number of available Raid Finder dungeons
: [[API GetRFDungeonInfo|GetRFDungeonInfo]](index) - Returns <tt>id, name, typeID, subtypeID, minLevel, maxLevel, recLevel, minRecLevel, maxRecLevel, expansionLevel, groupID, textureFilename, difficulty, maxPlayers, description, isHoliday</tt>

=== Loot Functions ===
Automatic looting behavior is controlled by [[CVar autoLootDefault|autoLootDefault]] [[CVar]].
: [[API C_LootHistory.CanMasterLoot|C_LootHistory.CanMasterLoot]](?) - This function is not yet documented.
: [[API C_LootHistory.GetExpiration|C_LootHistory.GetExpiration]](?) - This function is not yet documented.
: [[API C_LootHistory.GetItem|C_LootHistory.GetItem]](?) - This function is not yet documented.
: [[API C_LootHistory.GetNumItems|C_LootHistory.GetNumItems]](?) - This function is not yet documented.
: [[API C_LootHistory.GetPlayerInfo|C_LootHistory.GetPlayerInfo]](?) - This function is not yet documented.
: [[API C_LootHistory.GiveMasterLoot|C_LootHistory.GiveMasterLoot]](?) - This function is not yet documented.
: [[API C_LootHistory.SetExpiration|C_LootHistory.SetExpiration]](?) - This function is not yet documented.
: [[API CloseLoot|CloseLoot]]([uiFailedFlag])
: PROTECTED [[API ConfirmBindOnUse|ConfirmBindOnUse]]()
: [[API ConfirmLootRoll|ConfirmLootRoll]](rollId[, roll]) - Confirm a loot roll (added in version 1300)
: HW [[API ConfirmLootSlot|ConfirmLootSlot]](slot) - Confirm looting of a BoP item.
: [[API GetLootMethod|GetLootMethod]]() - Return the currently active [[lootMethod]]
: [[API GetLootRollItemInfo|GetLootRollItemInfo]](rollId)
: [[API GetLootRollItemLink|GetLootRollItemLink]](id)
: [[API GetLootRollTimeLeft|GetLootRollTimeLeft]](rollid)
: [[API GetLootSlotInfo|GetLootSlotInfo]](slot) - Returns icon path, item name, and item quantity for the item in the given loot window slot
: [[API GetLootSlotLink|GetLootSlotLink]](slot) - Returns an [[itemLink]] for the item in the given loot window slot
: [[API GetLootSourceInfo|GetLootSourceInfo]](slot) - Returns information about the source of the objects in a loot slot.
: [[API GetLootThreshold|GetLootThreshold]]() - Return the current loot threshold (for group/master loot)
: [[API GetMasterLootCandidate|GetMasterLootCandidate]](index) - Return the name of a player who is eligible to receive loot in master mode
: [[API GetNumLootItems|GetNumLootItems]]() - Returns amount of objects to loot (number)
: [[API GetOptOutOfLoot|GetOptOutOfLoot]]() - Return whether the character is currently automatically passing on all loot.
: [[API GiveMasterLoot|GiveMasterLoot]](slot,index)
: [[API IsFishingLoot|IsFishingLoot]]()
: [[API LootSlot|LootSlot]](slot) - Used to loot the specified slot.
: [[API RollOnLoot|RollOnLoot]](rollId[, roll]) - Roll or pass on a loot event started by the game engine.
: [[API SetLootMethod|SetLootMethod]]("lootMethod"[, "masterPlayer" or threshold]) - Set the current loot method.
: [[API SetLootPortrait|SetLootPortrait]]()
: [[API SetLootThreshold|SetLootThreshold]]([[itemQuality]]) - Set the threshold for group/master loot.
: [[API SetOptOutOfLoot|SetOptOutOfLoot]](optOut) - Enables or disables automatic passing on all loot.

=== Macro Functions ===
: NOCOMBAT [[API CreateMacro|CreateMacro]]("name", icon, "body", perCharacter, isLocal) - Create a new macro. (added in 2.0)
: [[API CursorHasMacro|CursorHasMacro]]() - Returns 1 if the cursor is currently dragging a macro. (added in 2.0.3)
: [[API DeleteMacro|DeleteMacro]](id or "name") - Deletes a macro.
: NOCOMBAT [[API EditMacro|EditMacro]](index, "name", iconIndex, "body", isLocal, perCharacter) - Saves a macro. (added in 2.0)
: [[API GetMacroBody|GetMacroBody]](id or "name") - Returns the body (macro text) of a macro.
: [[API GetMacroIndexByName|GetMacroIndexByName]]("name") - Returns macro index.
: [[API GetMacroInfo|GetMacroInfo]](id or "name") - Returns "name", "iconTexture", "body", isLocal.
: [[API GetMacroIcons|GetMacroIcons]](table) - Returns an array of available macro texture paths (but not icons of items).
: [[API GetMacroItemIcons|GetMacroItemIcons]](table) - Returns an array of available macro texture paths (icons of items).
: [[API GetNumMacros|GetNumMacros]]() - Returns the number of macros the user has.
: [[API PickupMacro|PickupMacro]](id or "name") - Pickup a macro button icon.
: PROTECTED [[API RunMacro|RunMacro]](id or "name") - Runs a macro.
: PROTECTED [[API RunMacroText|RunMacroText]]("macro") - Interpret the given string as a macro and run it.
: [[API SecureCmdOptionParse|SecureCmdOptionParse]]("command") - Used for evaluating conditionals in macros, returning the appropriate choice.
: PROTECTED [[API StopMacro|StopMacro]]() - Stops the currently executing macro.

=== Mail Functions ===
[[Events/Mail|Events associated with Mail.]]
: [[API AutoLootMailItem|AutoLootMailItem]](index) - Loot all items from mail message.
: [[API CheckInbox|CheckInbox]]() - Populate client's inbox with mail from server.
: [[API ClearSendMail|ClearSendMail]]() - This clears the text in the send mail tab and places the COD item in the inventory.
: [[API ClickSendMailItemButton|ClickSendMailItemButton]]([itemIndex, [clearItem]]) - Places or picks up an item from the send mail frame.
: [[API CloseMail|CloseMail]]() - Closes the mail window.
: [[API DeleteInboxItem|DeleteInboxItem]](index) - Deletes the inbox item at index. It returns immediately, it does not seem to wait for the deletion to go through, giving the normal problems with rapid mail removal attempts.
: [[API DropCursorMoney|DropCursorMoney]] - Drops the amount of money held by the cursor.
: [[API GetCoinIcon|GetCoinIcon]](amount)
: [[API GetInboxHeaderInfo|GetInboxHeaderInfo]](index) - Returns information about a message in the inbox.
: [[API GetInboxItem|GetInboxItem]](index, itemIndex) - Returns description of the attachment attached to message at (index).
: [[API GetInboxItemLink|GetInboxItemLink]](index, itemIndex) - Returns link of the attachment attached to message at (index).
: [[API GetInboxNumItems|GetInboxNumItems]]() - Returns the number of messages in your inbox.
: [[API GetInboxText|GetInboxText]](index) - Returns the message text of message at (index).
: [[API GetInboxInvoiceInfo|GetInboxInvoiceInfo]](index) - Returns informations about an auction house invoice.
: [[API GetLatestThreeSenders|GetLatestThreeSenders]] - Returns the senders of the most recent unread mail.
: REMOVED [[API GetNumStationeries|GetNumStationeries]]() - Not yet fully implemented. Currently it always returns 1.
: REMOVED [[API GetSelectedStationeryTexture|GetSelectedStationeryTexture]]() - Not yet fully implemented. Currently it returns "STATIONERYTEST" when the mailbox is open.
: [[API GetSendMailCOD|GetSendMailCOD]]() - determine amount of gold entered in COD box in mail frame when mail is sent
: [[API GetSendMailItem|GetSendMailItem]](index) - Get information about an item attached on the send mail frame.
: [[API GetSendMailItemLink|GetSendMailItemLink]](index) - Get link for an item attached on the send mail frame.
: [[API GetSendMailMoney|GetSendMailMoney]]() - ?.
: [[API GetSendMailPrice|GetSendMailPrice]]() - Gets the cost for sending mail.
: REMOVED [[API GetStationeryInfo|GetStationeryInfo]](index) - Not yet fully implemented. Currently an index of 1 returns "Default Stationery".
: [[API HasInboxItem|HasInboxItem]](?) -
: [[API HasNewMail|HasNewMail]]() - Returns nil if there is no new mail.
: [[API HasSendMailItem|HasSendMailItem]](index) - returns boolean if item is attached to send mail frame in specified slot.
: [[API InboxItemCanDelete|InboxItemCanDelete]](index) - Boolean check for whether a message is returnable to the sender.
: [[API RespondMailLockSendItem|RespondMailLockSendItem]](slot, keepItem) - Confirm item wont be refunded, keepItem boolean.
: [[API ReturnInboxItem|ReturnInboxItem]](index) - Returns to the sender the attached item in the mail message at the specified index.
: REMOVED [[API SelectStationery|SelectStationery]](index) - Not yet fully implemented. It does nothing visible.
: [[API SendMail|SendMail]]("target", "subject", "body") - If the mailbox is open, this sends mail.
: PROTECTED [[API SetSendMailCOD|SetSendMailCOD]](amount) - Make next mail sent using SendMail() COD target for amount. -- Protected as of 2.0
: PROTECTED [[API SetSendMailMoney|SetSendMailMoney]](amount) - Add money to next mail sent using SendMail(). -- Protected as of 2.0
: [[API SetSendMailShowing|SetSendMailShowing]](?) -
: [[API TakeInboxItem|TakeInboxItem]](index, itemIndex) - Take the attached item from the mailbox message at index.
: [[API TakeInboxMoney|TakeInboxMoney]](index) - Take the attached money from the mailbox message at index.
: [[API TakeInboxTextItem|TakeInboxTextItem]](index) - Creates a permanent copy of letter (readable "Plain Letter").

=== Map Functions ===
These functions are related to display of the world map. See also [[#Location Functions|Location Functions]].
: [[API ClickLandmark|ClickLandmark]](id) - ?
: [[API GetCorpseMapPosition|GetCorpseMapPosition]]() - Returns the position of the corpse on the current world map.
: [[API GetCurrentMapAreaID|GetCurrentMapAreaID]] () - Returns the area id of the current map.
: [[API GetCurrentMapContinent|GetCurrentMapContinent]]() - Returns the number of the continent the world map is currently shown.
: [[API GetCurrentMapDungeonLevel|GetCurrentMapDungeonLevel]]() - Returns which level of a multi-level map is currently shown.
: [[API GetCurrentMapZone|GetCurrentMapZone]]() - Returns the number of the zone the world map is currently showing.
: [[API GetMapContinents|GetMapContinents]]() - Returns the continent names.
: [[API GetMapDebugObjectInfo|GetMapDebugObjectInfo]](id) - ?
: [[API GetMapInfo|GetMapInfo]]() - Returns the name and size of the current world map.
: [[API GetMapLandmarkInfo|GetMapLandmarkInfo]](landmarkIndex) - Returns information about a landmark on the current world map.
: [[API GetMapNameByID|GetMapNameByID]](id) - Returns the full localized name of the zone specified by the ID.
: [[API GetMapOverlayInfo|GetMapOverlayInfo]](overlayIndex) - Returns information about an overlay on the current world map.
: [[API GetMapZones|GetMapZones]](continentIndex) - Returns the zone names of a continent.
: [[API GetNumDungeonMapLevels|GetNumDungeonMapLevels]]() - Returns the number of levels in the currently shown zone map (0 for none).
: [[API GetNumMapDebugObjects|GetNumMapDebugObjects]]() - ?
: [[API GetNumMapLandmarks|GetNumMapLandmarks]]() - Returns the number of landmarks on the current world map.
: [[API GetNumMapOverlays|GetNumMapOverlays]]() - Returns the number of overlays on the current world map.
: [[API GetPlayerMapPosition|GetPlayerMapPosition]]("unit") - Returns the position of a unit on the current world map.
: [[API GetPlayerFacing|GetPlayerFacing]]() - Returns the direction the player is facing.
: [[API ProcessMapClick|ProcessMapClick]](x,y) - Passes a click to the client, which then calculates if the zone has to be changed.
: [[API SetDungeonMapLevel|SetDungeonMapLevel]](level) - Sets which level of a multi-level map (Dalaran, dungeons, etc) is currently shown.
: [[API SetMapByID|SetMapByID]](id) - Set map by area id.
: [[API SetMapToCurrentZone|SetMapToCurrentZone]]() - Sets the current world map to the zone the player is presently in.
: [[API SetMapZoom|SetMapZoom]](continentIndex[, zoneIndex]) - Sets the current world map to a specific continent and optionally zone.
: [[API SetupFullscreenScale|SetupFullscreenScale]]() - Configures scale of full-screen views, such as the world map, to best fill screen.
: [[API UnitPosition|UnitPosition]]("unit") - Returns the position of a unit within the current world area.
: [[API UpdateMapHighlight|UpdateMapHighlight]](x,y) - Provides map rollover information for highlighting.
: [[API ZoomOut|ZoomOut]]() - "Zooms out" of the current map: going from zone to continent to world view.

=== Merchant Functions ===
: [[API BuyMerchantItem|BuyMerchantItem]](index[, qty]) - Buys an item from a merchant.
: [[API BuybackItem|BuybackItem]](index) - Buys back a sold item.
: [[API CanMerchantRepair|CanMerchantRepair]]() - Returns true if the merchant can repair items.
: [[API CloseMerchant|CloseMerchant]]() - Closes the merchant window.
: [[API GetBuybackItemInfo|GetBuybackItemInfo]](index) - Returns information about the buyback item.
: [[API GetBuybackItemLink|GetBuybackItemLink]](index) - Returns an [[itemLink]] for the buyback item.
: [[API GetMerchantItemCostInfo|GetMerchantItemCostInfo]] (index) - Returns "alternative currency" information about an item.
: [[API GetMerchantItemCostItem|GetMerchantItemCostItem]] (index, itemIndex) - Returns information about an "alternative currency" component of the price for a purchasable item.
: [[API GetMerchantItemInfo|GetMerchantItemInfo]](index) - Returns information about the given purchasable item
: [[API GetMerchantItemLink|GetMerchantItemLink]](index) - Returns an [[itemLink]] for the given purchasable item
: [[API GetMerchantItemMaxStack|GetMerchantItemMaxStack]](index) - Returns the maximum number of items in a stack.
: [[API GetMerchantNumItems|GetMerchantNumItems]]() - Returns the number of items the merchant sells.
: [[API GetRepairAllCost|GetRepairAllCost]]()
: [[API HideRepairCursor|HideRepairCursor]]()
: [[API InRepairMode|InRepairMode]]() - Returns true if your cursor is in repair mode
: [[API PickupMerchantItem|PickupMerchantItem]](index) - Places the item on the cursor.
: [[API RepairAllItems|RepairAllItems]]([guildBankRepair]) - Repairs all equipped and inventory items.
: [[API ShowMerchantSellCursor|ShowMerchantSellCursor]](index) - Changes the cursor to the merchant sell cursor.
: [[API ShowRepairCursor|ShowRepairCursor]]()
: [[API GetNumBuybackItems|GetNumBuybackItems]]() - Returns number of items available for buyback

=== Movement Functions ===
Most of these functions may only be called on a hardware event from '''secure''' code.
: [[API FollowUnit|FollowUnit]]("unit") - Follow an ally with the specified UnitID
: PROTECTED [[API CameraOrSelectOrMoveStart|CameraOrSelectOrMoveStart]]() - Begin "Left click" in the 3D world.
: PROTECTED [[API CameraOrSelectOrMoveStop|CameraOrSelectOrMoveStop]]([stickyFlag]) - End "Left click" in the 3D world.
: PROTECTED [[API JumpOrAscendStart|JumpOrAscendStart]]() - Makes the player jump.
: PROTECTED [[API AscendStop|AscendStop]]() - Called when you release the jump key.
: PROTECTED [[API MoveBackwardStart|MoveBackwardStart]] - The player begins moving backward at the specified time.
: PROTECTED [[API MoveBackwardStop|MoveBackwardStop]] - The player stops moving backward at the specified time.
: PROTECTED [[API MoveForwardStart|MoveForwardStart]] - The player begins moving forward at the specified time.
: PROTECTED [[API MoveForwardStop|MoveForwardStop]] - The player stops moving forward at the specified time.
: PROTECTED [[API StrafeLeftStart|StrafeLeftStart]] - The player begins strafing left at the specified time.
: PROTECTED [[API StrafeLeftStop|StrafeLeftStop]] - The player stops strafing left at the specified time.
: PROTECTED [[API StrafeRightStart|StrafeRightStart]] - The player begins strafing right at the specified time.
: PROTECTED [[API StrafeRightStop|StrafeRightStop]] - The player stops strafing right at the specified time.
: PROTECTED [[API ToggleAutoRun|ToggleAutoRun]] - Turns auto-run on or off
: PROTECTED [[API ToggleRun|ToggleRun]] - Toggle between running and walking.
: PROTECTED [[API TurnLeftStart|TurnLeftStart]] - The player starts turning left at the specified time.
: PROTECTED [[API TurnLeftStop|TurnLeftStop]] - The player stops turning left at the specified time.
: PROTECTED [[API TurnOrActionStart|TurnOrActionStart]]() - Begin "Right Click" in the 3D world.
: PROTECTED [[API TurnOrActionStop|TurnOrActionStop]]() - End "Right Click" in the 3D world.
: PROTECTED [[API TurnRightStart|TurnRightStart]] - The player starts turning right at the specified time.
: PROTECTED [[API TurnRightStop|TurnRightStop]] - The player stops turning right at the specified time.

=== Mount Journal Functions ===
These functions were introduced in [[Patch 6.0.2]].
: [[API C_MountJournal.ClearFanfare|C_MountJournal.ClearFanfare]](?) -
: [[API C_MountJournal.ClearRecentFanfares|C_MountJournal.ClearRecentFanfares]](?) -
: {{api|C_MountJournal.Dismiss}}() - Dismisses the currently summoned mount.
: {{api|C_MountJournal.GetCollectedFilterSetting}}(flag) - Indicates whether the specified mount journal filter is enabled.
: [[API C_MountJournal.GetDisplayedMountInfo|C_MountJournal.GetDisplayedMountInfo]](index) - Returns information about the specified mount.
: [[API C_MountJournal.GetDisplayedMountInfoExtra|C_MountJournal.GetDisplayedMountInfoExtra]](index) - Returns extra information about the specified mount.
: {{api|C_MountJournal.GetIsFavorite}}(index) - Indicates whether the specified mount is marked as a favorite.
: [[API C_MountJournal.GetMountIDs|C_MountJournal.GetMountIDs]]() - Returns the IDs of mounts listed in the mount journal.
: [[API C_MountJournal.GetMountInfoByID|C_MountJournal.GetMountInfoByID]](mountID) - Returns information about the specified mount.
: [[API C_MountJournal.GetMountInfoExtraByID|C_MountJournal.GetMountInfoExtraByID]](mountID) - Returns extra information about the specified mount.
: [[API C_MountJournal.GetNumDisplayedMounts|C_MountJournal.GetNumDisplayedMounts]]() - Returns the number of mounts shown in the mount journal.
: REMOVED {{api|C_MountJournal.GetMountInfoExtra}}(index) - Returns extra information about the specified mount.
: REMOVED {{api|C_MountJournal.GetMountInfo}}(index) - Returns information about the specified mount.
: {{api|C_MountJournal.GetNumMounts}}() - Returns the number of mounts listed in the mount journal.
: [[API C_MountJournal.GetNumMountsNeedingFanfare|C_MountJournal.GetNumMountsNeedingFanfare]](?) -
: [[API C_MountJournal.IsSourceChecked|C_MountJournal.IsSourceChecked]](?) -
: [[API C_MountJournal.NeedsFanfare|C_MountJournal.NeedsFanfare]](?) -
: {{api|C_MountJournal.Pickup}}(index) - Picks up the specified mount onto the cursor, usually in preparation for placing it on an action button.
: [[API C_MountJournal.SetAllSourceFilters|C_MountJournal.SetAllSourceFilters]](?) -
: {{api|C_MountJournal.SetCollectedFilterSetting}}(flag, value) - Enables or disables the specified mount journal filter.
: {{api|C_MountJournal.SetIsFavorite}}(index, value) - Marks or unmarks the specified mount as a favorite.
: [[API C_MountJournal.SetSearch|C_MountJournal.SetSearch]](?) -
: [[API C_MountJournal.SetSourceFilter|C_MountJournal.SetSourceFilter]](?) -
: [[API C_MountJournal.SummonByID|C_MountJournal.SummonByID]](mountID) -Summons the specified mount.
: REMOVED {{api|C_MountJournal.Summon}}(index) - Summons the specified mount.

=== Music Player Functions ===
These functions were added exclusively to the Mac client in [[Patch 1.12]]. The functions are protected and are only called through key bindings; thus they only serve to enable you to bind specific keys to control iTunes while using the WoW client.
: PROTECTED [[API MusicPlayer BackTrack|MusicPlayer_BackTrack]]() - Go back a track.
: PROTECTED [[API MusicPlayer NextTrack|MusicPlayer_NextTrack]]() - Go forward a track.
: PROTECTED [[API MusicPlayer PlayPause|MusicPlayer_PlayPause]]() - Toggle play/pause.
: PROTECTED [[API MusicPlayer VolumeDown|MusicPlayer_VolumeDown]]() - Reduce music volume.
: PROTECTED [[API MusicPlayer VolumeUp|MusicPlayer_VolumeUp]]() - Increase music volume.

=== Pet Functions ===
: PROTECTED [[API CastPetAction|CastPetAction]](index) - Cast the corresponding pet skill.
: [[API ClosePetStables|ClosePetStables]]() - Close the pet stables user interface.
: [[API DropItemOnUnit|DropItemOnUnit]]("unit") - Drops an item from the cursor onto a unit.
: [[API GetPetActionCooldown|GetPetActionCooldown]](index) - Returns cooldown information for the pet action at the specificed pet action bar slot.
: [[API GetPetActionInfo|GetPetActionInfo]](index) - Returns information on the pet action at the specified pet action bar slot.
: [[API GetPetActionSlotUsable|GetPetActionSlotUsable]](slot)
: [[API GetPetActionsUsable|GetPetActionsUsable]]() - Returns a value indicating if the player's pet's actions can be used at this time.
: [[API GetPetExperience|GetPetExperience]]() - Returns the pet's current xp, and total xp required for next level.
: [[API GetPetFoodTypes|GetPetFoodTypes]]() - Returns a list of the food types the player's pet can eat.
: [[API GetPetIcon|GetPetIcon]]() - Returns the path to the texture to use as the icon for the player's pet.
: [[API GetPetTimeRemaining|GetPetTimeRemaining]]() - Returns in milliseconds about some timeout for the player's pet.
: [[API GetStablePetFoodTypes|GetStablePetFoodTypes]](index) - Returns a list of the food types a specific stabled pet can eat.
: [[API GetStablePetInfo|GetStablePetInfo]](index) - Returns information about a specific stabled pet.
: [[API HasPetSpells|HasPetSpells]]() - Returns true if the player has pet spells.
: [[API HasPetUI|HasPetUI]]() - Returns 1 if the player has a pet User Interface.
: [[API PetAbandon|PetAbandon]]() - Permanently abandons your pet.
: PROTECTED [[API PetAssistMode|PetAssistMode]]() - Set your pet to Assist mode.
: PROTECTED [[API PetAttack|PetAttack]]() - Instruct your pet to attack your target.
: [[API IsPetAttackActive|IsPetAttackActive]]() - Returns true if the pet is currently attacking.
: [[API PetStopAttack|PetStopAttack]]() - Stop the attack of the pet.
: [[API PetCanBeAbandoned|PetCanBeAbandoned]]() - Returns true if the pet is abandonable.
: [[API PetCanBeDismissed|PetCanBeDismissed]]()
: [[API PetCanBeRenamed|PetCanBeRenamed]]() - Returns true if the pet can be renamed.
: PROTECTED [[API PetDefensiveMode|PetDefensiveMode]]() - Set your pet in defensive mode.
: [[API PetDismiss|PetDismiss]]() - Dismiss your pet.
: PROTECTED [[API PetFollow|PetFollow]]() - Instruct your pet to follow you.
: [[API PetHasActionBar|PetHasActionBar]]() - Determine if player has a pet with an action bar.
: PROTECTED [[API PetPassiveMode|PetPassiveMode]]() - Set your pet into passive mode.
: [[API PetRename|PetRename]]("name&quot;) - Renames the pet.
: PROTECTED [[API PetWait|PetWait]]() - Instruct your pet to remain still.
: [[API PickupPetAction|PickupPetAction]](slot) - Drags an action from the specified pet action bar slot into the cursor.
: [[API PickupStablePet|PickupStablePet]](index) - ?.
: [[API SetPetStablePaperdoll|SetPetStablePaperdoll]](modelObject) - ?.
: PROTECTED [[API TogglePetAutocast|TogglePetAutocast]](index) - Toggles whether the specified pet ability should autocast or not.
: PROTECTED [[API ToggleSpellAutocast|ToggleSpellAutocast]]("spellName" | spellId, bookType) - Toggles whether the specified spell should autocast or not.
: [[API GetSpellAutocast|GetSpellAutocast]]("spellName" | spellId, bookType) - Check whether the specified spell autocasts or not.

=== Pet Battle Functions ===
These functions were introduced in [[Patch 5.0.4]].
: [[API C_PetBattles.AcceptPVPDuel|C_PetBattles.AcceptPVPDuel]]()
: [[API C_PetBattles.AcceptQueuedPVPMatch|C_PetBattles.AcceptQueuedPVPMatch]]()
: [[API C_PetBattles.CanAcceptQueuedPVPMatch|C_PetBattles.CanAcceptQueuedPVPMatch]](?) -
: [[API C_PetBattles.CanActivePetSwapOut|C_PetBattles.CanActivePetSwapOut]]()
: [[API C_PetBattles.CanPetSwapIn|C_PetBattles.CanPetSwapIn]](petIndex)
: [[API C_PetBattles.CancelPVPDuel|C_PetBattles.CancelPVPDuel]]()
: [[API C_PetBattles.ChangePet|C_PetBattles.ChangePet]](petIndex)
: [[API C_PetBattles.DeclineQueuedPVPMatch|C_PetBattles.DeclineQueuedPVPMatch]]()
: [[API C_PetBattles.ForfeitGame|C_PetBattles.ForfeitGame]]()
: [[API C_PetBattles.GetAbilityEffectInfo|C_PetBattles.GetAbilityEffectInfo]](abilityID, turnIndex, effectIndex, effectName)
: [[API C_PetBattles.GetAbilityInfoByID|C_PetBattles.GetAbilityInfoByID]](abilityID)
: [[API C_PetBattles.GetAbilityInfo|C_PetBattles.GetAbilityInfo]](petOwner, petIndex, abilityIndex)
: [[API C_PetBattles.GetAbilityProcTurnIndex|C_PetBattles.GetAbilityProcTurnIndex]](abilityID, procType)
: [[API C_PetBattles.GetAbilityStateModification|C_PetBattles.GetAbilityStateModification]](abilityID, stateID)
: [[API C_PetBattles.GetAbilityState|C_PetBattles.GetAbilityState]](petOwner, petIndex, actionIndex)
: [[API C_PetBattles.GetActivePet|C_PetBattles.GetActivePet]](petOwner)
: [[API C_PetBattles.GetAllEffectNames|C_PetBattles.GetAllEffectNames]]()
: [[API C_PetBattles.GetAllStates|C_PetBattles.GetAllStates]]()
: [[API C_PetBattles.GetAttackModifier|C_PetBattles.GetAttackModifier]](petType, enemyPetType)
: [[API C_PetBattles.GetAuraInfo|C_PetBattles.GetAuraInfo]](petOwner, petIndex, auraIndex)
: [[API C_PetBattles.GetBattleState|C_PetBattles.GetBattleState]]()
: [[API C_PetBattles.GetBreedQuality|C_PetBattles.GetBreedQuality]](petOwner, petIndex)
: [[API C_PetBattles.GetDisplayID|C_PetBattles.GetDisplayID]](petOwner, petIndex)
: [[API C_PetBattles.GetForfeitPenalty|C_PetBattles.GetForfeitPenalty]]()
: [[API C_PetBattles.GetHealth|C_PetBattles.GetHealth]](petOwner, petIndex)
: [[API C_PetBattles.GetIcon|C_PetBattles.GetIcon]](petOwner, petIndex)
: [[API C_PetBattles.GetLevel|C_PetBattles.GetLevel]](petOwner, petIndex)
: [[API C_PetBattles.GetMaxHealth|C_PetBattles.GetMaxHealth]](petOwner, petIndex)
: [[API C_PetBattles.GetName|C_PetBattles.GetName]](petOwner, petIndex)
: [[API C_PetBattles.GetNumAuras|C_PetBattles.GetNumAuras]](petOwner, petIndex)
: [[API C_PetBattles.GetNumPets|C_PetBattles.GetNumPets]](petOwner)
: [[API C_PetBattles.GetPVPMatchmakingInfo|C_PetBattles.GetPVPMatchmakingInfo]]()
: [[API C_PetBattles.GetPetSpeciesID|C_PetBattles.GetPetSpeciesID]](petOwner, petIndex)
: [[API C_PetBattles.GetPetType|C_PetBattles.GetPetType]](petOwner, petIndex)
: [[API C_PetBattles.GetPlayerTrapAbility|C_PetBattles.GetPlayerTrapAbility]]()
: [[API C_PetBattles.GetPower|C_PetBattles.GetPower]](petOwner, petIndex)
: [[API C_PetBattles.GetSelectedAction|C_PetBattles.GetSelectedAction]]()
: [[API C_PetBattles.GetSpeed|C_PetBattles.GetSpeed]](petOwner, petIndex)
: [[API C_PetBattles.GetStateValue|C_PetBattles.GetStateValue]](petOwner, petIndex, stateID)
: [[API C_PetBattles.GetTurnTimeInfo|C_PetBattles.GetTurnTimeInfo]]()
: [[API C_PetBattles.GetXP|C_PetBattles.GetXP]](petOwner, petIndex)
: [[API C_PetBattles.IsInBattle|C_PetBattles.IsInBattle]]()
: [[API C_PetBattles.IsPlayerNPC|C_PetBattles.IsPlayerNPC]](petOwner)
: [[API C_PetBattles.IsSkipAvailable|C_PetBattles.IsSkipAvailable]]()
: [[API C_PetBattles.IsTrapAvailable|C_PetBattles.IsTrapAvailable]]()
: [[API C_PetBattles.IsWaitingOnOpponent|C_PetBattles.IsWaitingOnOpponent]]()
: [[API C_PetBattles.IsWildBattle|C_PetBattles.IsWildBattle]]()
: [[API C_PetBattles.SetPendingReportBattlePetTarget|C_PetBattles.SetPendingReportBattlePetTarget]](petIndex)
: [[API C_PetBattles.SetPendingReportTargetFromUnit|C_PetBattles.SetPendingReportTargetFromUnit]](unit)
: [[API C_PetBattles.ShouldShowPetSelect|C_PetBattles.ShouldShowPetSelect]]()
: HW [[API C_PetBattles.SkipTurn|C_PetBattles.SkipTurn]]()
: [[API C_PetBattles.StartPVPDuel|C_PetBattles.StartPVPDuel]]()
: [[API C_PetBattles.StartPVPMatchmaking|C_PetBattles.StartPVPMatchmaking]]()
: [[API C_PetBattles.StopPVPMatchmaking|C_PetBattles.StopPVPMatchmaking]]()
: HW [[API C_PetBattles.UseAbility|C_PetBattles.UseAbility]](actionIndex)
: HW [[API C_PetBattles.UseTrap|C_PetBattles.UseTrap]]()

=== Pet Journal Functions ===
These functions were introduced in [[Patch 5.0.4]].
: REMOVED [[API C_PetJournal.AddAllPetSourcesFilter|C_PetJournal.AddAllPetSourcesFilter]]() - Enables all pet sources in the filter menu.
: REMOVED [[API C_PetJournal.AddAllPetTypesFilter|C_PetJournal.AddAllPetTypesFilter]]() - Enables all pet types in the filter menu.
: [[API C_PetJournal.CagePetByID|C_PetJournal.CagePetByID]](petID) - Puts the pet into a cage.
: [[API C_PetJournal.ClearFanfare|C_PetJournal.ClearFanfare]](?) -
: [[API C_PetJournal.ClearRecentFanfares|C_PetJournal.ClearRecentFanfares]](?) -
: REMOVED  [[API C_PetJournal.ClearAllPetSourcesFilter|C_PetJournal.ClearAllPetSourcesFilter]]() - Clears all pet sources in the filter menu.
: REMOVED [[API C_PetJournal.ClearAllPetTypesFilter|C_PetJournal.ClearAllPetTypesFilter]]() - Clears all pet types in the filter menu.
: [[API C_PetJournal.ClearSearchFilter|C_PetJournal.ClearSearchFilter]]() - Clears the search box in the pet journal.
: [[API C_PetJournal.FindPetIDByName|C_PetJournal.FindPetIDByName]](?) -
: [[API C_PetJournal.GetBattlePetLink|C_PetJournal.GetBattlePetLink]](petID) - Returns a battle pet hyperlink for the given petID.
: [[API C_PetJournal.GetNumCollectedInfo|C_PetJournal.GetNumCollectedInfo]](?) -
: [[API C_PetJournal.GetNumMaxPets|C_PetJournal.GetNumMaxPets]](?) -
: [[API C_PetJournal.GetNumPetSources|C_PetJournal.GetNumPetSources]]() - Returns information about the number of pet sources.
: [[API C_PetJournal.GetNumPetTypes|C_PetJournal.GetNumPetTypes]]() - Returns information about the number of pet types.
: [[API C_PetJournal.GetNumPets|C_PetJournal.GetNumPets]]() - Returns information about the number of battle pets.
: [[API C_PetJournal.GetNumPetsNeedingFanfare|C_PetJournal.GetNumPetsNeedingFanfare]](?) -
: [[API C_PetJournal.GetOwnedBattlePetString|C_PetJournal.GetOwnedBattlePetString]](speciesID) - Returns string about numbers of battle pets in journal.
: [[API C_PetJournal.GetPetAbilityInfo|C_PetJournal.GetPetAbilityInfo]](abilityID)
: [[API C_PetJournal.GetPetAbilityList|C_PetJournal.GetPetAbilityList]](speciesID[, idTable[, levelTable]])
: [[API C_PetJournal.GetPetCooldownByGUID|C_PetJournal.GetPetCooldownByGUID]](?) -
: [[API C_PetJournal.GetPetInfoByIndex|C_PetJournal.GetPetInfoByIndex]](index) - Returns information about a battle pet.
: [[API C_PetJournal.GetPetInfoByPetID|C_PetJournal.GetPetInfoByPetID]](petID) - Returns information about a battle pet.
: [[API C_PetJournal.GetPetInfoBySpeciesID|C_PetJournal.GetPetInfoBySpeciesID]](speciesID) - Returns information about a pet species.
: [[API C_PetJournal.GetPetLoadOutInfo|C_PetJournal.GetPetLoadOutInfo]](slotIndex)
: [[API C_PetJournal.GetPetSortParameter|C_PetJournal.GetPetSortParameter]](?) -
: [[API C_PetJournal.GetPetStats|C_PetJournal.GetPetStats]](petID) - Returns a pet's stats from the Pet Journal
: [[API C_PetJournal.GetPetTeamAverageLevel|C_PetJournal.GetPetTeamAverageLevel]](?) -
: [[API C_PetJournal.GetSummonedPetGUID|C_PetJournal.GetSummonedPetGUID]]() - Returns information about a battle pet.
: [[API C_PetJournal.IsFilterChecked|C_PetJournal.IsFilterChecked]](?) -
: [[API C_PetJournal.IsFindBattleEnabled|C_PetJournal.IsFindBattleEnabled]]()
: REMOVED [[API C_PetJournal.IsFlagFiltered|C_PetJournal.IsFlagFiltered]](flag) - Returns true if the selected flag is unchecked.
: [[API C_PetJournal.IsJournalReadOnly|C_PetJournal.IsJournalReadOnly]]()
: [[API C_PetJournal.IsJournalUnlocked|C_PetJournal.IsJournalUnlocked]]()
: [[API C_PetJournal.IsPetSourceChecked|C_PetJournal.IsPetSourceChecked]](?) -
: [[API C_PetJournal.IsPetTypeChecked|C_PetJournal.IsPetTypeChecked]](?) -
: REMOVED [[API C_PetJournal.IsPetSourceFiltered|C_PetJournal.IsPetSourceFiltered]](index) - Returns true if the pet source is unchecked.
: REMOVED [[API C_PetJournal.IsPetTypeFiltered|C_PetJournal.IsPetTypeFiltered]](index) - Returns true if the pet type is unchecked.
: [[API C_PetJournal.PetCanBeReleased|C_PetJournal.PetCanBeReleased]](petID) - Returns true if you can release the pet.
: [[API C_PetJournal.PetIsCapturable|C_PetJournal.PetIsCapturable]](petID)
: [[API C_PetJournal.PetIsFavorite|C_PetJournal.PetIsFavorite]](petID) - Returns true if this pet is marked as a favorite.
: [[API C_PetJournal.PetIsHurt|C_PetJournal.PetIsHurt]](petID)
: [[API C_PetJournal.PetIsLockedForConvert|C_PetJournal.PetIsLockedForConvert]](petID)
: [[API C_PetJournal.PetIsRevoked|C_PetJournal.PetIsRevoked]](petID)
: [[API C_PetJournal.PetIsSlotted|C_PetJournal.PetIsSlotted]](petID)
: [[API C_PetJournal.PetIsSummonable|C_PetJournal.PetIsSummonable]](petID) - Returns true if you can summon this pet.
: [[API C_PetJournal.PetIsTradable|C_PetJournal.PetIsTradable]](petID) - Returns whether or not a pet from the Pet Journal is tradable.
: [[API C_PetJournal.PetNeedsFanfare|C_PetJournal.PetNeedsFanfare]](?) -
: [[API C_PetJournal.PickupPet|C_PetJournal.PickupPet]](petID)
: [[API C_PetJournal.ReleasePetByID|C_PetJournal.ReleasePetByID]](petID) - Releases the pet.
: [[API C_PetJournal.SetAbility|C_PetJournal.SetAbility]](slotIndex, spellIndex, petSpellID)
: [[API C_PetJournal.SetAllPetSourcesChecked|C_PetJournal.SetAllPetSourcesChecked]](?)
: [[API C_PetJournal.SetAllPetTypesChecked|C_PetJournal.SetAllPetTypesChecked]](?)
: [[API C_PetJournal.SetCustomName|C_PetJournal.SetCustomName]](petID, customName) - Sets a custom name for the pet.
: [[API C_PetJournal.SetFavorite|C_PetJournal.SetFavorite]](petID, value) - Sets (or clears) the pet as a favorite.
: [[API C_PetJournal.SetFilterChecked|C_PetJournal.SetFilterChecked]](?) -
: REMOVED [[API C_PetJournal.SetFlagFilter|C_PetJournal.SetFlagFilter]](flag, value) - Sets the flags in the filter menu.
: [[API C_PetJournal.SetPetLoadOutInfo|C_PetJournal.SetPetLoadOutInfo]](slotIndex, petID)
: [[API C_PetJournal.SetPetSortParameter|C_PetJournal.SetPetSortParameter]](?) -
: [[API C_PetJournal.SetPetSourceChecked|C_PetJournal.SetPetSourceChecked]](?) -
: REMOVED [[API C_PetJournal.SetPetSourceFilter|C_PetJournal.SetPetSourceFilter]](index, value) - Sets the pet source in the filter menu.
: [[API C_PetJournal.SetPetTypeFilter|C_PetJournal.SetPetTypeFilter]](index, value) - Sets the pet type in the filter menu.
: [[API C_PetJournal.SetSearchFilter|C_PetJournal.SetSearchFilter]](text) - Sets the search filter in the pet journal.
: NOCOMBAT [[API C_PetJournal.SummonRandomPet|C_PetJournal.SummonRandomPet]](allPets) - Summons a random battle pet companion.
: NOCOMBAT [[API C_PetJournal.SummonPetByGUID|C_PetJournal.SummonPetByGUID]](petID) - Summons (or dismisses) a pet.

=== Petition Functions ===
Petitions are signup documents for guilds and arena teams. Some functions below only apply to a particular petition type
: [[API CanSignPetition|CanSignPetition]]() - Returns nil if the player cannot sign the current petition.
: [[API ClosePetition|ClosePetition]]() - Closes the current petition.
: [[API GetNumPetitionNames|GetNumPetitionNames]]() - Gets the number of signatures on the current petition.
: [[API GetPetitionInfo|GetPetitionInfo]]() - Retrieves information about the current petition.
: [[API GetPetitionNameInfo|GetPetitionNameInfo]](index) - Retrieves information about a signature on the petition.
: [[API OfferPetition|OfferPetition]]() - Offers a petition to your target, inviting them to join your would-be guild/arena team.
: [[API RenamePetition|RenamePetition]]("name") - Renames the current petition.
: [[API SignPetition|SignPetition]]() - Signs the current petition.
: [[API TurnInGuildCharter|TurnInGuildCharter]]() - Founds a guild.

=== Profession Functions ===
: [[API AbandonSkill|AbandonSkill]](index) - The player abandons a skill.
: [[API GetProfessionInfo|GetProfessionInfo]](index) - Gets details on a profession from its index including name, icon, and skill level.
: [[API GetProfessions|GetProfessions]]() - Gives all of the current character's professions.

=== PvP Functions ===
Functions related to PvP and Honor.
: [[API GetHolidayBGHonorCurrencyBonuses|GetHolidayBGHonorCurrencyBonuses]]() - Return rewards for participating in a Call to Arms (holiday) battleground. (added in 3.3.3)
: [[API GetInspectHonorData|GetInspectHonorData]]() - Return honor info for the inspected unit (if available).
: [[API GetPVPLifetimeStats|GetPVPLifetimeStats]]() - Get your PvP/Honor statistics for your lifetime.
: [[API GetPVPSessionStats|GetPVPSessionStats]]() - Get your PvP/Honor statistics for this session.
: [[API GetPVPYesterdayStats|GetPVPYesterdayStats]]() - Get your PvP/Honor statistics for yesterday.
: [[API GetRandomBGHonorCurrencyBonuses|GetRandomBGHonorCurrencyBonuses]]() - Returns rewards for participating in a random battleground. (added in 3.3.3)
: [[API HasInspectHonorData|HasInspectHonorData]]() - Determine if the inspected unit's honor data is available.
: [[API RequestInspectHonorData|RequestInspectHonorData]]() - Request honor data for inspected unit.
: [[API StartWarGame|StartWarGame]](target,area) - Starts a [[WarGame]].
: [[API UnitPVPName|UnitPVPName]]("unit") - Returns the unit's combined title and name (e.g., "Playername, the Insane").

=== Quest Functions ===
See also [[#Gossip Functions|Gossip Functions]]
: [[API AbandonQuest|AbandonQuest]] - Abandon the specified quest.
: [[API AcceptQuest|AcceptQuest]] - Accept the specified quest.
: [[API AddAutoQuestPopUp|AddAutoQuestPopUp]](QuestID,Type) - Adds quest to an internal list of quests for offer/completion popup notification. (4.0.1)
: [[API AddQuestWatch|AddQuestWatch]](questIndex[, watchTime]) - Add a quest to the watch list.
: [[API AddWorldQuestWatch|AddWorldQuestWatch]](questId) - Adds a world quest to the watch list.
: [[API CloseQuest|CloseQuest]]() - Closes the shown quest.
: [[API CollapseQuestHeader|CollapseQuestHeader]] - Collapses a quest header.
: [[API CompleteQuest|CompleteQuest]] - Complete the specified quest.
: [[API ConfirmAcceptQuest|ConfirmAcceptQuest]] - Accepts an offered quest that has been started by a party member; usually escort quests. (Might only be available after QUEST_ACCEPT_CONFIRM event.)
: [[API DeclineQuest|DeclineQuest]] - Declines the currently offered quest.
: [[API ExpandQuestHeader|ExpandQuestHeader]] - Expands a quest header.
: [[API GetAbandonQuestName|GetAbandonQuestName]] - Gets the name of a quest while it is being abandoned.
: [[API GetActiveLevel|GetActiveLevel]](index) - Gets the level of an active quest (only available after QUEST_GREETING event).
: [[API GetActiveTitle|GetActiveTitle]](index) - Gets the title of an active quest (only available after QUEST_GREETING event).
: [[API GetAutoQuestPopUp|GetAutoQuestPopUp]](Index) - Retrieves quest info by index that added using [[API AddAutoQuestPopUp|AddAutoQuestPopUp]]. (4.0.1)
: [[API GetAvailableLevel|GetAvailableLevel]](index) - Gets the level of an available quest (only available after QUEST_GREETING event).
: [[API GetAvailableQuestInfo|GetAvailableQuestInfo]](index) - Returns metadata (quest type) about an available quest. (added in 3.3.3)
: [[API GetAvailableTitle|GetAvailableTitle]](index) - Gets the title of an available quest (only available after QUEST_GREETING event).
: [[API GetDailyQuestsCompleted|GetDailyQuestsCompleted]] - Return the current number of daily quests completed today.
: [[API GetGreetingText|GetGreetingText]]()
: [[API GetNumActiveQuests|GetNumActiveQuests]] - Gets the number of currently active quests from this NPC (only available after QUEST_GREETING event).
: [[API GetNumAutoQuestPopUps|GetNumAutoQuestPopUps]]() - Retrieves number of quests added via [[API AddAutoQuestPopUp|AddAutoQuestPopUp]]. (4.0.1)
: [[API GetNumAvailableQuests|GetNumAvailableQuests]] - Gets the number of currently available quests from this NPC (only available after QUEST_GREETING event).
: [[API GetNumQuestChoices|GetNumQuestChoices]] - Returns the number of rewards available for choice for quest currently in gossip window.
: [[API GetNumQuestItems|GetNumQuestItems]] - Returns the number of items necessary to complete a particular quest.
: [[API GetNumQuestLeaderBoards|GetNumQuestLeaderBoards]]([questIndex]) - Returns the number of available quest objectives.
: [[API GetNumQuestLogChoices|GetNumQuestLogChoices]] - Returns the number of options someone has when getting a quest item.
: [[API GetNumQuestLogEntries|GetNumQuestLogEntries]] - Returns the number of entries in the quest log.
: [[API GetNumQuestLogRewards|GetNumQuestLogRewards]] - Returns the count of the rewards for a particular quest. (7.0.3)
: [[API GetNumQuestLogRewardSpells|GetNumQuestLogRewardSpells]] - Returns the number of spell rewards for the current selected quest.
: [[API GetNumQuestRewards|GetNumQuestRewards]] - Returns number of reward items (those that you always get) for quest currently in gossip window.
: [[API GetNumQuestWatches|GetNumQuestWatches]]() - Returns the number of quest watches active.
: [[API GetObjectiveText|GetObjectiveText]]() - Gets the objective of the current quest.
: [[API GetProgressText|GetProgressText]]() - Returns quest progress text, displayed by the NPC before the player pressed "Continue".
: [[API GetQuestBackgroundMaterial|GetQuestBackgroundMaterial]] - Returns the material string associated with the particular quest.
: [[API GetQuestGreenRange|GetQuestGreenRange]]() - Return for how many levels below you quests and mobs remain "green" (i.e. yield xp)
: [[API GetQuestID|GetQuestID]] - Returns the ID of the quest most recently displayed in a gossip frame, even after that frame is closed.
: [[API GetQuestIndexForTimer|GetQuestIndexForTimer]](timerID) - Gets the quest log index of a quest being timed.
: [[API GetQuestIndexForWatch|GetQuestIndexForWatch]](watchIndx) - Return the quest index for the specified watch
: [[API GetQuestItemInfo|GetQuestItemInfo]] - Returns basic information about the reward/choice/required item for quest currently in gossip window.
: [[API GetQuestItemLink|GetQuestItemLink]] - Returns an [[itemLink]] for a selected quest reward/choice/required item for quest currently in gossip window.
: [[API GetQuestLink|GetQuestLink]](index) - Returns a [[QuestLink]] for a quest
: [[API GetQuestLogChoiceInfo|GetQuestLogChoiceInfo]] - Returns a bunch of data about a quest reward choice from the quest log.
: [[API GetQuestLogGroupNum|GetQuestLogGroupNum]]() - Returns suggested number of players for quest selected currently in log or 0 if there's no suggestion.
: [[API GetQuestLogIndexByID|GetQuestLogIndexByID]](questID) - Returns the index of the specified questID in the quest log.
: [[API GetQuestLogItemLink|GetQuestLogItemLink]] - Returns item link for selected quest reward/choice/required item from quest log.
: [[API GetQuestLogLeaderBoard|GetQuestLogLeaderBoard]](ldrIndex[, questIndex]) - Gets information about the objectives for a quest.
: [[API GetQuestLogPushable|GetQuestLogPushable]] - Returns true if the currently loaded quest in the quest window can be shared.
: [[API GetQuestLogQuestText|GetQuestLogQuestText]] - Returns the description and objectives required for the specified quest.
: [[API GetQuestLogRequiredMoney|GetQuestLogRequiredMoney]] - Returns amount of money required for quest completion from quest log.
: [[API GetQuestLogRewardInfo|GetQuestLogRewardInfo]] - Returns a pile of reward item info from the quest log.
: [[API GetQuestLogRewardMoney|GetQuestLogRewardMoney]] - Returns a number representing the amount of copper returned by a particular quest.
: [[API GetQuestLogRewardSpell|GetQuestLogRewardSpell]] - Returns name and texture of spell awarded for quest completion from quest log.
: REMOVED [[API GetQuestLogRewardTalents|GetQuestLogRewardTalents]] - Returns number of talents awarded for quest completion from quest log.
: [[API GetQuestLogSelection|GetQuestLogSelection]] - Returns a number associated with the QuestLogSelection index.
: [[API GetQuestLogTimeLeft|GetQuestLogTimeLeft]] - Returns the seconds remaining on the current quest timer.
: [[API GetQuestLogTitle|GetQuestLogTitle]](index) - Returns verbose data about a particular quest log entry: level requirement, tag, suggested group, completed status, etc.
: [[API GetQuestMoneyToGet|GetQuestMoneyToGet]] - Returns amount of money required for quest currently displayed in gossip.
: [[API GetQuestResetTime|GetQuestResetTime]] - Returns number of seconds until quest reset.
: [[API GetQuestReward|GetQuestReward]](rewardIndex) - Completes the quest with the specified quest reward.
: [[API GetQuestsCompleted|GetQuestsCompleted]]([table]) - Returns table of completed quests.
: [[API GetQuestTagInfo|GetQuestTagInfo]](questID) - Returns tag information about the specified quest.
: [[API GetQuestText|GetQuestText]] - Gets the description of the current quest.
: [[API GetQuestTimers|GetQuestTimers]] - Returns all of the quest timers currently in progress.
: [[API GetRewardMoney|GetRewardMoney]]() - Returns a amount of copper rewarded for completion of quest displayed in gossip.
: [[API GetRewardSpell|GetRewardSpell]]() - Returns name and texture of spell awarded for quest completion for quest currently in gossip window.
: REMOVED [[API GetRewardTalents|GetRewardTalents]]() - Returns number of talents awarded for quest completion for quest currently in gossip window.
: [[API GetRewardText|GetRewardText]]() - Returns quest reward text, displayed by the NPC before the player hits "Complete Quest".
: [[API GetRewardTitle|GetRewardTitle]]() - Returns the title awarded by the currently displayed quest.
: [[API GetRewardXP|GetRewardXP]]() - Returns the amount of experience awarded by the currently displayed text.
: [[API GetTitleText|GetTitleText]] - Retrieves the title of the quest while talking to the NPC about it.
: [[API IsCurrentQuestFailed|IsCurrentQuestFailed]] - ?.
: [[API IsQuestCompletable|IsQuestCompletable]] - Returns true if a quest is possible to complete.
: [[API IsQuestFlaggedCompleted|IsQuestFlaggedCompleted]](questID) - Determine if a quest has been completed.
: [[API IsQuestWatched|IsQuestWatched]](questIndex) - Determine if the specified quest is watched.
: [[API IsUnitOnQuest|IsUnitOnQuest]](questIndex, "unit") - Determine if the specified unit is on the given quest.
: [[API IsWorldQuestWatched|IsWorldQuestWatched]](questId) - Determine if the world quest id is tracked
: [[API IsUnitOnQuestByQuestID|IsUnitOnQuestByQuestID]](questId, "unit") - Determine if the specified unit is on the given quest.
: [[API QuestChooseRewardError|QuestChooseRewardError]] - Throws an error when the quest choose reward method doesn't work.
: [[API QuestFlagsPVP|QuestFlagsPVP]]() - Determine if the quest will flag you you for PvP when accepted.
: [[API QuestGetAutoAccept|QuestGetAutoAccept]]() - Returns whether the last-offered quest was automatically accepted. (3.3.0)
: [[API QuestIsDaily|QuestIsDaily]]() - Returns whether the offered quest is a daily quest. (3.3.3)
: [[API QuestIsWeekly|QuestIsWeekly]]() - Returns whether the offered quest is a weekly quest. (3.3.3)
: [[API QuestLogPushQuest|QuestLogPushQuest]] - Initiates the sharing of the currently viewed quest in the quest log.
: [[API RemoveQuestWatch|RemoveQuestWatch]](questIndex) - Removes a quest watch by questIndex.
: [[API RemoveWorldQuestWatch|RemoveWorldQuestWatch]](questId) - Removes a world quest from the watch.
: [[API SelectActiveQuest|SelectActiveQuest]] - Selects an active quest from the NPC (only available after QUEST_GREETING event).
: [[API SelectAvailableQuest|SelectAvailableQuest]] - Selects an available quest from the NPC (only available after QUEST_GREETING event).
: [[API SelectQuestLogEntry|SelectQuestLogEntry]] - Sets the selected quest, required for most GetQuest functions.
: [[API SetAbandonQuest|SetAbandonQuest]] - Called before [[API AbandonQuest|AbandonQuest]].
: REMOVED [[API ShiftQuestWatches|ShiftQuestWatches]](id1, id2) - Exchanges the order of two watched quests. (3.3.3)
: [[API SortQuestWatches|SortQuestWatches]]() - Sorts the watched quests according to proximity and returns whether the order changed since last sorting. (3.3.3)

=== Raid Functions ===
See also [[#Group Functions|Group Functions]].
: [[API ClearRaidMarker|ClearRaidMarker]](index) - Removes a raid marker from the world. (4.0.1)
: [[API ConvertToParty|ConvertToParty]]() - Converts a raid group with 5 or less members to a party. (4.0.1)
: [[API ConvertToRaid|ConvertToRaid]]() - Converts a party to a raid.
: [[API DemoteAssistant|DemoteAssistant]]("unit") - Demotes player from assistant status. Requires raid leadership.
: [[API GetAllowLowLevelRaid|GetAllowLowLevelRaid]]() - Returns whether joining low-level raids is enabled for the current character.
: [[API GetPartyAssignment|GetPartyAssignment]]("assignment") - Returns unitID of unit assigned to given role.
: [[API GetPartyAssignment|GetPartyAssignment]]("assignment", "unit") - Returns a value based on whether the unit is assigned to given role.
: [[API GetRaidRosterInfo|GetRaidRosterInfo]](index) - Returns information about the members of your raid .
: [[API GetRaidTargetIndex|GetRaidTargetIndex]]("unit") - Get the raid target index assigned to a unit.
: [[API GetReadyCheckStatus|GetReadyCheckStatus]]("unit") - Returns a raid member's response to the current ready check.
: [[API IsRaidMarkerActive|IsRaidMarkerActive]](index) - Returns whether or not the raid marker specified by index is active.
: PROTECTED [[API PlaceRaidMarker|PlaceRaidMarker]](index) - Brings up a targeting circle to place a raid marker in the world.(4.0.1)
: [[API PromoteToAssistant|PromoteToAssistant]]("unit") - Promotes player to assistant status. Requires raid leadership.
: [[API RequestRaidInfo|RequestRaidInfo]]() - Returns information about which instances you are saved to.
: PROTECTED [[API SetPartyAssignment|SetPartyAssignment]]("assignment", player) (2.3.3)
: [[API SetAllowLowLevelRaid|SetAllowLowLevelRaid]](allowed) - Controls whether the current character can join low-level raids.
: [[API SetRaidSubgroup|SetRaidSubgroup]](index, subgroup) - Move a raid member from his current subgroup into a different (non-full) subgroup.
: PROTECTED [[API SwapRaidSubgroup|SwapRaidSubgroup]](index1, index2) - Swaps raid members into different groups.
: [[API SetRaidTarget|SetRaidTarget]]("unit", index) - Sets a raid icon on a unit.
: UI [[API SetRaidTargetIcon|SetRaidTargetIcon]]("unit", index) - Sets or resets a raid icon a unit.
: [[API UnitInRaid|UnitInRaid]]("unit") - Returns 1 if unit is in your raid, nil if not.

=== RealID (BNet) Functions ===
These functions were added in [[Patch 3.3.5]].
: [[API BNAcceptFriendInvite|BNAcceptFriendInvite]](ID)
: [[API BNCheckBattleTagInviteToGuildMember|BNCheckBattleTagInviteToGuildMember]](fullname)
: [[API BNCheckBattleTagInviteToUnit|BNCheckBattleTagInviteToUnit]](unit)
: [[API BNConnected|BNConnected]]() - Returns your battle.net connected state (True|False)
: [[API BNDeclineFriendInvite|BNDeclineFriendInvite]](ID)
: [[API BNFeaturesEnabled|BNFeaturesEnabled]]()
: [[API BNFeaturesEnabledAndConnected|BNFeaturesEnabledAndConnected]]()
: [[API BNGetBlockedInfo|BNGetBlockedInfo]](index)
: [[API BNGetFOFInfo|BNGetFOFInfo]](presenceID, mutual, non-mutual, index) - returns presenceID, givenName, surname, isFriend
: [[API BNGetFriendGameAccountInfo|BNGetFriendGameAccountInfo]](bnetIDGameAccount) -
: [[API BNGetFriendIndex|BNGetFriendIndex]](bnetIDAccount)
: [[API BNGetFriendInfo|BNGetFriendInfo]](friendIndex) - returns presenceID, givenName, surname, character name, character ID, game client, connected, status, broadcast and note of the friend
: [[API BNGetFriendInfoByID|BNGetFriendInfoByID]](presenceID) - returns presenceID, givenName, surname, character name, character ID, game client, connected, status, broadcast and note of the friend
: [[API BNGetFriendInviteInfo|BNGetFriendInviteInfo]](menuValue) - returns presenceID, givenName, surname
: [[API BNGetGameAccountInfo|BNGetGameAccountInfo]](bnetIDGameAccount) -
: [[API BNGetInfo|BNGetInfo]]() - returns presenceID, toonID, currentBroadcast, bnetAFK, bnetDND
: [[API BNGetNumBlocked|BNGetNumBlocked]]()
: [[API BNGetNumFOF|BNGetNumFOF]](ID,mutual,non)
: [[API BNGetNumFriendGameAccounts|BNGetNumFriendGameAccounts]](friendIndex)
: [[API BNGetNumFriendInvites|BNGetNumFriendInvites]]()
: [[API BNGetNumFriends|BNGetNumFriends]]() - returns numBNetTotal, numBNetOnline
: [[API BNGetSelectedBlock|BNGetSelectedBlock]]()
: [[API BNGetSelectedFriend|BNGetSelectedFriend]]()
: [[API BNInviteFriend|BNInviteFriend]](bnetIDGameAccount)
: [[API BNIsBlocked|BNIsBlocked]](ID)
: [[API BNIsFriend|BNIsFriend]](presenceID)
: [[API BNIsSelf|BNIsSelf]](presenceID) - Returns true if the specified presenceID is your own, false otherwise.
: [[API BNRemoveFriend|BNRemoveFriend]](ID)
: [[API BNReportPlayer|BNReportPlayer]](presenceID, type, comments)
: [[API BNRequestFOFInfo|BNRequestFOFInfo]](bnetIDAccount)
: [[API BNSendFriendInvite|BNSendFriendInvite]](text, noteText)
: [[API BNSendFriendInviteByID|BNSendFriendInviteByID]](ID, noteText)
: [[API BNSendGameData|BNSendGameData]](id, addonPrefix, text) - BNet equivalent of SendAddonMessage -- Added in [[Patch 5.4.7]]
: [[API BNSendSoR|BNSendSoR]](target,comment)
: [[API BNSendVerifiedBattleTagInvite|BNSendVerifiedBattleTagInvite]]() - unit should have been set with {{api|BNCheckBattleTagInviteToUnit}} or {{api|BNCheckBattleTagInviteToGuildMember}}
: [[API BNSendWhisper|BNSendWhisper]](id, text)
: [[API BNSetAFK|BNSetAFK]](bool) - Set or unset afk status
: [[API BNSetBlocked|BNSetBlocked]](ID, bool)
: [[API BNSetCustomMessage|BNSetCustomMessage]](text)
: [[API BNSetDND|BNSetDND]](bool) - Set or unset dnd status
: [[API BNSetFriendNote|BNSetFriendNote]](ID, noteText)
: [[API BNSetSelectedBlock|BNSetSelectedBlock]](index)
: [[API BNSetSelectedFriend|BNSetSelectedFriend]](index)
: [[API BNSummonFriendByIndex|BNSummonFriendByIndex]](id)
: [[API BNTokenFindName|BNTokenFindName]](target)
: [[API GetAutoCompletePresenceID|GetAutoCompletePresenceID]](name)
: [[API IsBNLogin|IsBNLogin]]()

=== Recruit-a-Friend Functions ===
Note: Only usable by people that have been referred or have referred someone.
: [[API C_RecruitAFriend.CheckEmailEnabled|C_RecruitAFriend.CheckEmailEnabled]](?) -
: [[API C_RecruitAFriend.GetRecruitInfo|C_RecruitAFriend.GetRecruitInfo]](?) -
: [[API C_RecruitAFriend.IsSendingEnabled|C_RecruitAFriend.IsSendingEnabled]](?) -
: [[API C_RecruitAFriend.SendRecruit|C_RecruitAFriend.SendRecruit]](?) -
: [[API AcceptLevelGrant|AcceptLevelGrant]]() - Accepts a level grant proposal.
: [[API DeclineLevelGrant|DeclineLevelGrant]]() - Declines a level grant proposal.
: [[API IsReferAFriendLinked|IsReferAFriendLinked]]("unit") - Returns whether the unit is linked to the player via RaF.
: [[API CanGrantLevel|CanGrantLevel]]("unit") - Returns whether you can grant levels to a particular player.
: [[API GrantLevel|GrantLevel]]("unit", level) - Grant a custom amount of levels to a RaF-linked player.
: [[API CanSummonFriend|CanSummonFriend]]("unit") - Returns whether you can RaF summon a particular unit.
: [[API SummonFriend|SummonFriend]]("unit") - Summons a player using the RaF system.
: [[API GetSummonFriendCooldown|GetSummonFriendCooldown]]() - Returns the cooldown (start, duration) of the RaF Summon Friend ability.

=== Script Profiling Functions ===
Note: CPU profiling is disabled by default since it has some overhead. CPU profiling is controlled by the scriptProfile cvar, which persists across sessions, and takes effect after a UI reload. Memory profiling is always available. These functions have been added in Patch 2.1.
: [[API GetAddOnCPUUsage|GetAddOnCPUUsage]](index or "name") - Returns the total time used by the specified AddOn. This returns a cached value calculated by UpdateAddOnCPUUsage().
: [[API GetAddOnMemoryUsage|GetAddOnMemoryUsage]](index or "name") - query an addon's memory use (in K, precision to 1 byte) - This returns a cached value calculated by UpdateAddOnMemoryUsage().
: [[API GetEventCPUUsage|GetEventCPUUsage]](["event"]) - Returns the time used and number of times the specified event has been triggered. If 'event' is omitted, the time and count will be totals across all events.
: [[API GetFrameCPUUsage|GetFrameCPUUsage]](frame[, includeChildren]) - Returns the time used and number of function calls of any of the frame's script handlers. If 'includeChildren' is true or omitted, the time and call count will include the handlers for all of the frame's children as well.
: [[API GetFunctionCPUUsage|GetFunctionCPUUsage]](function[, includeSubroutines]) - Returns the time used and number of times the specified function was called. If 'includeSubroutines' is true or omitted, the time includes both the time spent in the function and subroutines called by the function. If it is false, then time is only the time actually spent by the code in the function itself.
: [[API GetScriptCPUUsage|GetScriptCPUUsage]]() - Returns the total time used by the scripting system
: [[API ResetCPUUsage|ResetCPUUsage]]() - Reset all CPU profiling statistics to zero.
: [[API UpdateAddOnCPUUsage|UpdateAddOnCPUUsage]]() - Scan through the profiling data and update the per-addon statistics
: [[API UpdateAddOnMemoryUsage|UpdateAddOnMemoryUsage]]() - Scan through memory profiling data and update the per-addon statistics

=== Security and Protection Functions ===
: [[API issecure|issecure]]() - Determine if the current environment is secure.
: [[API forceinsecure|forceinsecure]]() - Taint the current execution path.
: [[API issecurevariable|issecurevariable]]([table,] "name") - Determine if the specified variable is secure.
: [[API securecall|securecall]](function or "functionName", ...) - Call a function from a secure environment without risking secure status.
: [[API hooksecurefunc|hooksecurefunc]]([table,] "functionName", hookfunc) - Creates a secure 'post hook' for the named function. The hookfunc is invoked after the original function, and receives the same parameters. Return values from hookfunc are discarded. This is the only safe way to hook functions that execute protected functionality.
: [[API InCombatLockdown|InCombatLockdown]]() - Returns true if the in-combat AddOn restrictions are active.
: [[API scrub|scrub]](...) - returns the argument list with non-number/boolean/string values changed to nil.

=== Settings Functions ===
: [[API AntiAliasingSupported|AntiAliasingSupported]]() -
: [[API AutoChooseCurrentGraphicsSetting|AutoChooseCurrentGraphicsSetting]]() -
: [[API CombatTextSetActiveUnit|CombatTextSetActiveUnit]](unit) - changes the entity for which COMBAT_TEXT_UPDATE events fire.
: [[API GetCVar|GetCVar]]("cVar") - Returns the current value of a console variable.
: [[API GetCVarBitfield|GetCVarBitfield]]("cVar", index) -
: [[API GetCVarBool|GetCVarBool]]("cVar") - Returns the value of the cvar as 1 or nil instead of requiring you to compare the cvar value with "0" or "1"
: [[API GetCVarDefault|GetCVarDefault]]("cVar") - Returns the default value of a console variable.
: [[API GetCVarInfo|GetCVarInfo]]("cVar") - returns name, defaultValue, serverStoredAccountWide, serverStoredPerCharacter
: [[API GetCVarSettingValidity|GetCVarSettingValidity]]() -
: [[API GetCurrentGraphicsSetting|GetCurrentGraphicsSetting]]() -
: [[API GetCurrentRefresh|GetCurrentRefresh]]() -
: [[API GetCurrentResolution|GetCurrentResolution]]() - Get the index of the current screen resolution.
: [[API GetDefaultVideoOption|GetDefaultVideoOption]]() -
: [[API GetDefaultVideoOptions|GetDefaultVideoOptions]]() -
: [[API GetDefaultVideoQualityOption|GetDefaultVideoQualityOption]]() -
: [[API GetGamma|GetGamma]]()
: [[API GetGraphicsAPIs|GetGraphicsAPIs]]() - returns a table of api cVars, d3d9, d3d11 etc
: [[API GetGraphicsDropdownIndexByMasterIndex|GetGraphicsDropdownIndexByMasterIndex]]() -
: [[API GetMaxRenderScale|GetMaxRenderScale]] () -
: [[API GetMonitorAspectRatio|GetMonitorAspectRatio]]() -
: [[API GetMonitorCount|GetMonitorCount]]() -
: [[API GetMonitorName|GetMonitorName]]() -
: [[API GetRefreshRates|GetRefreshRates]](x)
: [[API GetScreenResolutions|GetScreenResolutions]]()
: [[API GetVideoCaps|GetVideoCaps]]()
: [[API GetVideoOptions|GetVideoOptions]]()
: [[API IsThreatWarningEnabled|IsThreatWarningEnabled]]() - returns whether threat warnings should currently be displayed.
: [[API RegisterCVar|RegisterCVar]]("cVar"[, value]) - Registers a variable for use with the [[API GetCVar|GetCVar]] and [[API SetCVar|SetCVar]] functions.
: [[API ResetTutorials|ResetTutorials]]()
: [[API SetCVar|SetCVar]]("cVar", value[, "scriptCVar"]) - Set the value of a variable in config.wtf
: [[API SetEuropeanNumbers|SetEuropeanNumbers]](flag) - Sets the decimal separator to a comma instead of a dot
: [[API SetGamma|SetGamma]](value)
: REMOVED [[API SetLayoutMode|SetLayoutMode]]()
: [[API SetScreenResolution|SetScreenResolution]](x)
: REMOVED [[API ShowCloak|ShowCloak]](flag) - Set whether player's cloak is displayed.
: REMOVED [[API ShowHelm|ShowHelm]](flag) - Set whether player's helm is displayed.
: UI [[API ShowNumericThreat|ShowNumericThreat]]() - Returns 1 if detailed threat information should be shown on unit frames.
: REMOVED [[API ShowingCloak|ShowingCloak]]() - Return 1 if player's cloak is displayed, nil otherwise.
: REMOVED [[API ShowingHelm|ShowingHelm]]() - Return 1 if player's helm is displayed, nil otherwise.

=== Specialization Functions ===
: [[API GetActiveSpecGroup|GetActiveSpecGroup]]([isInspect]) - Returns the index of the current active specialization/talent/glyph group.
: [[API GetArenaOpponentSpec|GetArenaOpponentSpec]]() -
: [[API GetInspectSpecialization|GetInspectSpecialization]]("unit") - Returns a number representing the current active specialization of a given unit.
: [[API GetNumArenaOpponentSpecs|GetNumArenaOpponentSpecs]]() -
: [[API GetNumSpecGroups|GetNumSpecGroups]]([isInspect]) - Returns the number of specialization group (dual specs) the player has.
: [[API GetNumSpecializations|GetNumSpecializations]]([isInspect[, isPet]]) - Returns the number of available specializations.
: [[API GetNumSpecializationsForClassID|GetNumSpecializationsForClassID]](classID) - Returns the number of specializations available to a particular class.
: [[API GetSpecialization|GetSpecialization]]([isInspect[, isPet[, specGroup]]]) - Returns the index of the player's current specialization.
: [[API GetSpecializationInfo|GetSpecializationInfo]](specIndex[, isInspect[, isPet]]) - Returns information about the player's specializations.
: [[API GetSpecializationInfoByID|GetSpecializationInfoByID]](specID) - Returns information about the specified specialization.
: [[API GetSpecializationInfoForClassID|GetSpecializationInfoForClassID]](classID, specIndex) - Returns information about the specified specialization.
: [[API GetSpecializationMasterySpells|GetSpecializationMasterySpells]](specIndex[, isInspect[, isPet]]) - Returns the mastery spellID of the current player's specialization.
: [[API GetSpecializationRole|GetSpecializationRole]](specIndex[, isInspect[, isPet]]) - Returns the role a specialization is intended to perform.
: [[API GetSpecializationRoleByID|GetSpecializationRoleByID]](specID) - Returns the role a specialization is intended to perform.
: [[API GetSpecializationSpells|GetSpecializationSpells]](specIndex[, isInspect[, isPet]]) - Returns the spellID of key abilities used by the specified specialization.
: [[API GetSpecsForSpell|GetSpecsForSpell]]("spellName" or spellIndex, "bookType") - Returns the specs for which the specified spell can be used.
: [[API IsSpellClassOrSpec|IsSpellClassOrSpec]]("spellName" or spellIndex, "bookType") - Returns whether a given spell is specific to a specialization and/or class.
: REMOVED NOCOMBAT [[API SetActiveSpecGroup|SetActiveSpecGroup]](groupIndex) - Changes the active specialization group.
: NOCOMBAT [[API SetSpecialization|SetSpecialization]](specIndex [, isPet]) - Selects a specialization.
: NOCOMBAT [[API UnlearnSpecialization|UnlearnSpecialization]](specIndex [, isPet]) -

=== Spell Functions ===
: PROTECTED [[API CastShapeshiftForm|CastShapeshiftForm]](index)
: PROTECTED [[API CastSpell|CastSpell]](spellIndex, "bookType") - Cast the spell in the specified spell book slot.
: PROTECTED [[API CastSpellByName|CastSpellByName]]("name"[, "target"]) - Cast the specified spell by display name.
: [[API GetMultiCastTotemSpells|GetMultiCastTotemSpells]](totemslot) - Returns a list of spellIDs that are applicable for the specified totem slot (1-4) (added in 3.2)
: [[API GetNumShapeshiftForms|GetNumShapeshiftForms]]()
: [[API GetNumSpellTabs|GetNumSpellTabs]]() - Returns the total number of tabs in the user's spellbook.
: [[API GetQuestLogRewardSpell|GetQuestLogRewardSpell]] - ?.
: [[API GetRewardSpell|GetRewardSpell]] - ?.
: [[API GetShapeshiftForm|GetShapeshiftForm]](unknown) - returns zero-based index of current form/stance
: [[API GetShapeshiftFormCooldown|GetShapeshiftFormCooldown]](index)
: [[API GetShapeshiftFormID|GetShapeshiftFormID]]() - returns the current shapeshift form as a constant. If the player is not shapeshifted it returns nil.
: [[API GetShapeshiftFormInfo|GetShapeshiftFormInfo]](index) - Retrieves information about an available ShapeshiftForm or Stance.
: [[API GetSpellAutocast|GetSpellAutocast]]("spellName" | spellId, bookType) - Check whether the specified spell autocasts or not.
: [[API GetSpellBookItemInfo|GetSpellBookItemInfo]](spellID, "bookType") - Returns the spell's type and spellID for a spell in the player's spellbook.
: [[API GetSpellBookItemName|GetSpellBookItemName]](spellID, "bookType") - Returns the spell name and spell rank for a spell in the player's spellbook.
: [[API GetSpellBookItemTexture|GetSpellBookItemTexture]](spellID, "bookType") - Returns the spell icon fileId for a spell in the player's spellbook.
: [[API GetSpellBookItemTextureFileName|GetSpellBookItemTextureFileName]](spellID, "bookType") - Returns the spell icon texture for a spell in the player's spellbook.
: [[API GetSpellCharges|GetSpellCharges]](spellId | spellName) - Returns information about the charges of a charge-accumulating player ability.
: [[API GetSpellCooldown|GetSpellCooldown]](spellName | spellID, "bookType") - Retrieves data on the cooldown of a specific spell.
: [[API GetSpellDescription|GetSpellDescription]](spellId) - Returns the spell description.
: [[API GetSpellInfo|GetSpellInfo]](spellId | spellName | spellLink) - Returns the spell's info, including name, cost, icon, cast time, and range.
: [[API GetSpellLink|GetSpellLink]](spellName, spellRank) - Returns the spell's link. (2.4)
: [[API GetSpellTabInfo|GetSpellTabInfo]](spellbookTabNum) - Returns information about the specified spellbook tab.
: [[API GetSpellTexture|GetSpellTexture]](spellId | spellName) - Returns the fileId used for the spell's icon.
: [[API GetSpellTextureFileName|GetSpellTextureFileName]](spellId | spellName) - Returns the texture used for the spell's icon.
: [[API GetTotemInfo|GetTotemInfo]](slot) - Returns information about a totem.
: [[API IsAttackSpell|IsAttackSpell]](spell) - Returns 1 if the spell is the "Attack" spell.
: [[API IsAutoRepeatSpell|IsAutoRepeatSpell]](spell) -
: [[API IsPassiveSpell|IsPassiveSpell]](spellID, "bookType") - Returns whether the icon in your spellbook is a Passive ability. Formerly IsSpellPassive(spell).
: [[API IsSpellInRange|IsSpellInRange]]("spellName", [unit]) - Is nil for no valid target, 0 for out of range, 1 for in range.
: [[API IsSpellKnown|IsSpellKnown]](spellID, isPetSpell) - Returns whether the player (or pet) knows the given spell.
: [[API IsSpellOverlayed|IsSpellOverlayed]](spellID) - Returns whether the spell is currently affected by a proc (glow highlighting).
: [[API IsUsableSpell|IsUsableSpell]](spell) -
: [[API PickupSpell|PickupSpell]]("spellName" | spellID, "bookType") - Loads an action button onto the cursor to be dropped into a quickbar slot.
: UI [[API QueryCastSequence|QueryCastSequence]]("sequence") - Returns index, item, spell for the spell/item that will be used next if the cast sequence is executed.
: PROTECTED [[API SetMultiCastSpell|SetMultiCastSpell]](actionID,spellID) - Assigns a spellID to a multicast (totem bar) actionID. (added in 3.2)
: [[API SpellCanTargetUnit|SpellCanTargetUnit]]("unit") - Returns true if the spell awaiting target selection can be cast on the specified unit.
: [[API SpellHasRange|SpellHasRange]](spell) - Returns true if the specified spell has a ranged effect (i.e. requires a target).
: [[API SpellIsTargeting|SpellIsTargeting]]() - Returns true if a spell has been cast and is awaiting target selection.
: PROTECTED [[API SpellStopCasting|SpellStopCasting]]() - Stops the current spellcast.
: PROTECTED [[API SpellStopTargeting|SpellStopTargeting]]() - Cancels the spell awaiting target selection.
: PROTECTED [[API SpellTargetUnit|SpellTargetUnit]]("unit") - Casts the spell awaiting target selection on the specified unit.
: PROTECTED [[API ToggleSpellAutocast|ToggleSpellAutocast]]("spellName" | spellId, bookType) - Toggles whether the specified spell should autocast or not. This is used for some pet abilities.
: [[API UnitCastingInfo|UnitCastingInfo]]("unit") - Returns information about the spell currently being cast by the specified unit.
: [[API UnitChannelInfo|UnitChannelInfo]]("unit") - Returns information about the spell currently being channeled by the specified unit.

=== System Functions ===
: [[API ConsoleExec|ConsoleExec]]("command") - Execute a console command.
: [[API DetectWowMouse|DetectWowMouse]]() - Attempts to detect the world of warcraft MMO mouse.
: [[API GetBuildInfo|GetBuildInfo]]() - Returns information about current client build.
: [[API geterrorhandler|geterrorhandler]]() - Returns the currently set error handler.
: [[API GetCurrentKeyBoardFocus|GetCurrentKeyBoardFocus]]() - Returns the [editbox] widget currently handling keyboard events.
: REMOVED [[API GetExistingLocales|GetExistingLocales]]() - Returns a list of installed language packs.
: [[API GetFramerate|GetFramerate]]() - Returns the current framerate (full precision)
: [[API GetGameTime|GetGameTime]]() - Returns the time in-game.
: [[API GetLocale|GetLocale]]() - Returns client locale, example 'enUS'.
: [[API GetCursorPosition|GetCursorPosition]]() - Returns the cursor's position on the screen.
: [[API GetNetStats|GetNetStats]]() - Get bandwidth and latency network information.
: [[API GetRealmName|GetRealmName]]() - returns the name of the server a user is logged in to
: [[API GetScreenHeight|GetScreenHeight]]() - Returns the height of the window in pixels.
: [[API GetScreenWidth|GetScreenWidth]]() - Returns the width of the window in pixels.
: UI [[API GetText|GetText]]() - Used to localize some client text.
: [[API GetTime|GetTime]]() - Returns the system uptime in seconds (millisecond precision).
: [[API IsAltKeyDown|IsAltKeyDown]]() - Returns true if the alt key is currently depressed.
: [[API InCinematic|InCinematic]]()
: [[API IsControlKeyDown|IsControlKeyDown]]() - Returns true if the control key is currently depressed.
: [[API IsDebugBuild|IsDebugBuild]]() - ?
: [[API IsDesaturateSupported|IsDesaturateSupported]]() - ?
: [[API IsLeftAltKeyDown|IsLeftAltKeyDown]]() - Returns true if the left alt key is currently depressed.
: [[API IsLeftControlKeyDown|IsLeftControlKeyDown]]() - Returns true if the left control key is currently depressed.
: [[API IsLeftShiftKeyDown|IsLeftShiftKeyDown]]() - Returns true if the left shift key is currently depressed.
: [[API IsLinuxClient|IsLinuxClient]]() - Boolean - Returns true if WoW is being run on Linux.
: [[API IsLoggedIn|IsLoggedIn]]() - Returns nil before the PLAYER_LOGIN event has fired, 1 afterwards.
: [[API IsMacClient|IsMacClient]]() - Returns true if WoW is being run on Mac.
: [[API IsOnTournamentRealm|IsOnTournamentRealm]]() - Returns true if currently on a tournament realm, nil otherwise.
: [[API IsRightAltKeyDown|IsRightAltKeyDown]]() - Returns true if the right alt key is currently depressed.
: [[API IsRightControlKeyDown|IsRightControlKeyDown]]() - Returns true if the right control key is currently depressed.
: [[API IsRightShiftKeyDown|IsRightShiftKeyDown]]() - Returns true if the right shift key is currently depressed.
: [[API IsShiftKeyDown|IsShiftKeyDown]]() - Returns true if the shift key is currently depressed.
: [[API IsStereoVideoAvailable|IsStereoVideoAvailable]]() - added in 3.0.8
: [[API IsWindowsClient|IsWindowsClient]]() - Returns true if WoW is being run on Windows.
: [[API OpeningCinematic|OpeningCinematic]]() - Shows the opening movie for a player's race
: [[API PlayMusic|PlayMusic]]() - Plays the specified mp3.
: [[API PlaySound|PlaySound]]() - Plays the specified built-in sound effect.
: [[API PlaySoundFile|PlaySoundFile]]() - Plays the specified sound file.
: HW [[API ReloadUI|ReloadUI]]() - Reloads the UI from source files
: [[API RepopMe|RepopMe]]() - The "Release Spirit" button. Sends you to the graveyard when dead.
: [[API RequestTimePlayed|RequestTimePlayed]]() - Request a summary of time played from the server.
: [[API RestartGx|RestartGx]]() - Restarts the graphical engine. Needed for things such as resolution changes to take effect.
: [[API RunScript|RunScript]]("script") - Execute "script" as a block of Lua code.
: [[API Screenshot|Screenshot]]() - Takes a screenshot.
: UI [[API SecondsToTime|SecondsToTime]] - Converts a number of seconds into a readable days / hours / etc. formatted string.
: [[API seterrorhandler|seterrorhandler]](function) - Set the error handler to the given parameter.
: [[API StopCinematic|StopCinematic]]()
: [[API StopMusic|StopMusic]]() - Stops the currently playing mp3.
: UI [[API UIParentLoadAddOn|UIParentLoadAddOn]]("AddOnName") - Loads or Reloads the specified AddOn, and pops up an error message if it fails to load for any reason.
: REMOVED UI [[API TakeScreenshot|TakeScreenshot]]() - Takes a screenshot.
: UI [[API ERRORMESSAGE|_ERRORMESSAGE]](value) - Displays the script error dialog with optional text
: [[API debuginfo|debuginfo]]() - Output win32 debug text. Freeware debug message viewer: [http://www.sysinternals.com/Utilities/DebugView.html DebugView] (Has no effect on live server.)
: UI [[API message|message]]("text") - Displays a message box with your text message and an "Okay" button.

=== Talent Functions ===
: [[API CheckTalentMasterDist|CheckTalentMasterDist]]() - Returns nil if the player is too far away from the talent master to use the talent methods.
: [[API ConfirmTalentWipe|ConfirmTalentWipe]]() - Confirms freeing all talent points.
: [[API GetMaxTalentTier|GetMaxTalentTier]]() - Returns the number of available talent tiers.
: [[API GetNumUnspentTalents|GetNumUnspentTalents]]() - Returns the number of unspent talents.
: REMOVED [[API GetTalentClearInfo|GetTalentClearInfo]]() - Returns information about the current cost of unlearning a talent
: [[API GetTalentInfo|GetTalentInfo]](talentID[,isInspect[,specGroup[,inspectID[, classID]]]]) - Returns information about a talent.
: [[API GetTalentInfoByID|GetTalentInfoByID]](?) -
: [[API GetTalentInfoBySpecialization|GetTalentInfoBySpecialization]](?) -
: [[API GetTalentLink|GetTalentLink]](talentID[,isInspect[,specGroup[,inspectID[, classID]]]]) - Returns the talent link.
: [[API GetTalentTierInfo|GetTalentTierInfo]](?) -
: REMOVED [[API GetTalentRowSelectionInfo|GetTalentRowSelectionInfo]](tier) - Returns information about the player's talent selection in the specified talent tier.
:[[API GetPvpTalentInfo|GetPvpTalentInfo]](?) -
: [[API GetPvpTalentInfoByID|GetPvpTalentInfoByID]](?) -
: [[API GetPvpTalentInfoBySpecialization|GetPvpTalentInfoBySpecialization]](?) -
: [[API GetPvpTalentLevelRequirement|GetPvpTalentLevelRequirement]](?) -
: [[API GetPvpTalentLink|GetPvpTalentLink]](?) -
: [[API GetPvpTalentRowSelectionInfo|GetPvpTalentRowSelectionInfo]](?) -
: [[API GetPvpTalentUnlock|GetPvpTalentUnlock]](?) -
: [[API IsPvpTalentSpell|IsPvpTalentSpell]](?) -
: [[API IsTalentSpell|IsTalentSpell]](slot, bookType) - Returns whether or not the specified spell is learned from a talent.
: [[API LearnPvpTalent|LearnPvpTalent]](?) -
: [[API LearnPvpTalents|LearnPvpTalents]](?) -
: [[API LearnTalent|LearnTalent]](?) -
: NOCOMBAT [[API LearnTalents|LearnTalents]](talentID1, talentID2, etc..) - Learns the talents listed.
: [[API PickupPvpTalent|PickupPvpTalent]](?) -
: [[API PickupTalent|PickupTalent]](talentID) - Grabs the selected talent spell for placement on an action bar.
: [[API RemovePvpTalent|RemovePvpTalent]](?) -
: NOCOMBAT [[API RemoveTalent|RemoveTalent]](talentID) - Removes the specified talent.

=== Targeting Functions ===
: PROTECTED [[API AssistUnit|AssistUnit]]("unit") - Instructs your character to assist the specified unit.
: PROTECTED [[API AttackTarget|AttackTarget]]() - Attacks the targetted unit.
: PROTECTED [[API ClearTarget|ClearTarget]]() - Clears the selected target.
: [[API ClickTargetTradeButton|ClickTargetTradeButton]](index)
: PROTECTED [[API TargetLastEnemy|TargetLastEnemy]]() - Selects the last targetted enemy as the current target.
: PROTECTED [[API TargetLastTarget|TargetLastTarget]]() - Selects the last target as the current target.
: PROTECTED [[API TargetNearestEnemy|TargetNearestEnemy]]([reverseFlag]) - Selects the nearest enemy as the current target.
: PROTECTED [[API TargetNearestEnemyPlayer|TargetNearestEnemyPlayer]]([reverseFlag]) - Selects the nearest enemy player as the current target.
: PROTECTED [[API TargetNearestFriend|TargetNearestFriend]]([reverseFlag]) - Selects the nearest friendly unit as the current target.
: PROTECTED [[API TargetNearestFriendPlayer|TargetNearestFriendPlayer]]([reverseFlag]) - Selects the nearest friendly player as the current target.
: PROTECTED [[API TargetNearestPartyMember|TargetNearestPartyMember]]() - Selects the nearest Party member as the current target.
: PROTECTED [[API TargetNearestRaidMember|TargetNearestRaidMember]]() - Selects the nearest Raid member as the current target.
: PROTECTED [[API TargetUnit|TargetUnit]]("unit") - Selects the specified unit as the current target.

=== Taxi Functions ===
These functions are related to the flight master taxi services.
: [[API CloseTaxiMap|CloseTaxiMap]]() - Closes the Flightpath Map.
: REMOVED UI [[API DrawRouteLine|DrawRouteLine]](texture, canvas, startx, starty, endx, endy, width, relPoint) - Draws a line.
: [[API GetAllTaxiNodes|GetAllTaxiNodes]]() -
: [[API GetTaxiBenchmarkMode|GetTaxiBenchmarkMode]]() -
: [[API GetTaxiMapID|GetTaxiMapID]]() -
: [[API GetNumRoutes|GetNumRoutes]](slot) - Gets the number of hops between current-slot and slot.
: [[API NumTaxiNodes|NumTaxiNodes]]() - Returns the number of nodes (flight paths) on an open taxi map.
: [[API SetTaxiBenchmarkMode|SetTaxiBenchmarkMode]]() -
: [[API SetTaxiMap|SetTaxiMap]](frame) - ?.
: [[API TakeTaxiNode|TakeTaxiNode]](slot) - Takes the named taxi node.
: [[API TaxiGetDestX|TaxiGetDestX]](slot, hop) - ?.
: [[API TaxiGetDestY|TaxiGetDestY]](slot, hop) - ?.
: [[API TaxiGetNodeSlot|TaxiGetNodeSlot]]() -
: [[API TaxiGetSrcX|TaxiGetSrcX]](slot, hop) - ?.
: [[API TaxiGetSrcY|TaxiGetSrcY]](slot, hop) - ?.
: REMOVED [[API TaxiNodeSetCurrent|TaxiNodeSetCurrent]](slot) - Renumbers slots based on new current slot.
: [[API TaxiIsDirectFlight|TaxiIsDirectFlight]]() -
: [[API TaxiNodeCost|TaxiNodeCost]](slot) - Returns the cost in copper of a node.
: [[API TaxiNodeGetType|TaxiNodeGetType]](slot) - Returns the status of a node.
: [[API TaxiNodeName|TaxiNodeName]](slot) - Returns the name of a node.
: [[API TaxiNodePosition|TaxiNodePosition]](slot) - Returns position (x,y) of node on the map.
: [[API TaxiRequestEarlyLanding|TaxiRequestEarlyLanding]]() -
: [[API UnitOnTaxi|UnitOnTaxi]]("unit") - Returns 1 if unit is on a taxi.

=== Timer Functions ===
: [[API C_Timer.After|C_Timer.After]](duration, callback) - Runs callback after given duration.
: UI [[API C_Timer.NewTicker|C_Timer.NewTicker]](duration, callback[, iterations]) - Runs callback multiple times iterating every given duration. (Cancelable)
: UI [[API C_Timer.NewTimer|C_Timer.NewTimer]](duration, callback) - Runs callback after given duration. (Cancelable)

=== Toggle Functions ===
: UI [[API ToggleBackpack|ToggleBackpack]]() - Toggles your backpack open/closed.
: UI [[API ToggleBag|ToggleBag]]([[bagId|bagID]]) - Opens or closes the specified bag.
: UI [[API ToggleCharacter|ToggleCharacter]](index) - Toggles the character pane to the specified frame.
: UI [[API ToggleFramerate|ToggleFramerate]] - Show/Hide the FPS.
: UI [[API ToggleFriendsFrame|ToggleFriendsFrame]]([tabNumber]) - Opens/closes the friends pane (possibly on a specific tab).
: PROTECTED UI [[API ToggleGameMenu|ToggleGameMenu]] - Opens/closes the game menu. Triggers protected functions.
: UI [[API ToggleHelpFrame|ToggleHelpFrame]] - Opens the Help Request frame.
: REMOVED UI [[API ToggleKeyRing|ToggleKeyRing]] - Opens/closes the key ring.
: UI [[API ToggleMinimap|ToggleMinimap]] - Turns the minimap display on/off.
: UI [[API TogglePVPUI|TogglePVPUI]] - Opens/closes the PvP frame.
: UI [[API ToggleSpellBook|ToggleSpellBook]]("bookType") - Shows the spellbook. Can show your spells or your pet's.
: UI [[API ToggleTalentFrame|ToggleTalentFrame]] - Opens the Talent frame.
: UI [[API ToggleAchievementFrame|ToggleAchievementFrame]] - Shows the achievements frame.

=== Toy Box ===
: REMOVED [[API C_ToyBox.ClearAllSourceTypesFiltered|C_ToyBox.ClearAllSourceTypesFiltered]]()
: REMOVED [[API C_ToyBox.FilterToys|C_ToyBox.FilterToys]]()
: REMOVED [[API C_ToyBox.GetFilterCollected|C_ToyBox.GetFilterCollected]]()
: REMOVED [[API C_ToyBox.GetFilterUncollected|C_ToyBox.GetFilterUncollected]]()
: [[API C_ToyBox.ForceToyRefilter|C_ToyBox.ForceToyRefilter]](?) -
: [[API C_ToyBox.GetCollectedShown|C_ToyBox.GetCollectedShown]](?) -
: [[API C_ToyBox.GetIsFavorite|C_ToyBox.GetIsFavorite]]()
: [[API C_ToyBox.GetNumFilteredToys|C_ToyBox.GetNumFilteredToys]]()
: [[API C_ToyBox.GetNumLearnedDisplayedToys|C_ToyBox.GetNumLearnedDisplayedToys]]()
: [[API C_ToyBox.GetNumTotalDisplayedToys|C_ToyBox.GetNumTotalDisplayedToys]]()
: [[API C_ToyBox.GetNumToys|C_ToyBox.GetNumToys]]()
: [[API C_ToyBox.GetToyFromIndex|C_ToyBox.GetToyFromIndex]]()
: [[API C_ToyBox.GetToyInfo|C_ToyBox.GetToyInfo]]()
: [[API C_ToyBox.GetToyLink|C_ToyBox.GetToyLink]]()
: [[API C_ToyBox.GetUncollectedShown|C_ToyBox.GetUncollectedShown]](?) -
: [[API C_ToyBox.HasFavorites|C_ToyBox.HasFavorites]]()
: [[API C_ToyBox.IsSourceTypeFilterChecked|C_ToyBox.IsSourceTypeFilterChecked]](?) -
: REMOVED [[API C_ToyBox.IsSourceTypeFiltered|C_ToyBox.IsSourceTypeFiltered]]()
: [[API C_ToyBox.IsToyUsable|C_ToyBox.IsToyUsable]]()
: [[API C_ToyBox.PickupToyBoxItem|C_ToyBox.PickupToyBoxItem]]()
: [[API C_ToyBox.SetAllSourceTypeFilters|C_ToyBox.SetAllSourceTypeFilters]](?) -
: [[API C_ToyBox.SetCollectedShown|C_ToyBox.SetCollectedShown]](?) -
: REMOVED [[API C_ToyBox.SetAllSourceTypesFiltered|C_ToyBox.SetAllSourceTypesFiltered]]()
: REMOVED [[API C_ToyBox.SetFilterCollected|C_ToyBox.SetFilterCollected]]()
: REMOVED [[API C_ToyBox.SetFilterSourceType|C_ToyBox.SetFilterSourceType]]()
: [[API C_ToyBox.SetFilterString|C_ToyBox.SetFilterString]]()
: REMOVED [[API C_ToyBox.SetFilterUncollected|C_ToyBox.SetFilterUncollected]]()
: [[API C_ToyBox.SetIsFavorite|C_ToyBox.SetIsFavorite]]()
: [[API C_ToyBox.SetSourceTypeFilter|C_ToyBox.SetSourceTypeFilter]](?) -
: [[API C_ToyBox.SetUncollectedShown|C_ToyBox.SetUncollectedShown]](?) -
: [[API PlayerHasToy|PlayerHasToy]]()
: [[API UseToy|UseToy]]()
: [[API UseToyByName|UseToyByName]]()

=== TradeSkill Functions ===
: [[API C_TradeSkillUI.AnyRecipeCategoriesFiltered|C_TradeSkillUI.AnyRecipeCategoriesFiltered]](?) -
: [[API C_TradeSkillUI.AreAnyInventorySlotsFiltered|C_TradeSkillUI.AreAnyInventorySlotsFiltered]](?) -
: [[API C_TradeSkillUI.CanObliterateCursorItem|C_TradeSkillUI.CanObliterateCursorItem]](?) -
: [[API C_TradeSkillUI.CanTradeSkillListLink|C_TradeSkillUI.CanTradeSkillListLink]](?) -
: [[API C_TradeSkillUI.ClearInventorySlotFilter|C_TradeSkillUI.ClearInventorySlotFilter]](?) -
: [[API C_TradeSkillUI.ClearPendingObliterateItem|C_TradeSkillUI.ClearPendingObliterateItem]](?) -
: [[API C_TradeSkillUI.ClearRecipeCategoryFilter|C_TradeSkillUI.ClearRecipeCategoryFilter]](?) -
: [[API C_TradeSkillUI.ClearRecipeSourceTypeFilter|C_TradeSkillUI.ClearRecipeSourceTypeFilter]](?) -
: [[API C_TradeSkillUI.CloseObliterumForge|C_TradeSkillUI.CloseObliterumForge]](?) -
: [[API C_TradeSkillUI.CloseTradeSkill|C_TradeSkillUI.CloseTradeSkill]](?) -
: [[API C_TradeSkillUI.CraftRecipe|C_TradeSkillUI.CraftRecipe]](?) -
: [[API C_TradeSkillUI.DropPendingObliterateItemFromCursor|C_TradeSkillUI.DropPendingObliterateItemFromCursor]](?) -
: [[API C_TradeSkillUI.GetAllFilterableInventorySlots|C_TradeSkillUI.GetAllFilterableInventorySlots]](?) -
: [[API C_TradeSkillUI.GetAllRecipeIDs|C_TradeSkillUI.GetAllRecipeIDs]]() - Returns a table containing all the recipe IDs for the current trade skill.
: [[API C_TradeSkillUI.GetCategories|C_TradeSkillUI.GetCategories]](?) -
: [[API C_TradeSkillUI.GetCategoryInfo|C_TradeSkillUI.GetCategoryInfo]](?) -
: [[API C_TradeSkillUI.GetFilterableInventorySlots|C_TradeSkillUI.GetFilterableInventorySlots]](?) -
: [[API C_TradeSkillUI.GetFilteredRecipeIDs|C_TradeSkillUI.GetFilteredRecipeIDs]](?) -
: [[API C_TradeSkillUI.GetObliterateSpellID|C_TradeSkillUI.GetObliterateSpellID]](?) -
: [[API C_TradeSkillUI.GetOnlyShowLearnedRecipes|C_TradeSkillUI.GetOnlyShowLearnedRecipes]](?) -
: [[API C_TradeSkillUI.GetOnlyShowMakeableRecipes|C_TradeSkillUI.GetOnlyShowMakeableRecipes]](?) -
: [[API C_TradeSkillUI.GetOnlyShowSkillUpRecipes|C_TradeSkillUI.GetOnlyShowSkillUpRecipes]](?) -
: [[API C_TradeSkillUI.GetOnlyShowUnlearnedRecipes|C_TradeSkillUI.GetOnlyShowUnlearnedRecipes]](?) -
: [[API C_TradeSkillUI.GetPendingObliterateItemID|C_TradeSkillUI.GetPendingObliterateItemID]](?) -
: [[API C_TradeSkillUI.GetPendingObliterateItemLink|C_TradeSkillUI.GetPendingObliterateItemLink]](?) -
: [[API C_TradeSkillUI.GetRecipeCooldown|C_TradeSkillUI.GetRecipeCooldown]](?) -
: [[API C_TradeSkillUI.GetRecipeDescription|C_TradeSkillUI.GetRecipeDescription]](?) -
: [[API C_TradeSkillUI.GetRecipeInfo|C_TradeSkillUI.GetRecipeInfo]](recipeID[, returnTable]) - Returns information for a recipe.
: [[API C_TradeSkillUI.GetRecipeItemLevelFilter|C_TradeSkillUI.GetRecipeItemLevelFilter]](?) -
: [[API C_TradeSkillUI.GetRecipeItemLink|C_TradeSkillUI.GetRecipeItemLink]](?) -
: [[API C_TradeSkillUI.GetRecipeItemNameFilter|C_TradeSkillUI.GetRecipeItemNameFilter]](?) -
: [[API C_TradeSkillUI.GetRecipeLink|C_TradeSkillUI.GetRecipeLink]](?) -
: [[API C_TradeSkillUI.GetRecipeNumItemsProduced|C_TradeSkillUI.GetRecipeNumItemsProduced]](?) -
: [[API C_TradeSkillUI.GetRecipeNumReagents|C_TradeSkillUI.GetRecipeNumReagents]](recipeID) - Returns the number of distinct reagents needed for the specified recipe.
: [[API C_TradeSkillUI.GetRecipeReagentInfo|C_TradeSkillUI.GetRecipeReagentInfo]](recipeID, reagentIndex) - Returns the information for a reagent needed by a recipe.
: [[API C_TradeSkillUI.GetRecipeReagentItemLink|C_TradeSkillUI.GetRecipeReagentItemLink]](recipeId, reagentIndex) - Returns a link for a reagent needed by a recipe.
: [[API C_TradeSkillUI.GetRecipeRepeatCount|C_TradeSkillUI.GetRecipeRepeatCount]](?) -
: [[API C_TradeSkillUI.GetRecipeSourceText|C_TradeSkillUI.GetRecipeSourceText]](?) -
: [[API C_TradeSkillUI.GetRecipeTools|C_TradeSkillUI.GetRecipeTools]](?) -
: [[API C_TradeSkillUI.GetSubCategories|C_TradeSkillUI.GetSubCategories]](?) -
: [[API C_TradeSkillUI.GetTradeSkillLine|C_TradeSkillUI.GetTradeSkillLine]](?) -
: [[API C_TradeSkillUI.GetTradeSkillLineForRecipe|C_TradeSkillUI.GetTradeSkillLineForRecipe]](?) -
: [[API C_TradeSkillUI.GetTradeSkillListLink|C_TradeSkillUI.GetTradeSkillListLink]](?) -
: [[API C_TradeSkillUI.GetTradeSkillTexture|C_TradeSkillUI.GetTradeSkillTexture]](?) -
: [[API C_TradeSkillUI.IsAnyRecipeFromSource|C_TradeSkillUI.IsAnyRecipeFromSource]](?) -
: [[API C_TradeSkillUI.IsDataSourceChanging|C_TradeSkillUI.IsDataSourceChanging]](?) -
: [[API C_TradeSkillUI.IsInventorySlotFiltered|C_TradeSkillUI.IsInventorySlotFiltered]](?) -
: [[API C_TradeSkillUI.IsNPCCrafting|C_TradeSkillUI.IsNPCCrafting]]() - Checks if the Trade Skill UI is open for crafting by an NPC.
: [[API C_TradeSkillUI.IsRecipeCategoryFiltered|C_TradeSkillUI.IsRecipeCategoryFiltered]](?) -
: [[API C_TradeSkillUI.IsRecipeFavorite|C_TradeSkillUI.IsRecipeFavorite]](?) -
: [[API C_TradeSkillUI.IsRecipeRepeating|C_TradeSkillUI.IsRecipeRepeating]](?) -
: [[API C_TradeSkillUI.IsRecipeSearchInProgress|C_TradeSkillUI.IsRecipeSearchInProgress]](?) -
: [[API C_TradeSkillUI.IsRecipeSourceTypeFiltered|C_TradeSkillUI.IsRecipeSourceTypeFiltered]](?) -
: [[API C_TradeSkillUI.IsTradeSkillGuild|C_TradeSkillUI.IsTradeSkillGuild]]() - Checks if the Trade Skill UI is open for a profession in the guild.
: [[API C_TradeSkillUI.IsTradeSkillLinked|C_TradeSkillUI.IsTradeSkillLinked]]() - Checks if the Trade Skill UI is open for a profession linked by another character.
: [[API C_TradeSkillUI.IsTradeSkillReady|C_TradeSkillUI.IsTradeSkillReady]](?) -
: [[API C_TradeSkillUI.ObliterateItem|C_TradeSkillUI.ObliterateItem]](?) -
: [[API C_TradeSkillUI.OpenTradeSkill|C_TradeSkillUI.OpenTradeSkill]](?) -
: [[API C_TradeSkillUI.SetInventorySlotFilter|C_TradeSkillUI.SetInventorySlotFilter]](?) -
: [[API C_TradeSkillUI.SetOnlyShowLearnedRecipes|C_TradeSkillUI.SetOnlyShowLearnedRecipes]](?) -
: [[API C_TradeSkillUI.SetOnlyShowMakeableRecipes|C_TradeSkillUI.SetOnlyShowMakeableRecipes]](?) -
: [[API C_TradeSkillUI.SetOnlyShowSkillUpRecipes|C_TradeSkillUI.SetOnlyShowSkillUpRecipes]](?) -
: [[API C_TradeSkillUI.SetOnlyShowUnlearnedRecipes|C_TradeSkillUI.SetOnlyShowUnlearnedRecipes]](?) -
: [[API C_TradeSkillUI.SetRecipeCategoryFilter|C_TradeSkillUI.SetRecipeCategoryFilter]](?) -
: [[API C_TradeSkillUI.SetRecipeFavorite|C_TradeSkillUI.SetRecipeFavorite]](?) -
: [[API C_TradeSkillUI.SetRecipeItemLevelFilter|C_TradeSkillUI.SetRecipeItemLevelFilter]](?) -
: [[API C_TradeSkillUI.SetRecipeItemNameFilter|C_TradeSkillUI.SetRecipeItemNameFilter]](?) -
: [[API C_TradeSkillUI.SetRecipeRepeatCount|C_TradeSkillUI.SetRecipeRepeatCount]](?) -
: [[API C_TradeSkillUI.SetRecipeSourceTypeFilter|C_TradeSkillUI.SetRecipeSourceTypeFilter]](?) -
: [[API C_TradeSkillUI.StopRecipeRepeat|C_TradeSkillUI.StopRecipeRepeat]](?) -
: REMOVED [[API CloseTradeSkill|CloseTradeSkill]]() - Closes an open trade skill window.
: REMOVED [[API CollapseTradeSkillSubClass|CollapseTradeSkillSubClass]](index) - Collapses the specified subclass header row.
: REMOVED [[API DoTradeSkill|DoTradeSkill]](index[, repeatTimes]) - Performs the tradeskill a specified # of times.
: REMOVED [[API ExpandTradeSkillSubClass|ExpandTradeSkillSubClass]](index) - Expands the specified subclass header row.
: REMOVED [[API GetFirstTradeSkill|GetFirstTradeSkill]]() - Returns the index of the first non-header trade skill entry.
: REMOVED [[API GetNumTradeSkills|GetNumTradeSkills]]() - Get the number of trade skill entries (including headers).
: REMOVED [[API GetTradeSkillCooldown|GetTradeSkillCooldown]](index) - Returns the number of seconds left for a skill to cooldown.
: REMOVED [[API GetTradeSkillDescription|GetTradeSkillDescription]](index) - Returns the description text of the indicated trade skill.
: REMOVED [[API GetTradeSkillIcon|GetTradeSkillIcon]](index) - Returns the texture name of a tradeskill's icon.
: REMOVED [[API GetTradeSkillInfo|GetTradeSkillInfo]](index) - Retrieves information about a specific trade skill.
: REMOVED [[API GetTradeSkillInvSlotFilter|GetTradeSkillInvSlotFilter]](slotIndex) - Returns 1 if items corresponding to slotIndex are currently visible, otherwise nil.
: REMOVED [[API GetTradeSkillInvSlots|GetTradeSkillInvSlots]]() - Returns a list of the available inventory slot types.
: REMOVED [[API GetTradeSkillItemLink|GetTradeSkillItemLink]](index) - Returns the [[itemLink]] for a trade skill item.
: REMOVED [[API GetTradeSkillLine|GetTradeSkillLine]]() - Returns information about the selected skill line.
: REMOVED [[API GetTradeSkillListLink|GetTradeSkillListLink]]() - Returns the [[TradeSkillLink]] for a trade skill.
: REMOVED [[API GetTradeSkillNumMade|GetTradeSkillNumMade]](index) - Gets the number of items made in a single use of a skill.
: REMOVED [[API GetTradeSkillNumReagents|GetTradeSkillNumReagents]](tradeSkillRecipeId) - Returns the number of different reagents required.
: REMOVED [[API GetTradeSkillReagentInfo|GetTradeSkillReagentInfo]](tradeSkillRecipeId, reagentId) - Returns data on the reagent, including a count of the player's inventory.
: REMOVED [[API GetTradeSkillReagentItemLink|GetTradeSkillReagentItemLink]](index, reagentId) - Returns the [[itemLink]] for one of the reagents needed to craft the given item
: REMOVED [[API GetTradeSkillRecipeLink|GetTradeSkillRecipeLink]](index) - Returns the [[EnchantLink]] for a trade skill.
: REMOVED [[API GetTradeSkillSelectionIndex|GetTradeSkillSelectionIndex]]() - Returns the Id of the currently selected trade skill, 0 if none selected.
: REMOVED [[API GetTradeSkillSubClasses|GetTradeSkillSubClasses]]() - Returns a list of the valid subclasses.
: REMOVED [[API GetTradeSkillTools|GetTradeSkillTools]](index) - Returns information about the tools needed for a tradeskill.
: REMOVED [[API GetTradeskillRepeatCount|GetTradeskillRepeatCount]]() - Returns the number of times the current item is being crafted.
: [[API IsTradeskillTrainer|IsTradeskillTrainer]]() - Returns 1 if trainer is for a tradeskill.
: REMOVED [[API IsTradeSkillLinked|IsTradeSkillLinked]]() - Returns true if you're inspecting a tradeskill link rather then looking at your own tradeskills
: REMOVED [[API SelectTradeSkill|SelectTradeSkill]](index) - Select a specific trade skill in the list.
: REMOVED [[API SetTradeSkillInvSlotFilter|SetTradeSkillInvSlotFilter]](slotIndex, onOff[, exclusive] ) - Set the inventory slot type filter.
: REMOVED [[API StopTradeSkillRepeat|StopTradeSkillRepeat]]() - Stops creating additional queued items.
: REMOVED [[API TradeSkillOnlyShowMakeable|TradeSkillOnlyShowMakeable]](onlyMakable) - Controls whether only recipes you have the reagents to craft are shown.

=== Tracking Functions ===
: [[API CanTrackBattlePets|CanTrackBattlePets]]() - Returns whether the player can track battle pets.
: [[API ClearAllTracking|ClearAllTracking]]()
: [[API GetNumTrackingTypes|GetNumTrackingTypes]]() - Returns number of available tracking methods.
: [[API GetTrackingInfo|GetTrackingInfo]](id) - Retrieves tracking information from specified id.
: [[API IsTrackingBattlePets|IsTrackingBattlePets]]() - Returns whether the player is currently tracking battle pets.
: [[API SetTracking|SetTracking]](id,enabled) - Enables or disables a tracking method.

=== Trading Functions ===
: HW [[API AcceptTrade|AcceptTrade]]() - A pending trade will be accepted.
: [[API AddTradeMoney|AddTradeMoney]]() - Adds the money dropped into the player's trade frame.
: [[API CancelTrade|CancelTrade]]() - Declines the offer to trade with the other player.
: [[API CancelTradeAccept|CancelTradeAccept]]() - Cancels the trade attempt which required an accept.
: [[API ClickTargetTradeButton|ClickTargetTradeButton]](index)
: [[API ClickTradeButton|ClickTradeButton]](index) - Equivalent of a mouseclick on the trade window buttons [1-7]
: [[API CloseTrade|CloseTrade]]() - Closes the trade.
: [[API GetPlayerTradeMoney|GetPlayerTradeMoney]] - Returns the amount of money the player has in the trade window.
: [[API GetTargetTradeMoney|GetTargetTradeMoney]] - Returns the amount of money in the trade frame of the target player.
: [[API GetTradePlayerItemInfo|GetTradePlayerItemInfo]](id) - Returns information about a trade item.
: [[API GetTradePlayerItemLink|GetTradePlayerItemLink]](id) - Returns an [[itemLink]] for the given item in your side of the trade window (if open)
: [[API GetTradeTargetItemInfo|GetTradeTargetItemInfo]](id) - Returns information about a trade item.
: [[API GetTradeTargetItemLink|GetTradeTargetItemLink]](id) - Returns an [[itemLink]] for the given item in the other player's side of the trade window (if open)
: [[API InitiateTrade|InitiateTrade]](UnitId) - Asks the specified unit to trade.
: [[API PickupPlayerMoney|PickupPlayerMoney]](copper) - Picks up an amount of money from the player.
: [[API PickupTradeMoney|PickupTradeMoney]](copper) - Picks up an amount of money from the player's trade offer.
: [[API SetTradeMoney|SetTradeMoney]](copper) - Sets the amount of money offered as part of the player's trade offer.
: [[API ReplaceTradeEnchant|ReplaceTradeEnchant]]() - Confirm the replacement of an enchantment via trade.

=== Training Functions ===
: [[API BuyTrainerService|BuyTrainerService]](index) - Used for buying new/upgrading professions, profession items and class skills.
: [[API CloseTrainer|CloseTrainer]]() - Closes the trainer window.
: [[API GetNumTrainerServices|GetNumTrainerServices]]() - Get the number of the trainer services.
: [[API GetTrainerGreetingText|GetTrainerGreetingText]]() - Get the trainer's greeting text.
: [[API GetTrainerSelectionIndex|GetTrainerSelectionIndex]]() - Get the index of the selected trainer service.
: [[API GetTrainerServiceAbilityReq|GetTrainerServiceAbilityReq]](trainerIndex,reqIndex) - Used for displaying the requirements to learn a new profession, profession skill or class skill.
: [[API GetTrainerServiceCost|GetTrainerServiceCost]](index) - Returns the cost of a specific trainer service.
: [[API GetTrainerServiceDescription|GetTrainerServiceDescription]](index) - Returns the description of a specific trainer service.
: [[API GetTrainerServiceIcon|GetTrainerServiceIcon]](index) - Returns icon texture for a trainer service.
: [[API GetTrainerServiceInfo|GetTrainerServiceInfo]](index) - Returns information about a trainer service.
: [[API GetTrainerServiceItemLink|GetTrainerServiceItemLink]](index) - Returns an item link for a trainer service.
: [[API GetTrainerServiceLevelReq|GetTrainerServiceLevelReq]](index) - Get the required level to learn the skill.
: [[API GetTrainerServiceNumAbilityReq|GetTrainerServiceNumAbilityReq]] - Get the maximum number of requirements that [[API GetTrainerServiceAbilityReq|GetTrainerServiceAbilityReq]]() has.
: [[API GetTrainerServiceSkillLine|GetTrainerServiceSkillLine]](index) - ?.
: [[API GetTrainerServiceSkillReq|GetTrainerServiceSkillReq]](index) - Returns a String and Variable for the requirements of a specific trainer service.
: [[API GetTrainerServiceTypeFilter|GetTrainerServiceTypeFilter]]("filter") - Returns the status of a skill filter in the trainer window.
: [[API IsTradeskillTrainer|IsTradeskillTrainer]]() - Returns 1 if trainer is for a tradeskill.
: [[API OpenTrainer|OpenTrainer]]() - ?.
: [[API SelectTrainerService|SelectTrainerService]] - ?.
: [[API SetTrainerServiceTypeFilter|SetTrainerServiceTypeFilter]]("filter",state) - Sets the status of a skill filter in the trainer window.

=== Transmogrification Functions ===
[[Transmogrification]] was added in [[Patch 4.3.0]].
: REMOVED [[API ApplyTransmogrifications|ApplyTransmogrifications]]() - Applies all pending transmogrifications, and pays for the cost
: REMOVED [[API CanTransmogrifyItemWithItem|CanTransmogrifyItemWithItem]](targetItem, sourceItem) - Returns whether an item can be transmogrified to look like another item.
: REMOVED [[API ClearTransmogrifySlot|ClearTransmogrifySlot]]([slotId]) - Clears the specified transmogrify slot
: REMOVED [[API ClickTransmogrifySlot|ClickTransmogrifySlot]](slotId) - Facilitates clicking transmogrify slots depending on transmogrify state
: REMOVED [[API CloseTransmogrifyFrame|CloseTransmogrifyFrame]]()
: REMOVED [[API GetItemTransmogrifyInfo|GetItemTransmogrifyInfo]](itemId) - Returns how an item can interact with transmogrification.
: REMOVED [[API GetTransmogrifyCost|GetTransmogrifyCost]]() - Returns <tt>cost, numChanges</tt>
: REMOVED [[API GetTransmogrifySlotInfo|GetTransmogrifySlotInfo]](slotId) - Returns <tt>isTransmogrified, canTransmogrify, cannotTransmogrifyReason, hasPending, hasUndo, visibleItemID, textureName</tt>
: REMOVED [[API UseItemForTransmogrify|UseItemForTransmogrify]](bag, slot, id)
: REMOVED [[API UseVoidItemForTransmogrify|UseVoidItemForTransmogrify]](voidItemslot, inventorySlot) - Copies the appearance of an item in void storage to an item on your character.
: REMOVED [[API ValidateTransmogrifications|ValidateTransmogrifications]]()
: [[API C_Transmog.ApplyAllPending|C_Transmog.ApplyAllPending]](?) -
: [[API C_Transmog.CanTransmogItemWithItem|C_Transmog.CanTransmogItemWithItem]](?) -
: [[API C_Transmog.ClearPending|C_Transmog.ClearPending]](?) -
: [[API C_Transmog.Close|C_Transmog.Close]](?) -
: [[API C_Transmog.GetApplyWarnings|C_Transmog.GetApplyWarnings]](?) -
: [[API C_Transmog.GetCost|C_Transmog.GetCost]](?) -
: [[API C_Transmog.GetItemInfo|C_Transmog.GetItemInfo]](?) -
: [[API C_Transmog.GetSlotInfo|C_Transmog.GetSlotInfo]](?) -
: [[API C_Transmog.GetSlotUseError|C_Transmog.GetSlotUseError]](?) -
: [[API C_Transmog.GetSlotVisualInfo|C_Transmog.GetSlotVisualInfo]](?) -
: [[API C_Transmog.LoadOutfit|C_Transmog.LoadOutfit]](?) -
: [[API C_Transmog.LoadSources|C_Transmog.LoadSources]](?) -
: [[API C_Transmog.SetPending|C_Transmog.SetPending]](?) -
: [[API C_Transmog.ValidateAllPending|C_Transmog.ValidateAllPending]](?) -
: [[API C_TransmogCollection.CanSetFavoriteInCategory|C_TransmogCollection.CanSetFavoriteInCategory]](?) -
: [[API C_TransmogCollection.ClearNewAppearance|C_TransmogCollection.ClearNewAppearance]](?) -
: [[API C_TransmogCollection.ClearSearch|C_TransmogCollection.ClearSearch]](?) -
: [[API C_TransmogCollection.DeleteOutfit|C_TransmogCollection.DeleteOutfit]](?) -
: [[API C_TransmogCollection.EndSearch|C_TransmogCollection.EndSearch]](?) -
: [[API C_TransmogCollection.GetAppearanceCameraID|C_TransmogCollection.GetAppearanceCameraID]](?) -
: [[API C_TransmogCollection.GetAppearanceCameraIDBySource|C_TransmogCollection.GetAppearanceCameraIDBySource]](?) -
: [[API C_TransmogCollection.GetAppearanceInfoBySource|C_TransmogCollection.GetAppearanceInfoBySource]](?) -
: [[API C_TransmogCollection.GetAppearanceSourceDrops|C_TransmogCollection.GetAppearanceSourceDrops]](?) -
: [[API C_TransmogCollection.GetAppearanceSourceInfo|C_TransmogCollection.GetAppearanceSourceInfo]](?) -
: [[API C_TransmogCollection.GetAppearanceSources|C_TransmogCollection.GetAppearanceSources]](?) -
: [[API C_TransmogCollection.GetCategoryAppearances|C_TransmogCollection.GetCategoryAppearances]](?) -
: [[API C_TransmogCollection.GetCategoryCollectedCount|C_TransmogCollection.GetCategoryCollectedCount]](?) -
: [[API C_TransmogCollection.GetCategoryInfo|C_TransmogCollection.GetCategoryInfo]](?) -
: [[API C_TransmogCollection.GetCategoryTotal|C_TransmogCollection.GetCategoryTotal]](?) -
: [[API C_TransmogCollection.GetCollectedShown|C_TransmogCollection.GetCollectedShown]](?) -
: [[API C_TransmogCollection.GetIllusionFallbackWeaponSource|C_TransmogCollection.GetIllusionFallbackWeaponSource]](?) -
: [[API C_TransmogCollection.GetIllusionSourceInfo|C_TransmogCollection.GetIllusionSourceInfo]](?) -
: [[API C_TransmogCollection.GetIllusions|C_TransmogCollection.GetIllusions]](?) -
: [[API C_TransmogCollection.GetInspectSources|C_TransmogCollection.GetInspectSources]](?) -
: [[API C_TransmogCollection.GetIsAppearanceFavorite|C_TransmogCollection.GetIsAppearanceFavorite]](?) -
: [[API C_TransmogCollection.GetLatestAppearance|C_TransmogCollection.GetLatestAppearance]](?) -
: [[API C_TransmogCollection.GetNumMaxOutfits|C_TransmogCollection.GetNumMaxOutfits]](?) -
: [[API C_TransmogCollection.GetNumTransmogSources|C_TransmogCollection.GetNumTransmogSources]](?) -
: [[API C_TransmogCollection.GetOutfitName|C_TransmogCollection.GetOutfitName]](?) -
: [[API C_TransmogCollection.GetOutfitSources|C_TransmogCollection.GetOutfitSources]](?) -
: [[API C_TransmogCollection.GetOutfits|C_TransmogCollection.GetOutfits]](?) -
: [[API C_TransmogCollection.GetShowMissingSourceInItemTooltips|C_TransmogCollection.GetShowMissingSourceInItemTooltips]](?) -
: [[API C_TransmogCollection.GetUncollectedShown|C_TransmogCollection.GetUncollectedShown]](?) -
: [[API C_TransmogCollection.HasFavorites|C_TransmogCollection.HasFavorites]](?) -
: [[API C_TransmogCollection.IsCategoryValidForItem|C_TransmogCollection.IsCategoryValidForItem]](?) -
: [[API C_TransmogCollection.IsNewAppearance|C_TransmogCollection.IsNewAppearance]](?) -
: [[API C_TransmogCollection.IsSearchDBLoading|C_TransmogCollection.IsSearchDBLoading]](?) -
: [[API C_TransmogCollection.IsSearchInProgress|C_TransmogCollection.IsSearchInProgress]](?) -
: [[API C_TransmogCollection.IsSourceTypeFilterChecked|C_TransmogCollection.IsSourceTypeFilterChecked]](?) -
: [[API C_TransmogCollection.ModifyOutfit|C_TransmogCollection.ModifyOutfit]](?) -
: [[API C_TransmogCollection.PlayerCanCollectSource|C_TransmogCollection.PlayerCanCollectSource]](?) -
: [[API C_TransmogCollection.PlayerHasTransmog|C_TransmogCollection.PlayerHasTransmog]](?) -
: [[API C_TransmogCollection.PlayerHasTransmogItemModifiedAppearance|C_TransmogCollection.PlayerHasTransmogItemModifiedAppearance]](?) -
: [[API C_TransmogCollection.PlayerKnowsSource|C_TransmogCollection.PlayerKnowsSource]](?) -
: [[API C_TransmogCollection.SaveOutfit|C_TransmogCollection.SaveOutfit]](?) -
: [[API C_TransmogCollection.SearchProgress|C_TransmogCollection.SearchProgress]](?) -
: [[API C_TransmogCollection.SearchSize|C_TransmogCollection.SearchSize]](?) -
: [[API C_TransmogCollection.SetAllSourceTypeFilters|C_TransmogCollection.SetAllSourceTypeFilters]](?) -
: [[API C_TransmogCollection.SetCollectedShown|C_TransmogCollection.SetCollectedShown]](?) -
: [[API C_TransmogCollection.SetFilterCategory|C_TransmogCollection.SetFilterCategory]](?) -
: [[API C_TransmogCollection.SetIsAppearanceFavorite|C_TransmogCollection.SetIsAppearanceFavorite]](?) -
: [[API C_TransmogCollection.SetSearch|C_TransmogCollection.SetSearch]](?) -
: [[API C_TransmogCollection.SetShowMissingSourceInItemTooltips|C_TransmogCollection.SetShowMissingSourceInItemTooltips]](?) -
: [[API C_TransmogCollection.SetSourceTypeFilter|C_TransmogCollection.SetSourceTypeFilter]](?) -
: [[API C_TransmogCollection.SetUncollectedShown|C_TransmogCollection.SetUncollectedShown]](?) -
: [[API C_TransmogCollection.UpdateUsableAppearances|C_TransmogCollection.UpdateUsableAppearances]](?) -

=== Unit Functions ===
These are functions which act on one or more units. Units are identified by [[UnitId]]s.
: PROTECTED [[API AssistUnit|AssistUnit]]("unit") - Instructs your character to assist the specified unit.
: [[API CheckInteractDistance|CheckInteractDistance]]("unit",distIndex)
: PROTECTED [[API ClearFocus|ClearFocus]]() - Removes any focus you may have set.
: [[API DropItemOnUnit|DropItemOnUnit]]("unit") - Drops an item from the cursor onto a unit.
: [[API FillLocalizedClassList|FillLocalizedClassList]](classTable[, isFemale]) - Fills table with localized class names.
: PROTECTED [[API FocusUnit|FocusUnit]]("unit") - Sets your unit for focus. -- Protected with Patch 2.0!
: [[API FollowUnit|FollowUnit]]("unit") - Follow an ally with the specified UnitID
: [[API GetPlayerInfoByGUID|GetPlayerInfoByGUID]]("guid") - Added in 3.2, returns race, class, sex about the guid (client must have seen the guid)
: [[API GetThreatStatusColor|GetThreatStatusColor]](status) - Returns RGB values for a given UnitThreatSituation return value.
: UI [[API GetUnitName|GetUnitName]]("unit", showServerName) - Returns a string with the unit's name and realm name if applicable.
: [[API GetUnitPitch|GetUnitPitch]]("unit") - Returns the moving pitch of the unit. (added in 3.0.2)
: [[API GetUnitSpeed|GetUnitSpeed]]("unit") - Returns the moving speed of the unit. (added in 3.0.2)
: [[API InviteUnit|InviteUnit]]("name" or "unit") - Invites the specified player to the group you are currently in. (added in 2.0)
: [[API IsUnitOnQuest|IsUnitOnQuest]](questIndex, "unit") - Determine if the specified unit is on the given quest.
: [[API SetPortraitTexture|SetPortraitTexture]](texture,"unit") - Paint a Texture object with the specified unit's portrait.
: [[API SetPortraitToTexture|SetPortraitToTexture]](texture or "texture", "texturePath") - Sets the texture to be displayed from a file applying a circular opacity mask making it look round like portraits.
: [[API SpellCanTargetUnit|SpellCanTargetUnit]]("unit") - Returns true if the spell awaiting target selection can be cast on the specified unit.
: PROTECTED [[API SpellTargetUnit|SpellTargetUnit]]("unit") - Casts the spell awaiting target selection on the specified unit.
: PROTECTED [[API TargetUnit|TargetUnit]]("unit" or "name" [, exactMatch]) - Selects the specified unit as the current target. -- Protected with Patch 2.0!
: [[API UnitAffectingCombat|UnitAffectingCombat]]("unit") - Determine if the unit is in combat or has aggro. (returns nil if "false" and 1 if "true")
: [[API UnitAlternatePowerCounterInfo|UnitAlternatePowerCounterInfo]](?) -
: [[API UnitAlternatePowerInfo|UnitAlternatePowerInfo]](?) -
: [[API UnitAlternatePowerTextureInfo|UnitAlternatePowerTextureInfo]](?) -
: [[API UnitArmor|UnitArmor]]("unit") - Returns the armor statistics relevant to the specified unit.
: [[API UnitAttackBothHands|UnitAttackBothHands]]("unit") - Returns information about the unit's melee attacks.
: [[API UnitAttackPower|UnitAttackPower]]("unit") - Returns the unit's melee attack power and modifiers.
: [[API UnitAttackSpeed|UnitAttackSpeed]]("unit") - Returns the unit's melee attack speed for each hand.
: [[API UnitAura|UnitAura]]("unit", index [, filter]) - Returns info about buffs and debuffs of a unit.
: [API UnitBattlePetLevel|UnitBattlePetLevel]](?) -
: [[API UnitBattlePetSpeciesID|UnitBattlePetSpeciesID]](?) -
: [[API UnitBattlePetType|UnitBattlePetType]](?) -
: [[API UnitBonusArmor|UnitBonusArmor]](?) -
: [[API UnitBuff|UnitBuff]]("unit", index [,raidFilter]) - Retrieves info about a buff of a certain unit. (Updated in 2.0)
: [[API UnitCanAssist|UnitCanAssist]]("unit", "otherUnit") - Indicates whether the first unit can assist the second unit.
: [[API UnitCanAttack|UnitCanAttack]]("unit", "otherUnit") - Returns true if the first unit can attack the second, false otherwise.
: [[API UnitCanCooperate|UnitCanCooperate]]("unit", "otherUnit") - Returns true if the first unit can cooperate with the second, false otherwise.
: [[API UnitCanPetBattle|UnitCanPetBattle]](?) -
: [[API UnitClass|UnitClass]]("unit") - Returns the class name of the specified unit (e.g., "Warrior" or "Shaman").
: [[API UnitClassBase|UnitClassBase]](?) -
: [[API UnitClassification|UnitClassification]]("unit") - Returns the classification of the specified unit (e.g., "elite" or "worldboss").
: [[API UnitCreatureFamily|UnitCreatureFamily]]("unit") - Returns the type of creature of the specified unit (e.g., "Crab").
: [[API UnitCreatureType|UnitCreatureType]]("unit") - Returns the classification type of creature of the specified unit (e.g., "Beast").
: [[API UnitDamage|UnitDamage]]("unit") - Returns the damage statistics relevant to the specified unit.
: [[API UnitDebuff|UnitDebuff]]("unit", index [,raidFilter]) - Retrieves info about a debuff of a certain unit. (Updated in 2.0)
: [[API UnitDefense|UnitDefense]]("unit") - Returns the base defense skill of the specified unit.
: [[API UnitDetailedThreatSituation|UnitDetailedThreatSituation]]("unit", "unitMob") - Returns detailed information about the specified unit's threat on a mob. (added in [[Patch 3.0]])
: [[API UnitDistanceSquared|UnitDistanceSquared]](unit") - Returns the squared distance to a unit in your group
: [[API UnitEffectiveLevel|UnitEffectiveLevel]](?) -
: [[API UnitExists|UnitExists]]("unit") - Returns 1 if the specified unit exists, nil otherwise.
: [[API UnitFactionGroup|UnitFactionGroup]]("unit") - Returns the faction group id and name of the specified unit. (eg. "Alliance") - string returned is localization-independent (used in filepath)
: [[API UnitFullName|UnitFullName]](?) -
: [[API UnitGetAvailableRoles|UnitGetAvailableRoles]](?) -
: [[API UnitGetIncomingHeals|UnitGetIncomingHeals]]("unit"[, "healer"]) - Returns the predicted heals cast on the specified unit.
: [[API UnitGetTotalAbsorbs|UnitGetTotalAbsorbs]]("unit") - Returns the total amount of damage the unit can absorb before losing health.
: [[API UnitGetTotalHealAbsorbs|UnitGetTotalHealAbsorbs]](?) -
: [[API UnitGroupRolesAssigned|UnitGroupRolesAssigned]]("unit") - Returns the assigned role in a group formed via the Dungeon Finder Tool. (added in [[Patch 3.3]])
: [[API UnitGUID|UnitGUID]]("unit") - Returns the GUID as a string for the specified unit matching the GUIDs used by the new combat logs. (added in [[Patch 2.4]])
: [[API UnitHPPerStamina|UnitHPPerStamina]](?) -
: [[API UnitHasIncomingResurrection|UnitHasIncomingResurrection]]("unit") - Returns whether the unit is currently being resurrected. ([[Patch 4.2.0]])
: [[API UnitHasLFGDeserter|UnitHasLFGDeserter]]("unit") - Returns whether the unit is currently unable to use the dungeon finder due to leaving a group prematurely. (3.3.3)
: [[API UnitHasLFGRandomCooldown|UnitHasLFGRandomCooldown]]("unit") - Returns whether the unit is currently under the effects of the random dungeon cooldown. (3.3.3)
: [[API UnitHasRelicSlot|UnitHasRelicSlot]]("unit")
: [[API UnitHasVehiclePlayerFrameUI|UnitHasVehiclePlayerFrameUI]](?) -
: [[API UnitHealth|UnitHealth]]("unit") - Returns the current health, in points, of the specified unit.
: [[API UnitHealthMax|UnitHealthMax]]("unit") - Returns the maximum health, in points, of the specified unit.
: [[API UnitHonor|UnitHonor]](?) -
: [[API UnitHonorLevel|UnitHonorLevel]](?) -
: [[API UnitHonorMax|UnitHonorMax]](?) -
: [[API UnitInBattleground|UnitInBattleground]]("unit") - Returns the unit index if the unit is in your battleground, nil otherwise.
: [[API UnitInOtherParty|UnitInOtherParty]](?) -
: [[API UnitInParty|UnitInParty]]("unit") - Returns true if the unit is a member of your party.
: [[API UnitInPhase|UnitInPhase]](?) -
: [[API UnitInRaid|UnitInRaid]]("unit") - Returns the unit index if the unit is in your raid/battlegroud, nil otherwise.
: [[API UnitIsInMyGuild|UnitIsInMyGuild]]("unit") - Returns whether the specified unit is in the same guild as the player's character.
: [[API UnitInRange|UnitInRange]]("unit") - Returns true if the unit (party or raid only) is in range of a typical spell such as flash heal. (added in [[Patch 2.4]]))
: [[API UnitInVehicleHidesPetFrame|UnitInVehicleHidesPetFrame]](?) -
: [[API UnitIsAFK|UnitIsAFK]]("unit") - Only works for friendly units.
: [[API UnitIsBattlePet|UnitIsBattlePet]](?) -
: [[API UnitIsBattlePetCompanion|UnitIsBattlePetCompanion]](?) -
: [[API UnitIsCharmed|UnitIsCharmed]]("unit") - Returns true if the specified unit is charmed, false otherwise.
: [[API UnitIsConnected|UnitIsConnected]]("unit") - Returns 1 if the specified unit is connected or npc, nil if offline or not a valid unit.
: [[API UnitIsControlling|UnitIsControlling]](?) -
: [[API UnitIsCorpse|UnitIsCorpse]]("unit") - Returns true if the specified unit is a corpse, false otherwise.
: [[API UnitIsDead|UnitIsDead]]("unit") - Returns true if the specified unit is dead, nil otherwise.
: [[API UnitIsDeadOrGhost|UnitIsDeadOrGhost]]("unit") - Returns true if the specified unit is dead or a ghost, nil otherwise.
: [[API UnitIsDND|UnitIsDND]]("unit") - Only works for friendly units.
: [[API UnitIsEnemy|UnitIsEnemy]]("unit", "otherUnit") - Returns true if the specified units are enemies, false otherwise.
: [[API UnitIsFeignDeath|UnitIsFeignDeath]]("unit") - Returns true if the specified unit (must be a member of your group) is feigning death.''-- Added in 2.1''
: [[API UnitIsFriend|UnitIsFriend]]("unit", "otherUnit") - Returns true if the specified units are friends (PC of same faction or friendly NPC), false otherwise.
: [[API UnitIsGhost|UnitIsGhost]]("unit") - Returns true if the specified unit is a ghost, false otherwise.
: [[API UnitIsGroupAssistant|UnitIsGroupAssistant]](?) -
: [[API UnitIsMercenary|UnitIsMercenary]](?) -
: [[API UnitIsOtherPlayersBattlePet|UnitIsOtherPlayersBattlePet]](?) -
: [[API UnitIsOtherPlayersPet|UnitIsOtherPlayersPet]](?) -
: [[API UnitIsPVP|UnitIsPVP]]("unit") - Returns true if the specified unit is flagged for PVP, false otherwise.
: [[API UnitIsPVPFreeForAll|UnitIsPVPFreeForAll]]("unit") - Returns true if the specified unit is flagged for free-for-all PVP, false otherwise.
: [[API UnitIsPVPSanctuary|UnitIsPVPSanctuary]]("unit") - Returns whether the unit is in a PvP sanctuary, and therefore cannot be attacked by other players.
: [[API UnitIsPlayer|UnitIsPlayer]]("unit") - Returns true if the specified unit is a player character, false otherwise.
: [[API UnitIsPossessed|UnitIsPossessed]]("unit") - Returns whether the specified unit is currently under control of another (i.e. "pet" when casting Mind Control).
: [[API UnitIsQuestBoss|UnitIsQuestBoss]]("unit") - Returns true if the specified unit is the "boss" (objective) of a kill quest. If true, then the default UI displays a shield with a yellow "!" on it on the unit's unitframe.
: [[API UnitIsRaidOfficer|UnitIsRaidOfficer]]("unit") - Returns whether the specified unit is an officer in your raid.
: [[API UnitIsSameServer|UnitIsSameServer]]("unit") - Returns whether the specified unit is from the same server as the player's character.
: REMOVED [[API UnitIsTapped|UnitIsTapped]]("unit") - Returns true if the specified unit is tapped, false otherwise.
: REMOVED [[API UnitIsTappedByPlayer|UnitIsTappedByPlayer]]("unit") - Returns true if the specified unit is tapped by the player himself, otherwise false.
: REMOVED [[API UnitIsTappedByAllThreatList|UnitIsTappedByAllThreatList]]("unit") - Returns whether the specified unit is a community monster, i.e. whether all players engaged in combat with it will receive kill (quest) credit.
: [[API UnitIsTapDenied|UnitIsTapDenied]](?) -
: [[API UnitIsTrivial|UnitIsTrivial]]("unit") - Returns true if the specified unit is trivial (Trivial means the unit is "grey" to the player. false otherwise.
: [[API UnitIsUnconscious|UnitIsUnconscious]](?) -
: [[API UnitIsUnit|UnitIsUnit]]("unit", "otherUnit") - Determine if two units are the same unit.
: [[API UnitIsVisible|UnitIsVisible]]("unit") - 1 if visible, nil if not
: [[API UnitIsWildBattlePet|UnitIsWildBattlePet]](?) -
: [[API UnitLeadsAnyGroup|UnitLeadsAnyGroup]](?) -
: [[API UnitLevel|UnitLevel]]("unit") - Returns the level of a unit.
: [[API UnitName|UnitName]]("unit") - Returns the name (and realm name) of a unit.
: [[API UnitNumPowerBarTimers|UnitNumPowerBarTimers]](?) -
: [[API UnitOnTaxi|UnitOnTaxi]]("unit") - Returns 1 if unit is on a taxi.
: [[API UnitPVPName|UnitPVPName]]("unit") - Returns unit's name with PvP rank prefix (e.g., "Corporal Allianceguy").
: [[API UnitPlayerControlled|UnitPlayerControlled]]("unit") - Returns true if the specified unit is controlled by a player, false otherwise.
: [[API UnitPlayerOrPetInParty|UnitPlayerOrPetInParty]]("unit") - Returns 1 if the specified unit/pet is a member of the player's party, nil otherwise (returns nil for "player" and "pet") - Added in 1.12
: [[API UnitPlayerOrPetInRaid|UnitPlayerOrPetInRaid]]("unit") - Returns 1 if the specified unit/pet is a member of the player's raid, nil otherwise (returns nil for "player" and "pet") - Added in 1.12
: [[API UnitPower|UnitPower]]("unit"[,type]) - Returns current power of the specified unit (Replaces [[API UnitMana|UnitMana]]() as of WoW 3.0.2)
: [[API UnitPowerBarTimerInfo|UnitPowerBarTimerInfo]](?) -
: [[API UnitPowerMax|UnitPowerMax]]("unit"[,type]) - Returns max power of the specified unit (Replaces [[API UnitManaMax|UnitManaMax]]() as of WoW 3.0.2)
: [[API UnitPowerType|UnitPowerType]]("unit") - Returns a number corresponding to the power type (e.g., mana, rage or energy) of the specified unit.
: [[API UnitPrestige|UnitPrestige]](?) -
: [[API UnitRace|UnitRace]]("unit") - Returns the race name of the specified unit (e.g., "Human" or "Troll").
: [[API UnitRangedAttack|UnitRangedAttack]]("unit") - Returns the ranged attack number of the unit.
: [[API UnitRangedAttackPower|UnitRangedAttackPower]]("unit") - Returns the ranged attack power of the unit.
: [[API UnitRangedDamage|UnitRangedDamage]]("unit") - Returns the ranged attack speed and damage of the unit.
: [[API UnitRealmRelationship|UnitRealmRelationship]](?) -
: [[API UnitReaction|UnitReaction]]("unit", "otherUnit") - Returns a number corresponding to the reaction (aggressive, neutral or friendly) of the first unit towards the second unit.
: [[API UnitResistance|UnitResistance]]("unit", "resistanceIndex") - Returns the resistance statistics relevant to the specified unit and resistance type.
: [[API UnitSelectionColor|UnitSelectionColor]]("unit") - Returns RGBA values for the color of a unit's name.
: [[API UnitSetRole|UnitSetRole]](?) -
: [[API UnitSex|UnitSex]]("unit") - Returns a code indicating the gender of the specified unit, if known. (1=unknown, 2=male, 3=female) <small>&larr; changed in 1.11!</small>
: [[API UnitShouldDisplayName|UnitShouldDisplayName]](?) -
: [[API UnitSpellHaste|UnitSpellHaste]]("unit" or "name") - Returns the current spell haste percentage for a unit.
: [[API UnitStagger|UnitStagger]](?) -
: [[API UnitStat|UnitStat]]("unit", statIndex) - Returns the statistics relevant to the specified unit and basic attribute (e.g., strength or intellect).
: [[API UnitThreatPercentageOfLead|UnitThreatPercentageOfLead]](?) -
: [[API UnitThreatSituation|UnitThreatSituation]]("unit", "mobUnit") - Returns the specified unit's threat status on a mob. (added in [[Patch 3.0]])
: [[API UnitUsingVehicle|UnitUsingVehicle]]("unit") - Returns whether the specified unit is currently using a vehicle (including transitioning between seats).
: [[API UnitXP|UnitXP]]("unit") - Returns the number of experience points the specified unit has in their current level. (only works on your player)
: [[API UnitXPMax|UnitXPMax]]("unit") - Returns the number of experience points the specified unit needs to reach their next level. (only works on your player)

=== Vehicle Functions ===
These functions were introduced in [[Patch 3.0.2]].
: [[API CanExitVehicle|CanExitVehicle]]() - Returns 1 if the player can be exit the Vehicle.
: [[API CanSwitchVehicleSeats|CanSwitchVehicleSeats]]() - Returns 1 if the player can Switch Seats in the Vehicle
: [[API CanEjectPassengerFromSeat|CanEjectPassengerFromSeat]](seat) - Returns 1 if the player can eject a passenger from a seat.
: [[API GetBattlefieldVehicleInfo|GetBattlefieldVehicleInfo]](index)
: [[API GetNumBattlefieldVehicles|GetNumBattlefieldVehicles]](index)
: [[API EjectPassengerFromSeat|EjectPassengerFromSeat]](seat) - Ejects a passenger from a seat.
: [[API IsUsingVehicleControls|IsUsingVehicleControls]]()
: [[API IsUsingVehicleControls|IsUsingVehicleControls]]()
: [[API IsVehicleAimAngleAdjustable|IsVehicleAimAngleAdjustable]]() - Returns 1 if the player can adjust the Aim Angle of the Vehicle.
: [[API IsVehicleAimPowerAdjustable|IsVehicleAimPowerAdjustable]]() - Returns 1 if the player can adjust the Aim Power of the Vehicle.
: [[API UnitControllingVehicle|UnitControllingVehicle]](unit)
: [[API UnitHasVehicleUI|UnitHasVehicleUI]](unit)
: [[API UnitInVehicle|UnitInVehicle]](unit)
: [[API UnitInVehicleControlSeat|UnitInVehicleControlSeat]](unit)
: [[API UnitSwitchToVehicleSeat|UnitSwitchToVehicleSeat]](unit, seatId)
: [[API UnitTargetsVehicleInRaidUI|UnitTargetsVehicleInRaidUI]](unit)
: [[API UnitVehicleSeatCount|UnitVehicleSeatCount]](unit)
: [[API UnitVehicleSeatInfo|UnitVehicleSeatInfo]](unit, seatId)
: [[API UnitVehicleSkin|UnitVehicleSkin]](unit)
: [[API VehicleAimDecrement|VehicleAimDecrement]]()
: [[API VehicleAimDownStart|VehicleAimDownStart]]()
: [[API VehicleAimDownStop|VehicleAimDownStop]]()
: [[API VehicleAimGetAngle|VehicleAimGetAngle]]()
: [[API VehicleAimGetNormAngle|VehicleAimGetNormAngle]]()
: [[API VehicleAimGetNormPower|VehicleAimGetNormPower]]()
: [[API VehicleAimIncrement|VehicleAimIncrement]]()
: [[API VehicleAimRequestAngle|VehicleAimRequestAngle]]()
: [[API VehicleAimRequestNormAngle|VehicleAimRequestNormAngle]]()
: [[API VehicleAimSetNormPower|VehicleAimSetNormPower]]()
: [[API VehicleAimUpStart|VehicleAimUpStart]]()
: [[API VehicleAimUpStop|VehicleAimUpStop]]()
: [[API VehicleCameraZoomIn|VehicleCameraZoomIn]](amount)
: [[API VehicleCameraZoomOut|VehicleCameraZoomOut]](amount)
: [[API VehicleExit|VehicleExit]]() - Exit the current Vehicle
: [[API VehicleNextSeat|VehicleNextSeat]]()
: [[API VehiclePrevSeat|VehiclePrevSeat]]()

=== Voice Chat Functions ===
These functions were introduced in [[Patch 2.2]].
: [[API AddMute|AddMute]]("name")
: [[API AddOrDelMute|AddOrDelMute]]("unit")
: [[API ChannelSilenceAll|ChannelSilenceAll]]()
: [[API ChannelSilenceVoice|ChannelSilenceVoice]]()
: [[API ChannelUnSilenceAll|ChannelUnSilenceAll]]()
: [[API ChannelUnSilenceVoice|ChannelUnSilenceVoice]]()
: [[API ChannelVoiceOff|ChannelVoiceOff]]()
: [[API ChannelVoiceOn|ChannelVoiceOn]]()
: [[API DelMute|DelMute]]("name")
: [[API DisplayChannelVoiceOff|DisplayChannelVoiceOff]]()
: [[API DisplayChannelVoiceOn|DisplayChannelVoiceOn]]()
: [[API GetActiveVoiceChannel|GetActiveVoiceChannel]]()
: [[API GetChannelDisplayInfo|GetChannelDisplayInfo]](id) - Returns the name of the channel according to the given id.
: [[API GetNumVoiceSessions|GetNumVoiceSessions]]() - Returns the number of voice sessions the client is currently in. Ignores those under the 'World' category.
: [[API GetSelectedDisplayChannel|GetSelectedDisplayChannel]]()
: [[API GetSelectedMute|GetSelectedMute]]()
: [[API GetMuteName|GetMuteName]](id) - Returns the name of a muted player.
: [[API GetMuteStatus|GetMuteStatus]]("unit", "channel") - Returns whether a particular unit is currently muted in a particular channel.
: [[API GetNumMutes|GetNumMutes]]() - Returns the number of people you currently have muted.
: [[API GetVoiceCurrentSessionID|GetVoiceCurrentSessionID]]()
: [[API GetVoiceSessionInfo|GetVoiceSessionInfo]](id) - Returns the name of the voice session according to the given id. Does not apply for channels under the 'World' category.
: [[API GetVoiceStatus|GetVoiceStatus]]("unit")
: [[API IsMuted|IsMuted]]("name")
: [[API IsSilenced|IsSilenced]]()
: [[API IsVoiceChatAllowed|IsVoiceChatAllowed]]() - Returns 1 if Voice Chat is enabled on the server, ''nil'' otherwise
: [[API IsVoiceChatEnabled|IsVoiceChatEnabled]]() - Returns 1 if Voice Chat is enabled for your client, ''nil'' otherwise
: [[API SetActiveVoiceChannelBySessionID|SetActiveVoiceChannelBySessionID]](id) - Set the active voice session to the session of the given id.
: [[API SetActiveVoiceChannel|SetActiveVoiceChannel]]()
: [[API SetSelectedDisplayChannel|SetSelectedDisplayChannel]]()
: [[API SetSelectedMute|SetSelectedMute]]()
: [[API UnitIsSilenced|UnitIsSilenced]]()
: [[API UnitIsTalking|UnitIsTalking]]() -
: [[API VoiceChat_ActivatePrimaryCaptureCallback|VoiceChat_ActivatePrimaryCaptureCallback]]()
: [[API VoiceChat_GetCurrentMicrophoneSignalLevel|VoiceChat_GetCurrentMicrophoneSignalLevel]]()
: [[API VoiceChat_IsPlayingLoopbackSound|VoiceChat_IsPlayingLoopbackSound]]()
: [[API VoiceChat_IsRecordingLoopbackSound|VoiceChat_IsRecordingLoopbackSound]]()
: [[API VoiceChat_PlayLoopbackSound|VoiceChat_PlayLoopbackSound]]()
: [[API VoiceChat_RecordLoopbackSound|VoiceChat_RecordLoopbackSound]]()
: [[API VoiceChat_StartCapture|VoiceChat_StartCapture]]()
: [[API VoiceChat_StopCapture|VoiceChat_StopCapture]]()
: [[API VoiceChat_StopPlayingLoopbackSound|VoiceChat_StopPlayingLoopbackSound]]()
: [[API VoiceChat_StopRecordingLoopbackSound|VoiceChat_StopRecordingLoopbackSound]]()
: [[API VoiceEnumerateCaptureDevices|VoiceEnumerateCaptureDevices]]()
: [[API VoiceEnumerateOutputDevices|VoiceEnumerateOutputDevices]]()
: [[API VoiceGetCurrentCaptureDevice|VoiceGetCurrentCaptureDevice]]()
: [[API VoiceGetCurrentOutputDevice|VoiceGetCurrentOutputDevice]]()
: [[API VoiceIsDisabledByClient|VoiceIsDisabledByClient]]()
: [[API VoicePushToTalkStart|VoicePushToTalkStart]]()
: [[API VoicePushToTalkStop|VoicePushToTalkStop]]()
: [[API VoiceSelectCaptureDevice|VoiceSelectCaptureDevice]]()
: [[API VoiceSelectOutputDevice|VoiceSelectOutputDevice]]()

=== Void Storage Functions ===
[[Void Storage]] was added in [[Patch 4.3.0]].
: [[API CanUseVoidStorage|CanUseVoidStorage]]() - Returns if the player has access to the Void Storage
: [[API ClearVoidTransferDepositSlot|ClearVoidTransferDepositSlot]](slotIndex) - Clears the specified Void Transfer deposit slot
: [[API ClickVoidStorageSlot|ClickVoidStorageSlot]](slotIndex[, isRightClick]) - Clicks the specified Void Storage slot
: [[API ClickVoidTransferDepositSlot|ClickVoidTransferDepositSlot]](slotIndex[, isRightClick]) - Clicks the specified Void Transfer deposit slot
: [[API ClickVoidTransferWithdrawalSlot|ClickVoidTransferWithdrawalSlot]](slotIndex[, isRightClick]) - Clicks the specified Void Transfer withdrawal slot
: [[API CloseVoidStorageFrame|CloseVoidStorageFrame]]()
: [[API ExecuteVoidTransfer|ExecuteVoidTransfer]]() - Applies all pending void transfers (and pays for the cost of any deposited items)
: [[API GetNumVoidTransferDeposit|GetNumVoidTransferDeposit]]() - Returns the number of items being deposited into the Void Storage
: [[API GetNumVoidTransferWithdrawal|GetNumVoidTransferWithdrawal]]() - Returns the number of items being withdrawed from the Void Storage
: [[API GetVoidItemHyperlinkString|GetVoidItemHyperlinkString]](slotIndex) - Returns the item link of an item in void storage.
: [[API GetVoidItemInfo|GetVoidItemInfo]](slotIndex) - Returns <tt>itemID, textureName, locked, recentDeposit, isFiltered</tt>
: [[API GetVoidTransferCost|GetVoidTransferCost]]() - Returns the total Void Transfer cost
: [[API GetVoidTransferDepositInfo|GetVoidTransferDepositInfo]](slotIndex) - Returns <tt>itemID, textureName</tt>
: [[API GetVoidTransferWithdrawalInfo|GetVoidTransferWithdrawalInfo]](slotIndex) - Returns <tt>itemID, textureName</tt>
: [[API IsVoidStorageReady|IsVoidStorageReady]]()
: [[API UnlockVoidStorage|UnlockVoidStorage]]() - Pays for and activates the Void Storage

=== World Battlefield Functions ===
The following functions are used for population-limited world PvP zones, like [[Lake Wintergrasp]] or [[Tol Barad]].
: [[API BattlefieldMgrEntryInviteResponse|BattlefieldMgrEntryInviteResponse]](queueId, accept)
: [[API BattlefieldMgrExitRequest|BattlefieldMgrExitRequest]](queueId)
: [[API BattlefieldMgrQueueInviteResponse|BattlefieldMgrQueueInviteResponse]](queueId, accept)
: [[API BattlefieldMgrQueueRequest|BattlefieldMgrQueueRequest]] - ?
: [[API CanHearthAndResurrectFromArea|CanHearthAndResurrectFromArea]]() - Returns whether you can currently be resurrected and teleported out of the world PvP zone.
: [[API HearthAndResurrectFromArea|HearthAndResurrectFromArea]]() - Resurrects the player, and ports them out of the world PvP zone.
: [[API CanQueueForWintergrasp|CanQueueForWintergrasp]]() - Returns whether you can queue for Lake Wintergrasp at the moment.
: [[API GetNumWorldPVPAreas|GetNumWorldPVPAreas]]() - Returns the number of world PvP zones available.
: [[API GetWorldPVPAreaInfo|GetWorldPVPAreaInfo]](index) - Returns information about a world PvP zone.
: [[API GetOutdoorPVPWaitTime|GetOutdoorPVPWaitTime]](index) - Returns the number of seconds until the next battle in a given world PvP zone.
: [[API GetWorldPVPQueueStatus|GetWorldPVPQueueStatus]](queueId)

=== Who Functions ===
: [[API GetNumWhoResults|GetNumWhoResults]]() - Return the number of entries resulting from your most recent /who query.
: [[API GetWhoInfo|GetWhoInfo]](index)
: [[API SendWho|SendWho]]("filter") - Send a who request to the server.
: [[API SetWhoToUI|SetWhoToUI]](toUIFlag) - Indicate that who request results should be delivered as WHO_LIST_UPDATE instead of to chat.
: [[API SortWho|SortWho]](sortType) - Sorts an existing /who list; displays the Who List frame if not visible.

== See also ==
* [[Widget API]] documents methods that can be called on widgets objects
* [[Lua functions]] describe the language and library functions available in the WoW client.
* [[API change summaries]] document changes made in WoW patches, as summarized on the US official UI forum.
* [[User Defined Functions]] lists various useful user-contributed functions.
** [[:Category:Function Libraries]] contains some AddOns that do nothing but provide you with utility functions.
* [[World of Warcraft Non-Public API]] for functions unusable by players.

== External links ==
{{elink|type=wowus|site=US official UI and Macro forum|link=http://us.battle.net/wow/en/forum/1011693/}}
{{elink|type=woweu|site=EU official Interface and Macros forum|link=http://eu.battle.net/wow/en/forum/874706/}}
[[Category:Macros]]
[[Category:Interface customization]]
[[Category:World of Warcraft API| World of Warcraft API]]
[[Category:UI]]